{"version":3,"sources":["webpack:///./node_modules/ant-design-vue/es/vc-tooltip/placements.js","webpack:///./node_modules/ant-design-vue/es/vc-tree/src/Tree.js","webpack:///./node_modules/ant-design-vue/es/vc-tree/src/index.js","webpack:///./node_modules/ant-design-vue/es/vc-tree-select/src/SelectNode.js","webpack:///./node_modules/ant-design-vue/es/vc-tree-select/src/util.js","webpack:///./node_modules/ant-design-vue/es/vc-tree-select/src/SelectTrigger.js","webpack:///./node_modules/ant-design-vue/es/vc-tree-select/src/Base/BaseSelector.js","webpack:///./node_modules/ant-design-vue/es/vc-tree-select/src/Selector/SingleSelector.js","webpack:///./node_modules/ant-design-vue/es/vc-tree-select/src/SearchInput.js","webpack:///./node_modules/ant-design-vue/es/vc-tree-select/src/Selector/MultipleSelector/Selection.js","webpack:///./node_modules/ant-design-vue/es/vc-tree-select/src/Selector/MultipleSelector/index.js","webpack:///./node_modules/ant-design-vue/es/vc-tree-select/src/Base/BasePopup.js","webpack:///./node_modules/ant-design-vue/es/vc-tree-select/src/Popup/SinglePopup.js","webpack:///./node_modules/ant-design-vue/es/vc-tree-select/src/Popup/MultiplePopup.js","webpack:///./node_modules/ant-design-vue/es/vc-tree-select/src/Select.js","webpack:///./node_modules/ant-design-vue/es/vc-tree-select/src/index.js","webpack:///./node_modules/ant-design-vue/es/vc-tree/index.js","webpack:///./node_modules/ant-design-vue/es/vc-tree-select/src/strategies.js","webpack:///./node_modules/ant-design-vue/es/vc-time-picker/Header.js","webpack:///./node_modules/ant-design-vue/es/vc-time-picker/Select.js","webpack:///./node_modules/ant-design-vue/es/vc-time-picker/Combobox.js","webpack:///./node_modules/ant-design-vue/es/vc-time-picker/Panel.js","webpack:///./node_modules/ant-design-vue/es/vc-tooltip/Content.js","webpack:///./node_modules/ant-design-vue/es/vc-tooltip/Tooltip.js","webpack:///./node_modules/ant-design-vue/es/vc-tooltip/index.js","webpack:///./node_modules/ant-design-vue/es/vc-tree/src/util.js","webpack:///./node_modules/ant-design-vue/es/vc-tree/src/TreeNode.js","webpack:///./node_modules/ant-design-vue/es/vc-tree-select/index.js","webpack:///./node_modules/ant-design-vue/es/vc-time-picker/placements.js","webpack:///./node_modules/ant-design-vue/es/vc-time-picker/TimePicker.js"],"names":[],"mappings":";;;;;;AAAA;AAAA;AACA;AACA;AACA;;AAEA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,oFAAU,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClFqC;AACK;AACM;AACpB;AACP;AACV;AACN;AAC+D;AAC5C;AACH;AACU;AAC2L;;AAEnP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,WAAW,4BAAS;AACpB,SAAS,8CAAgB;AACzB,eAAe,4BAAS;AACxB,cAAc,4BAAS,YAAY,4BAAS,SAAS,4BAAS;AAC9D,cAAc,4BAAS;AACvB,cAAc,4BAAS;AACvB,cAAc,4BAAS;AACvB,cAAc,4BAAS;AACvB,UAAU,4BAAS,YAAY,4BAAS,SAAS,4BAAS;AAC1D,eAAe,4BAAS;AACxB,gBAAgB,4BAAS;AACzB,cAAc,4BAAS;AACvB,cAAc,4BAAS;AACvB,eAAe,4BAAS,YAAY,4BAAS,SAAS,4BAAS;AAC/D,mBAAmB,4BAAS;AAC5B,eAAe,4BAAS;AACxB,yBAAyB,4BAAS;AAClC,sBAAsB,4BAAS;AAC/B,sBAAsB,4BAAS;AAC/B,yBAAyB,4BAAS;AAClC,kBAAkB,4BAAS;AAC3B,wBAAwB,4BAAS;AACjC,iBAAiB,4BAAS,YAAY,4BAAS,QAAQ,4BAAS;AAChE,yBAAyB,4BAAS;AAClC,kBAAkB,4BAAS;AAC3B;AACA;AACA;AACA;AACA;AACA,cAAc,4BAAS;AACvB,gBAAgB,4BAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,4BAAS;AAC7B,wBAAwB,4BAAS;AACjC,mBAAmB,4BAAS,YAAY,4BAAS,SAAS,4BAAS;AACnE,kBAAkB,4BAAS;AAC3B,kBAAkB,4BAAS;AAC3B,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,IAAI,iBAAO;AACX,IAAI,iBAAO;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAQ,GAAG,uCAAuC,4CAAc;AAC3E,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;;AAGH,SAAS,iBAAQ,GAAG;AACpB;AACA,kDAAkD,4CAAc;AAChE;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA,oBAAoB,iBAAQ,GAAG;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mBAAmB,yCAAiB;AACpC,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,6CAAqB;AAC/C;AACA;AACA;;AAEA;;AAEA;AACA;AACA,sGAAsG,2CAAmB;AACzH,OAAO;AACP,2CAA2C,2BAAkB;AAC7D,OAAO;AACP,uFAAuF,2CAAmB;AAC1G;;AAEA;AACA;AACA;AACA,mCAAmC,wCAAgB;AACnD,SAAS;AACT,mCAAmC,wCAAgB;AACnD;AACA;;AAEA;AACA;AACA;;AAEA;AACA,6BAA6B,wCAAgB;AAC7C,SAAS;AACT,6BAA6B,wCAAgB;AAC7C,SAAS;AACT;AACA,6BAA6B,wCAAgB;AAC7C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,8BAA8B,oCAAY;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;;AAEA,qBAAqB,sCAAQ;AAC7B;;AAEA;AACA,wBAAwB,wCAAgB;AACxC,uBAAuB,8BAAM;AAC7B,OAAO;AACP,gCAAgC,2BAA2B;AAC3D,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA,yBAAyB,wCAAgB;;AAEzC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,gCAAgC,8BAAM;AACtC,eAAe,qCAAO;AACtB;AACA;AACA,aAAa;AACb;AACA,qCAAqC,0DAA0D;AAC/F,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,wCAAgB;;AAE3C;;AAEA;AACA;AACA,SAAS;AACT;AACA,+BAA+B,2BAA2B;AAC1D,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP,gCAAgC,2BAA2B;AAC3D,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP,8BAA8B,2BAA2B;AACzD;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA,OAAO;;AAEP;AACA,QAAQ,iBAAO;AACf;AACA;;AAEA,mBAAmB,gCAAQ;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,4BAA4B,4CAAc;AAC1C;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,8BAAM;AAC7B,OAAO;AACP;AACA,OAAO;AACP,uBAAuB,8BAAM;AAC7B;;AAEA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA,OAAO;;AAEP,iCAAiC,8BAA8B;;AAE/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA,6BAA6B,4CAAc;AAC3C;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,8BAAM,6BAA6B,8BAAM;AAC7E,8BAA8B,8BAAM;AACpC,sBAAsB;;AAEtB;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;;AAET,mCAAmC,4BAA4B;AAC/D,OAAO;AACP,4BAA4B,oCAAY;AACxC;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA,+CAA+C,uBAAuB;AACtE,SAAS;;AAET;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAiC,4CAAc;AAC/C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,gCAAgC,8BAAM;AACtC,iCAAiC,8BAAM;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,WAAW;;AAEX;AACA,0BAA0B,8BAAM;AAChC;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;;AAEA,6BAA6B,4CAAc;AAC3C;AACA;;AAEA;;;AAGA;AACA;;AAEA,MAAM,iBAAO;;AAEb;AACA,uBAAuB,8BAAM;AAC7B,OAAO;AACP,uBAAuB,8BAAM;AAC7B;;AAEA,iCAAiC,8BAA8B;AAC/D;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA,uCAAuC,8BAA8B;AACrE,SAAS;AACT;;AAEA;AACA,KAAK;AACL;AACA,iCAAiC,2BAA2B;AAC5D,KAAK;AACL;AACA,iCAAiC,2BAA2B;AAC5D,KAAK;AACL;AACA;AACA,iCAAiC,2BAA2B;AAC5D,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,4CAAc;AAChC;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,mCAAW;AAC3B;AACA;AACA;AACA;AACA;AACA,QAAQ,wCAAgB;AACxB;AACA;;AAEA,aAAa,qCAAY;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,MAAM,0CAAc;AACpB,iBAAiB,oBAAU,YAAY,wBAAe,GAAG;AACzD,gBAAgB;AAChB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP,OAAO,mCAAW;AAClB;AACA,OAAO;AACP;AACA;AACA;;AAEgB;;AAED,sFAAc,MAAM,E;;;;;ACtrBnC;AAAA;AAAyC;AACP;AAClC,IAAI,YAAY,2BAAQ;AACxB,QAAS,YAAY,2BAAQ;;AAEH;AACX,iFAAS,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACN6B;AACZ;AACzC;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA,SAAS,mBAAQ;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA,KAAK;AACL,wBAAwB,iBAAQ,GAAG;AACnC,UAAU,iBAAQ,GAAG;AACrB;AACA,mBAAmB,iBAAQ,GAAG;AAC9B,KAAK;AACL;AACA,MAAM,mBAAQ;AACd;AACA;AACA;AACA;AACA,CAAC,E;;;;;;;;ACvCkD;AACW;AACT;AACvB;AACH;AACyI;AAC9H;AACiB;AACyB;;AAEhF;;AAEA;AACO;AACP;AACA;AACA;AACA;AACA;;AAEO;AACP;;AAEA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACO;AACP;AACA;AACA;;AAEO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,gBAAgB,iBAAQ,GAAG;AAC3B;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;AACH;;AAEA;AACA,IAAI,WAAM;;AAEH;AACP,EAAE,WAAM;AACR;;AAEO;AACP,EAAE,WAAM;AACR,wBAAwB,WAAM;AAC9B;;AAEO,SAAS,mBAAc;AAC9B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gBAAgB,iBAAQ,GAAG;AAC3B;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;;AAEA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAyB,sBAAsB;AAC/C;AACA;AACA;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;;AAEA;AACA,iBAAiB,4CAAc;;AAE/B;AACA;AACA;AACA;AACA,mBAAmB,sCAAQ;AAC3B;AACA;AACA,KAAK;AACL;AACA;AACA,QAAQ,UAAU;AAClB,QAAQ,0CAAc,cAAc,oBAAoB,0CAAY,mBAAmB;AACvF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACO;AACP;;AAEA;AACA,MAAM,mBAAc;AACpB;AACA,sDAAsD,gBAAO;AAC7D;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEO;AACP;AACA;AACA;;AAEA;AACA,gBAAgB,0CAAY;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;;AAEL,gCAAgC,iCAAW;AAC3C;AACA;AACA;;AAEA,oBAAoB,0CAAY;AAChC;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,gCAAgC,gCAAU;AAC1C;AACA;;AAEA;AACA;AACA;AACA;;AAEA,oBAAoB,0CAAY;AAChC;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;;AAEvC;AACA;AACA;AACA;AACA;AACA,WAAW,6BAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,iBAAO;AACb;AACA;;AAEA;AACA;;AAEA;AACA;;AAEO;AACP,SAAS,yCAAmB,eAAe,6BAA6B;AACxE;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS,iBAAQ,GAAG;AACpB;AACA,GAAG;AACH;;AAEA;AACA,cAAc,0CAAY;AAC1B;;AAEA;AACA;AACA;AACA,IAAI,iBAAO;AACX;AACA;AACA;;AAEO;AACP,SAAS,6CAAuB;AAChC;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACO;AACP;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;;AAEO,mBAAmB,4BAAc,C;;;;;;AC9csB;AACK;AACrB;;AAEP;AACJ;AACC;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,4BAAS;AACvB,gBAAgB,4BAAS;AACzB,eAAe,4BAAS;AACxB,wBAAwB,4BAAS;AACjC,uBAAuB,4BAAS;AAChC,mBAAmB,4BAAS;AAC5B,oBAAoB,4BAAS;AAC7B,eAAe,4BAAS;AACxB,uBAAuB,4BAAS;;AAEhC,8BAA8B,4BAAS;;AAEvC;AACA,gBAAgB,4BAAS;AACzB,uBAAuB,4BAAS;AAChC,2BAA2B,4BAAS;AACpC,kBAAkB,4BAAS;AAC3B,UAAU,4BAAS;AACnB,GAAG;AACH;AACA,sBAAsB,SAAS;AAC/B,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM,6BAAO;AACb,MAAM,0CAAc;AACpB;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0BAA0B,oBAAU,qCAAqC,EAAE,wBAAe,6DAA6D,wBAAe;AACtK;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEe,mEAAa,E;;;;;ACtIkC;AACK;AACd;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACoC;AACa;AACb;AAC+C;AAClC;AAC1C,IAAI,8BAAiB;AAC5B;AACA,eAAe,4BAAS;AACxB,eAAe,4BAAS;AACxB,UAAU,4BAAS;AACnB,uBAAuB,4BAAS;AAChC,gBAAgB,4BAAS;AACzB,eAAe,4BAAS;AACxB;AACA;AACA;AACA,oBAAoB,4BAAS;AAC7B,0BAA0B,4BAAS;AACnC;AACA,YAAY,4BAAS;AACrB,eAAe,4BAAS;AACxB,eAAe,4BAAS;AACxB,gBAAgB,4BAAS;AACzB,iBAAiB,4BAAS;AAC1B,cAAc,4BAAS;AACvB,aAAa,4BAAS;AACtB;AACA;;AAEA;AACe;AACf;AACA;AACA,aAAa,4BAAS;AACtB,WAAW,8CAAgB,CAAC,iBAAQ,GAAG,EAAE,8BAAiB;;AAE1D;AACA,uBAAuB,4BAAS;AAChC,yBAAyB,4BAAS;AAClC,gBAAgB,4BAAS;AACzB,KAAK;AACL;AACA,KAAK;AACL;AACA,qBAAqB;AACrB;AACA,SAAS;AACT,KAAK;AACL;AACA,oBAAoB,SAAS;AAC7B,KAAK;;AAEL;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,wBAAwB,kDAAoB;AAC5C;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,kDAAoB;AAC5C;AACA;AACA,WAAW,sDAAsD,kBAAkB,EAAE;AACrF;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ,0CAAc;AACtB;AACA;AACA;AACA,WAAW;;AAEX,mBAAmB,oBAAU,wCAAwC,EAAE,wBAAe,0CAA0C,wBAAe,wDAAwD,wBAAe,kDAAkD,wBAAe,kDAAkD,wBAAe;AACxV,SAAS;AACT;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,qBAAqB,oBAAU;AAC/B,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA,C;;ACnMqD;AACsB;AACzC;AACyB;AACvB;AACpC,IAAI,uBAAQ,GAAG,iBAAgB;;AAE/B;AACA;AACA,SAAS,8BAAiB;AAC1B;AACA,uBAAuB,SAAS;AAChC,GAAG;;AAEH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,uBAAuB,QAAQ,OAAO,SAAS;AAC1D,8DAA8D;AAC9D;AACA;AACA,OAAO;AACP;AACA;AACA,WAAW,qEAAqE;AAChF;AACA;AACA;;AAEA;AACA;AACA,SAAS,8CAA8C;AACvD;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA,aAAa,iBAAQ,GAAG,EAAE,4CAAc;AACxC;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,aAAa,uBAAQ;AACrB;AACA;;AAEe,0EAAc,E;;AC3EiC;AACT;AACrD;AACA;AACA;AACA;AACA;AACA;;AAE8C;AACX;;AAEnC;AACA;AACA;AACA,UAAU,4BAAS;AACnB,iBAAiB,4BAAS;AAC1B,eAAe,4BAAS;AACxB,cAAc,4BAAS;AACvB,uBAAuB,4BAAS;AAChC,eAAe,4BAAS;AACxB,YAAY,4BAAS;AACrB,GAAG;AACH;AACA,mBAAmB;AACnB;AACA,OAAO;AACP,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,oBAAoB,SAAS;AAC7B,0BAA0B,SAAS;AACnC,qBAAqB,iBAAQ,GAAG;AAChC,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,iBAAQ,GAAG;AACpC,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO,8CAA8C;AACrD,kBAAkB,0CAAc;AAChC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT,+CAA+C;AAC/C;AACA,QAAQ,0CAAc;AACtB;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEe,+DAAW,E;;AC5LoC;AACV;AAC6B;AACb;AAChB;;AAEpD;AACA,WAAW,4BAAS;AACpB;AACA,eAAe,4BAAS;AACxB,sBAAsB,4BAAS;AAC/B;;AAEA,WAAW,4BAAS;AACpB,WAAW,4BAAS,YAAY,4BAAS,SAAS,4BAAS;AAC3D,gBAAgB,4BAAS;AACzB,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM,0CAAc;AACpB,eAAe,kBAAkB;AACjC,OAAO,GAAG,QAAQ,sBAAsB,EAAE;AAC1C;AACA;;AAEA,iBAAiB,OAAO;AACxB,SAAS;AACT,mDAAmD;AACnD;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,SAAS,kDAAoB;AAC7B;AACA;AACA,SAAS,qDAAqD;AAC9D;AACA;AACA;AACA;AACA;;AAEe,wEAAS,E;;;;;ACnEsC;AACW;AACpB;AACD;AACb;AACuC;AAClC;AACR;AACgC;AACE;AAClB;AACpD;;AAEA,IAAI,yBAAQ,GAAG,iBAAgB;;AAE/B;AACA;AACA;;AAEA;AACA,WAAW,4BAAS;AACpB,SAAS,iBAAQ,GAAG,EAAE,8BAAiB,IAAI,eAAW;AACtD,uBAAuB,4BAAS;AAChC,cAAc,4BAAS;AACvB,iBAAiB,4BAAS;AAC1B,kBAAkB,4BAAS;AAC3B,iBAAiB,4BAAS;AAC1B,uBAAuB,4BAAS;;AAEhC;AACA,GAAG;AACH;AACA,mBAAmB;AACnB;AACA,OAAO;AACP,GAAG;AACH;AACA,oBAAoB,SAAS;AAC7B,GAAG;;AAEH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;;AAEX;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,qEAAqE,aAAa;AAClF;AACA;;AAEA,8DAA8D,2BAAkB;AAChF,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,0BAAS;AACnB,UAAU,0CAAc;AACxB,mBAAmB,iBAAQ,GAAG;AAC9B;AACA;AACA,aAAa;AACb,gBAAgB,iBAAQ,GAAG,eAAe,mCAAmC;AAC7E,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA,gCAAgC,kDAAoB,8BAA8B;AAClF;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA,UAAU,0BAAS;AACnB,UAAU,0CAAc;AACxB,mBAAmB,iBAAQ,GAAG;AAC9B;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS,kFAAkF;AAC3F;AACA,UAAU,eAAW;AACrB;AACA,mBAAmB,iBAAQ,GAAG;AAC9B;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,8BAA8B,6CAAkB;AAChD;AACA;AACA,SAAS;AACT;AACA;AACA,UAAU,0CAAc,GAAG,qBAAqB;AAChD;AACA;AACA;AACA;AACA;AACA,SAAS,6BAA6B;AACtC,SAAS;AACT;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA,MAAM,yBAAQ;AACd;AACA,eAAe,iBAAQ,GAAG;AAC1B;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEe,8EAAgB,E;;AC3N0C;AACpB;AACvB;AACmB;AACT;AACS;;AAEjD;AACA;AACA;AACA;AACA;AACA,SAAS,kCAAwB;AACjC,4BAA4B;AAC5B;AACA,oDAAoD;AACpD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,gBAAgB,iBAAQ,GAAG;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,0CAA0C,2BAAkB;AAC5D;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,WAAW,4BAAS;AACpB;AACA;AACA,eAAe,4BAAS;AACxB,sBAAsB,4BAAS;AAC/B,eAAe,4BAAS;AACxB,2BAA2B,4BAAS;AACpC,mBAAmB,4BAAS;AAC5B;AACA,cAAc,4BAAS;AACvB,cAAc,4BAAS;AACvB,wBAAwB,4BAAS;AACjC,mBAAmB,4BAAS;AAC5B,uBAAuB,4BAAS;AAChC,0BAA0B,4BAAS;AACnC,6BAA6B,4BAAS;AACtC,sBAAsB,4BAAS;AAC/B,cAAc,4BAAS;AACvB,cAAc,4BAAS;AACvB;AACA,iBAAiB,4BAAS;AAC1B,eAAe,4BAAS;AACxB,uBAAuB,4BAAS;AAChC,qBAAqB,4BAAS;;AAE9B,YAAY,4BAAS;AACrB,kBAAkB,4BAAS;AAC3B;AACA,kBAAkB,4BAAS;AAC3B;;AAEA,qBAAqB,4BAAS;AAC9B,GAAG;AACH;AACA,mBAAmB;AACnB;AACA,OAAO;AACP,GAAG;AACH;AACA;AACA,kBAAkB,kCAAwB;AAC1C;AACA;AACA,GAAG;AACH;AACA,IAAI,iBAAO;AACX;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,kCAAkC,2BAAkB;AACpD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAQ,GAAG,SAAS,kCAAwB;AACvD,GAAG;;AAEH;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,uBAAuB,oCAAoC;AAC3D;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA,qBAAqB,0BAA0B;AAC/C,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,SAAS,oCAAoC;AAC7C;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,eAAe,iBAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,eAAI;AACpB;;AAEA;AACA;AACA;AACA,gBAAgB,4CAA4C;AAC5D;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEe,4DAAS,E;;ACtT6B;AACJ;AACP;AACD;AACL;;AAEpC;AACA;AACA,SAAS,iBAAQ,GAAG,EAAE,cAAS,QAAQ,eAAW;AAClD,iBAAiB,4BAAS;AAC1B,gBAAgB,4BAAS;AACzB,uBAAuB,4BAAS;AAChC,cAAc,4BAAS;AACvB,uBAAuB,4BAAS;AAChC,GAAG;AACH;AACA,oBAAoB,SAAS;AAC7B,GAAG;;AAEH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;;AAEX;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA,SAAS,yCAAyC;AAClD,WAAW,eAAW;AACtB,iBAAiB,iBAAQ,GAAG,gBAAgB,6CAA6C;AACzF;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA,GAAG;AACH;AACA;;AAEA,aAAa,cAAS;AACtB,aAAa,iBAAQ,GAAG,gBAAgB,8DAA8D;AACtG;AACA,KAAK;AACL;AACA;;AAEe,iEAAW,E;;ACrFgB;;AAE3B,gEAAS,E;;ACFsC;AACW;AACpB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEwC;AAClB;AACQ;AACgB;AACJ;;AAEE;AACW;AACI;AACb;AACI;;AAEe;AACnB;AAC8O;AACtP;AAC2E;AACjH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,WAAW,4BAAS;AACpB,SAAS,8CAAgB;AACzB,eAAe,4BAAS;AACxB,gBAAgB,4BAAS;AACzB,cAAc,4BAAS;AACvB,eAAe,4BAAS;AACxB,UAAU,4BAAS;AACnB,WAAW,4BAAS;;AAEpB,eAAe,4BAAS;;AAExB,iBAAiB,4BAAS;AAC1B,kBAAkB,4BAAS;;AAE3B,gBAAgB,4BAAS;AACzB,iBAAiB,4BAAS;AAC1B,gBAAgB,4BAAS;AACzB,iBAAiB,4BAAS;AAC1B,0BAA0B,4BAAS;AACnC,uBAAuB,4BAAS;AAChC,cAAc,4BAAS;AACvB,cAAc,4BAAS;AACvB,kBAAkB,4BAAS;AAC3B,iBAAiB,4BAAS;AAC1B,uBAAuB,4BAAS,YAAY,4BAAS,MAAM,4BAAS;AACpE,sBAAsB,4BAAS;AAC/B,yBAAyB,4BAAS,QAAQ,8BAAQ,EAAE,iCAAW,EAAE,gCAAU;AAC3E,uBAAuB,4BAAS;AAChC,mBAAmB,4BAAS;AAC5B,2BAA2B,4BAAS;AACpC,8BAA8B,4BAAS;AACvC,cAAc,4BAAS;AACvB,wBAAwB,4BAAS,YAAY,4BAAS,OAAO,4BAAS;AACtE,wBAAwB,4BAAS;AACjC,uBAAuB,4BAAS;AAChC,mBAAmB,4BAAS,YAAY,4BAAS,MAAM,4BAAS,SAAS,4BAAS;AAClF;AACA,uBAAuB,4BAAS;AAChC,cAAc,4BAAS;AACvB,cAAc,4BAAS;AACvB,0BAA0B,4BAAS;AACnC,6BAA6B,4BAAS;AACtC,sBAAsB,4BAAS;AAC/B,cAAc,4BAAS;AACvB,oBAAoB,4BAAS,YAAY,4BAAS,OAAO,4BAAS;;AAElE,qBAAqB,4BAAS;AAC9B,uBAAuB,4BAAS;;AAEhC;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,4BAAS;AACzB,oBAAoB,4BAAS;AAC7B,eAAe,4BAAS;AACxB,0BAA0B,4BAAS;AACnC,eAAe,4BAAS;AACxB,eAAe,4BAAS;AACxB,gBAAgB,4BAAS;AACzB,kBAAkB,4BAAS;AAC3B,qBAAqB,4BAAS;AAC9B,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,yBAAyB,gCAAU;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,GAAG;;AAEH;AACA,IAAI,iBAAO;AACX;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,SAAS;AAChC,4BAA4B,SAAS;;AAErC;AACA;AACA,kBAAkB,cAAc;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAQ,GAAG;AACtB,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH,SAAS,iBAAQ,GAAG;AACpB;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,GAAG;;;AAGH;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,iBAAQ,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA,OAAO;;AAEP;AACA;;AAEA,wDAAwD;;AAExD;AACA,aAAa,sBAAY;AACzB;AACA;AACA,OAAO;;AAEP;AACA;AACA,2BAA2B,iBAAQ;AACnC;AACA;AACA;AACA,SAAS,uDAAuD;AAChE,oBAAoB,iBAAiB,IAAI,mBAAmB;AAC5D;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ,oBAAoB,yCAAW;AAC/B;;AAEA;AACA;AACA,0BAA0B,qBAAqB;AAC/C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gCAAgC,mBAAmB;AACnD;AACA,SAAS;AACT;;AAEA;AACA,8BAA8B,mBAAmB;AACjD;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sCAAsC,2BAAkB,wBAAwB,2BAAkB;AAClG;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,8BAA8B,YAAY;AAC1C;;AAEA;;;AAGA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA,sCAAsC,mBAAmB;AACzD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,mCAAmC,0CAAY;AAC/C;AACA;AACA;;AAEA,sCAAsC,aAAa;AACnD;;AAEA;AACA;AACA,0CAA0C,kBAAkB;AAC5D;;AAEA;AACA;AACA,qEAAqE,mBAAmB;AACxF,OAAO;;AAEP;AACA,KAAK;;AAEL;AACA;AACA,qBAAqB,iBAAiB;AACtC,KAAK;AACL;AACA,qBAAqB,kBAAkB;;AAEvC;AACA,wBAAwB,cAAc;AACtC,KAAK;;;AAGL;AACA;AACA;AACA;;;AAGA;AACA,aAAa,0BAAO,QAAQ,0BAAO;AACnC;AACA;AACA,OAAO,UAAU,0BAAO;AACxB;AACA,OAAO,WAAW,0BAAO,KAAK,0BAAO,OAAO,0BAAO,OAAO,0BAAO;AACjE;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,YAAY;AAChC,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;AACT;AACA,sCAAsC,eAAe;AACrD;AACA;AACA,WAAW;AACX;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,4CAA4C;AAC5C,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,+BAA+B,0CAAY;AAC3C;AACA;AACA,OAAO;AACP;AACA;;AAEA;;AAEA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,0CAAY;AAChC;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,oBAAoB,YAAY;AAChC,SAAS;AACT,oBAAoB,YAAY;AAChC;AACA,WAAW;AACX;AACA;AACA,sBAAsB,0CAAY;AAClC;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,iBAAQ,GAAG;AACjC;AACA;AACA,OAAO;;AAEP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA,yBAAyB,uBAAuB;AAChD,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA,6BAA6B,uBAAuB;AACpD;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,OAAO;;AAEP,gEAAgE,kBAAkB;AAClF,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,SAAS;;AAET;AACA;AACA,iDAAiD,2BAAkB,cAAc,2BAAkB;AACnG,gCAAgC,0CAAY;AAC5C;;AAEA;AACA,WAAW;AACX,SAAS;AACT,oBAAoB,YAAY,EAAE,0CAAY;AAC9C;AACA,WAAW;AACX;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA,iBAAiB,WAAW;AAC5B,SAAS;AACT,OAAO;AACP;AACA,OAAO;AACP,oCAAoC,eAAe;AACnD;;AAEA;AACA,KAAK;;;AAGL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mCAAmC,0CAAY;AAC/C;AACA;AACA;;AAEA;AACA,8BAA8B,aAAa;AAC3C,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;;AAGA,UAAU,0BAAO;AACjB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,4CAAc;AAChC;AACA;;AAEA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;;;AAGA,gEAAgE,yCAAyC;AACzG;AACA;;AAEA,iCAAiC,cAAc;AAC/C,KAAK;;;AAGL;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA,aAAa,mBAAe;AAC5B,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA,kBAAkB,4CAAc;AAChC;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,MAAM,aAAG;AACT,QAAQ,aAAG;AACX,OAAO;AACP,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,4CAAc;AAChC;AACA;AACA;;AAEA;;AAEA;AACA,kBAAkB,iBAAQ;AAC1B;AACA;AACA;AACA;AACA,kBAAkB;AAClB,SAAS;AACT,OAAO;;AAEP;AACA,8BAA8B,mBAAmB;;AAEjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4CAA4C,kBAAkB;AAC9D;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uCAAuC,2BAAkB,iBAAiB,2BAAkB;AAC5F,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,4CAAc;AAC9B;AACA;;AAEA;;AAEA;AACA,aAAa,iBAAQ,GAAG;AACxB;AACA;AACA;AACA,qCAAqC,2BAAkB,iBAAiB,2BAAkB;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,UAAU,iBAAQ,GAAG;AACrB;AACA,OAAO;AACP;AACA;AACA,qBAAqB,wCAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;;AAEL,6BAA6B,aAAa,GAAG,iBAAW;AACxD;;AAEA,gCAAgC,yBAAgB,GAAG,uBAAc;AACjE,gCAAgC,0CAAc;AAC9C;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,6BAA6B,wCAAU;AACvC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA,MAAM,iBAAa;AACnB;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,UAAU;AAC5B,kBAAkB,8BAAQ;AAC1B,qBAAqB,iCAAW;AAChC,oBAAoB,gCAAU;;AAE9B;AACA;;AAEe,qDAAM,E;;ACrmCrB;AAAA;AAAA;AAAA;AAA8B;AACQ;;AAE2B;AAC1D,eAAe,UAAU;;AAEjB,6EAAM,E;;;;;;;;ACNrB;AACa;;AAEb,iBAAiB,mBAAO,CAAC,MAAQ,E;;;;;;;;ACHjC;AAAA;AAAA;AAAO;AACA;AACA,8B;;;;;;;;;;;;;;;;;;;;;;;;ACFuD;AACnB;AACA;AACf;AAC+B;AAChB;;AAE3C;AACA,WAAW,4BAAS;AACpB;AACA,YAAY,4BAAS;AACrB,eAAe,4BAAS;AACxB,kBAAkB,4BAAS;AAC3B,iBAAiB,4BAAS;AAC1B,eAAe,4BAAS;AACxB,WAAW,4BAAS;AACpB,mBAAmB,4BAAS;AAC5B,iBAAiB,4BAAS;AAC1B,mBAAmB,4BAAS;AAC5B,mBAAmB,4BAAS;AAC5B,mBAAmB,4BAAS;AAC5B,qBAAqB,4BAAS;AAC9B,qBAAqB,4BAAS;AAC9B;AACA;AACA;AACA,gBAAgB,4BAAS;AACzB,sBAAsB,4BAAS;AAC/B,wBAAwB,4BAAS;AACjC,iBAAiB,4BAAS;AAC1B;AACA,eAAe,4BAAS;AACxB,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,qBAAqB,gBAAM;AAC3B;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,0CAAc;AACtC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA,OAAO,qCAAqC;AAC5C;AACA;AACA;AACA;;AAEe,gEAAM,E;;;;;;;;;;AC1M8C;AACxB;AACA;AACP;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,WAAW,4BAAS;AACpB;AACA,eAAe,4BAAS;AACxB,aAAa,4BAAS;AACtB,mBAAmB,4BAAS;AAC5B,UAAU,4BAAS;AACnB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,oBAAU,kBAAkB,EAAE,wBAAe,+EAA+E,wBAAe;AAC7J;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,0CAA0C;AAC9D;AACA;AACA,aAAa;AACb,sCAAsC;AACtC;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA,qBAAqB,eAAe;AACpC;AACA,KAAK;AACL;AACA,qBAAqB,gBAAgB;AACrC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,EAAE,wBAAe,kCAAkC,wBAAe;;AAE1F;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS,cAAc;AACvB;AACA;AACA;AACA;AACA;;AAEe,gEAAM,E;;ACjJsB;AACb;AACa;;AAE3C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,4BAAS;AACpB;AACA;AACA,YAAY,4BAAS;AACrB,sBAAsB,4BAAS;AAC/B,eAAe,4BAAS;AACxB,WAAW,4BAAS;AACpB;AACA;AACA,cAAc,4BAAS;AACvB,gBAAgB,4BAAS;AACzB,gBAAgB,4BAAS;AACzB,iBAAiB,4BAAS;AAC1B,mBAAmB,4BAAS;AAC5B,mBAAmB,4BAAS;AAC5B,mBAAmB,4BAAS;AAC5B,qBAAqB,4BAAS;AAC9B,qBAAqB,4BAAS;AAC9B;AACA,gBAAgB,4BAAS;AACzB,UAAU,4BAAS;AACnB,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA;;AAEA,eAAe,qBAAM;AACrB;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,eAAe,qBAAM;AACrB;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,eAAe,qBAAM;AACrB;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,gBAAgB;AAChB,OAAO;;AAEP;;AAEA,eAAe,qBAAM;AACrB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO,mCAAmC;AAC1C;AACA;AACA;AACA;;AAEe,oEAAQ,E;;;;;AC5PK;AACe;AACA;AACb;AACI;AACyB;;AAE3D,SAAS,UAAI;;AAEb;AACA;;AAEA;AACA,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,SAAS,gBAAM;AACf;;AAEA;AACA,WAAW,4BAAS;AACpB;AACA,eAAe,4BAAS;AACxB,eAAe,4BAAS;AACxB;AACA;AACA;AACA,eAAe,gBAAM;AACrB;AACA,KAAK;AACL,WAAW,4BAAS;AACpB,kBAAkB,4BAAS;AAC3B,iBAAiB,4BAAS;AAC1B,YAAY,4BAAS;AACrB,mBAAmB,4BAAS;AAC5B,mBAAmB,4BAAS,UAAU,UAAI;AAC1C,qBAAqB,4BAAS,UAAU,UAAI;AAC5C,qBAAqB,4BAAS,UAAU,UAAI;AAC5C,yBAAyB,4BAAS;AAClC;AACA;AACA,gBAAgB,4BAAS;AACzB,cAAc,4BAAS;AACvB,gBAAgB,4BAAS;AACzB,gBAAgB,4BAAS;AACzB;AACA,gBAAgB,4BAAS;AACzB,cAAc,4BAAS;AACvB,gBAAgB,4BAAS;AACzB,gBAAgB,4BAAS;AACzB,WAAW,4BAAS,UAAU,UAAI;AAClC,iBAAiB,4BAAS;AAC1B;AACA,eAAe,4BAAS;AACxB,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,GAAG;;AAEH;AACA;AACA,qBAAqB,mBAAmB;AACxC;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,qBAAqB,yCAAyC;AAC9D,KAAK;;;AAGL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;;AAEnD,oBAAoB,kDAAoB;AACxC;AACA,8CAA8C,UAAI;AAClD;AACA,kDAAkD,UAAI;AACtD;AACA,sDAAsD,UAAI;;;AAG1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,gCAAgC;AACvC,SAAS,qBAAM;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,OAAO,KAAK,uBAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEe,yFAAK,E;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1OuB;;AAE5B;AACf;AACA,eAAe,4BAAS;AACxB,aAAa,4BAAS;AACtB,aAAa,4BAAS;AACtB,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO,wCAAwC;AAC/C,OAAO;AACP;AACA;AACA;AACA,CAAC,E;;;;;AC3BoD;AACgC;AAC1C;AACP;AACM;AACV;AACoD;AACpF;AACe;AACf;AACA,aAAa,4BAAS;AACtB,oBAAoB,4BAAS;AAC7B,aAAa,4BAAS;AACtB,eAAe,4BAAS;AACxB,oBAAoB,4BAAS,YAAY,4BAAS,SAAS,4BAAS;AACpE,eAAe,4BAAS;AACxB,wBAAwB,4BAAS,wBAAwB;AACzD,aAAa,4BAAS;AACtB,kBAAkB,4BAAS;AAC3B,sBAAsB,4BAAS;AAC/B,eAAe,4BAAS;AACxB,qBAAqB,4BAAS;AAC9B,qBAAqB,4BAAS;AAC9B,yBAAyB,4BAAS;AAClC,0BAA0B,4BAAS;AACnC,WAAW,4BAAS,cAAc;AAClC,kBAAkB,4BAAS;AAC3B,WAAW,4BAAS;AACpB,uBAAuB,4BAAS;AAChC,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS,8CAA8C;AACvD,SAAS,kDAAoB;AAC7B,WAAW,OAAO;AAClB;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,kDAAoB;AACvC;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA,0BAA0B,4CAAc;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,iCAAwB;;AAE5C,qBAAqB,iBAAQ,GAAG;AAChC,QAAQ,qCAAO;AACf;AACA;AACA;AACA,aAAa,iBAAQ;AACrB;AACA;AACA;AACA,2BAA2B,gCAAU;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,UAAU,iBAAQ,GAAG;AACrB;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,MAAM,6BAAO;AACb;AACA;AACA;AACA,SAAS,gBAAgB;AACzB;AACA;AACA;AACA;AACA,CAAC,E;;AC9GD;AACgC;;AAEjB,iFAAO,E;;;;;;;;ACHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyE;AACR;AACd;AACkC;AACrF;AAC8B;AACH;AACO;AACsC;AACxE;AACA;;AAEA;;AAEO;AACP;;AAEA;AACA,EAAE,8CAAO;AACT;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP,SAAS,+EAAc;AACvB;;AAEO;AACP;;AAEA;AACA;;AAEO;AACP,aAAa,+EAAc,YAAY;AACvC;AACA;;AAEA;AACA;;AAEO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sCAAsC,uBAAuB;AAC7D,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP,wBAAwB,+EAAc;AACtC;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;;AAEO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,WAAW,+DAAI;AACf,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACO;AACP;;AAEA,6BAA6B;AAC7B;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,oFAAwB;;AAExC;AACA;AACA,MAAM,yDAAQ;AACd;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,oFAAoF;AACpF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB;;AAElB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;;AAEA;AACA,2BAA2B,+BAA+B;AAC1D;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,uDAAuD,mEAAO;AACjE;AACA;AACA;AACA;AACA,GAAG;AACH,IAAI,8CAAO;AACX;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACO;AACP;;AAEA;AACA,kCAAkC;;AAElC;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA,iCAAiC;;AAEjC;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,MAAM,8CAAO;AACb;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,+DAA+D,gEAAgE;AAC/H;;AAEA,kBAAkB,0EAAc;;AAEhC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qEAAqE,mEAAmE;AACxI;;AAEA,mBAAmB,0EAAc;;AAEjC;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACO;AACP;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH,mBAAmB,8EAAkB;AACrC;;AAEA;AACA;AACA,WAAW,OAAO;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA,GAAG,IAAI;AACP,C;;;;;;;;ACvhBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmE;AAChB;AACE;AACP;AACV;AACwD;AACC;AAC/C;AACkB;AACf;;AAEjD;AACA;AACA;;AAEA;;AAEA;AACA;AACA,WAAW,+DAAS;AACpB;AACA,SAAS,iFAAgB;AACzB,cAAc,+DAAS,YAAY,+DAAS,SAAS,+DAAS;AAC9D,eAAe,+DAAS;AACxB;AACA,UAAU,+DAAS;AACnB;;AAEA;AACA,cAAc,+DAAS;AACvB,cAAc,+DAAS;AACvB,aAAa,+DAAS;AACtB,YAAY,+DAAS;AACrB,aAAa,+DAAS;AACtB,iBAAiB,+DAAS;AAC1B,WAAW,+DAAS;AACpB,SAAS,+DAAS;AAClB,cAAc,+DAAS;AACvB,oBAAoB,+DAAS;AAC7B,uBAAuB,+DAAS;;AAEhC;AACA,YAAY,+DAAS;AACrB,gBAAgB,+DAAS;AACzB,cAAc,+DAAS;AACvB,qBAAqB,+DAAS;AAC9B,UAAU,+DAAS;AACnB,aAAa,+DAAS;AACtB,kBAAkB,+DAAS;;AAE3B,WAAW,+DAAS;AACpB,WAAW,+DAAS;AACpB,GAAG,IAAI;;AAEP;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,aAAa;AACb;AACA,OAAO,EAAE;AACT,iBAAiB;AACjB;AACA,OAAO;AACP,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA,KAAK;AACL;AACA;;;AAGA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;;;AAGA;AACA;AACA;AACA,KAAK;AACL;AACA;;;AAGA;AACA;AACA;AACA,KAAK;AACL;AACA;;;AAGA;AACA;AACA,KAAK;AACL;AACA;;;AAGA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;;;AAGA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;;;AAGL;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA,uBAAuB,4EAAW;AAClC,uBAAuB,qEAAgB;;AAEvC;AACA,QAAQ,sEAAgB;AACxB;;AAEA;AACA,KAAK;AACL;AACA;;;AAGA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;;AAEA,yBAAyB,qFAAoB,yBAAyB,YAAY,qFAAoB,gCAAgC;AACtI;AACA;AACA;AACA;AACA;AACA,qBAAqB,iDAAU;AAC/B,WAAW;AACX,gDAAgD,wEAAY,cAAc,oEAAQ,GAAG,gBAAgB,eAAe;AACpH;AACA;;AAEA,wBAAwB,iDAAU;AAClC;AACA;AACA,SAAS;AACT;AACA,WAAW;AACX,gCAAgC;AAChC,8CAA8C,wEAAY,cAAc,oEAAQ,GAAG,gBAAgB,gBAAgB;AACnH;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,iDAAU;AAC7B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;;AAGA;AACA;AACA,iBAAiB,iDAAU;AAC3B,OAAO;AACP,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,qFAAoB;AACtC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,UAAU,iDAAU,0DAA0D;AACzF,2DAA2D,oEAAQ,GAAG;AACtE;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,SAAS,gCAAgC;AACzC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB;;AAElB;AACA;AACA,WAAW;AACX,mBAAmB,iDAAU;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,oBAAoB,gFAAkB;AACtC,OAAO,gEAAgE,mEAAO;AAC9E,oBAAoB,oEAAQ,GAAG;AAC/B,0BAA0B,oEAAQ,EAAE,aAAa;AACjD;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB,iDAAU;AAC/B,oBAAoB;AACpB;AACA;AACA,WAAW;AACX,WAAW,iEAAW;AACtB;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA2B,EAAE,2EAAe,oDAAoD,2EAAe,oFAAoF,2EAAe,2DAA2D,2EAAe,qEAAqE,2EAAe,oDAAoD,2EAAe,kDAAkD,2EAAe,4CAA4C,2EAAe,0DAA0D,2EAAe,gEAAgE,2EAAe;AACvsB,gBAAgB;AAChB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEe,iEAAQ,E;;;;;;;;ACrgBvB;AAAA;AAAA;AAAA;AAAA;AACA;AACsB;AACS;AACL;;AAE1B,mDAAG,KAAK,8CAAG,GAAG,kBAAkB;AACjB,6GAAU,EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACP1B;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,wEAAU,E;;AClCG;AACe;AACA;AACsE;AACnE;AACV;AACR;AACU;;AAEtC;;AAEe;AACf;AACA,WAAW,4BAAS;AACpB,SAAS,8CAAgB;AACzB,eAAe,4BAAS;AACxB,eAAe,4BAAS;AACxB,WAAW,4BAAS;AACpB;AACA;AACA;AACA,eAAe,gBAAM;AACrB;AACA,KAAK;AACL,mBAAmB,4BAAS;AAC5B,cAAc,4BAAS;AACvB,gBAAgB,4BAAS;AACzB,kBAAkB,4BAAS;AAC3B,UAAU,4BAAS;AACnB,iBAAiB,4BAAS;AAC1B,WAAW,4BAAS;AACpB,eAAe,4BAAS;AACxB,oBAAoB,4BAAS;AAC7B,uBAAuB,4BAAS;AAChC,iBAAiB,4BAAS;AAC1B,YAAY,4BAAS;AACrB,cAAc,4BAAS;AACvB,gBAAgB,4BAAS;AACzB,gBAAgB,4BAAS;AACzB,oBAAoB,4BAAS;AAC7B,gBAAgB,4BAAS;AACzB,mBAAmB,4BAAS;AAC5B,qBAAqB,4BAAS;AAC9B,qBAAqB,4BAAS;AAC9B,yBAAyB,4BAAS;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,4BAAS;AACnB,kBAAkB,4BAAS;AAC3B,gBAAgB,4BAAS;AACzB,cAAc,4BAAS;AACvB,gBAAgB,4BAAS;AACzB,gBAAgB,4BAAS;AACzB,iBAAiB,4BAAS;AAC1B;AACA,eAAe,4BAAS;AACxB,QAAQ,4BAAS;AACjB,eAAe,4BAAS;AACxB,eAAe,4BAAS;AACxB,WAAW,4BAAS;AACpB,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,WAAW,qCAAO;AAClB;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAsB,kDAAoB;AAC1C,eAAe,wBAAK;AACpB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,aAAa,qCAAO;AACpB,yBAAyB,cAAc;AACvC;AACA;AACA,+BAA+B,aAAa;AAC5C,SAAS;AACT,gCAAgC,aAAa;AAC7C;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB,kDAAoB;AAC1C,UAAU,4CAAc;AACxB,mBAAmB,uCAAS,iBAAiB;AAC7C;;AAEA,eAAe,qCAAY;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT,8BAA8B,qCAAqC;AACnE;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,kDAAoB;AACxC;AACA,MAAM,6BAAO;AACb;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,yBAAU;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS,gBAAgB;AACzB;AACA;AACA;AACA,SAAS,0BAA0B;AACnC;AACA;AACA;AACA,kBAAkB;AAClB;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS,2BAA2B,+BAA+B;AACnE;AACA;AACA;AACA,CAAC,E","file":"js/chunk-vendors~c55a91f5.ae0ac4bb.js","sourcesContent":["var autoAdjustOverflow = {\n  adjustX: 1,\n  adjustY: 1\n};\n\nvar targetOffset = [0, 0];\n\nexport var placements = {\n  left: {\n    points: ['cr', 'cl'],\n    overflow: autoAdjustOverflow,\n    offset: [-4, 0],\n    targetOffset: targetOffset\n  },\n  right: {\n    points: ['cl', 'cr'],\n    overflow: autoAdjustOverflow,\n    offset: [4, 0],\n    targetOffset: targetOffset\n  },\n  top: {\n    points: ['bc', 'tc'],\n    overflow: autoAdjustOverflow,\n    offset: [0, -4],\n    targetOffset: targetOffset\n  },\n  bottom: {\n    points: ['tc', 'bc'],\n    overflow: autoAdjustOverflow,\n    offset: [0, 4],\n    targetOffset: targetOffset\n  },\n  topLeft: {\n    points: ['bl', 'tl'],\n    overflow: autoAdjustOverflow,\n    offset: [0, -4],\n    targetOffset: targetOffset\n  },\n  leftTop: {\n    points: ['tr', 'tl'],\n    overflow: autoAdjustOverflow,\n    offset: [-4, 0],\n    targetOffset: targetOffset\n  },\n  topRight: {\n    points: ['br', 'tr'],\n    overflow: autoAdjustOverflow,\n    offset: [0, -4],\n    targetOffset: targetOffset\n  },\n  rightTop: {\n    points: ['tl', 'tr'],\n    overflow: autoAdjustOverflow,\n    offset: [4, 0],\n    targetOffset: targetOffset\n  },\n  bottomRight: {\n    points: ['tr', 'br'],\n    overflow: autoAdjustOverflow,\n    offset: [0, 4],\n    targetOffset: targetOffset\n  },\n  rightBottom: {\n    points: ['bl', 'br'],\n    overflow: autoAdjustOverflow,\n    offset: [4, 0],\n    targetOffset: targetOffset\n  },\n  bottomLeft: {\n    points: ['tl', 'bl'],\n    overflow: autoAdjustOverflow,\n    offset: [0, 4],\n    targetOffset: targetOffset\n  },\n  leftBottom: {\n    points: ['br', 'bl'],\n    overflow: autoAdjustOverflow,\n    offset: [-4, 0],\n    targetOffset: targetOffset\n  }\n};\n\nexport default placements;","import _mergeJSXProps from 'babel-helper-vue-jsx-merge-props';\nimport _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _toConsumableArray from 'babel-runtime/helpers/toConsumableArray';\nimport _extends from 'babel-runtime/helpers/extends';\nimport PropTypes from '../../_util/vue-types';\nimport classNames from 'classnames';\nimport warning from 'warning';\nimport { hasProp, initDefaultProps, getOptionProps, getSlots } from '../../_util/props-util';\nimport { cloneElement } from '../../_util/vnode';\nimport BaseMixin from '../../_util/BaseMixin';\nimport proxyComponent from '../../_util/proxyComponent';\nimport { convertTreeToEntities, convertDataToTree, getPosition, getDragNodesKeys, parseCheckedKeys, conductExpandParent, calcSelectedKeys, calcDropPosition, arrAdd, arrDel, posToArr, mapChildren, conductCheck, warnOnlyTreeNode } from './util';\n\n/**\n * Thought we still use `cloneElement` to pass `key`,\n * other props can pass with context for future refactor.\n */\n\nfunction getWatch() {\n  var keys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n  var watch = {};\n  keys.forEach(function (k) {\n    watch[k] = function () {\n      this.needSyncKeys[k] = true;\n    };\n  });\n  return watch;\n}\n\nvar Tree = {\n  name: 'Tree',\n  mixins: [BaseMixin],\n  props: initDefaultProps({\n    prefixCls: PropTypes.string,\n    tabIndex: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    children: PropTypes.any,\n    treeData: PropTypes.array, // Generate treeNode by children\n    showLine: PropTypes.bool,\n    showIcon: PropTypes.bool,\n    icon: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n    focusable: PropTypes.bool,\n    selectable: PropTypes.bool,\n    disabled: PropTypes.bool,\n    multiple: PropTypes.bool,\n    checkable: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n    checkStrictly: PropTypes.bool,\n    draggable: PropTypes.bool,\n    defaultExpandParent: PropTypes.bool,\n    autoExpandParent: PropTypes.bool,\n    defaultExpandAll: PropTypes.bool,\n    defaultExpandedKeys: PropTypes.array,\n    expandedKeys: PropTypes.array,\n    defaultCheckedKeys: PropTypes.array,\n    checkedKeys: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n    defaultSelectedKeys: PropTypes.array,\n    selectedKeys: PropTypes.array,\n    // onClick: PropTypes.func,\n    // onDoubleClick: PropTypes.func,\n    // onExpand: PropTypes.func,\n    // onCheck: PropTypes.func,\n    // onSelect: PropTypes.func,\n    loadData: PropTypes.func,\n    loadedKeys: PropTypes.array,\n    // onMouseEnter: PropTypes.func,\n    // onMouseLeave: PropTypes.func,\n    // onRightClick: PropTypes.func,\n    // onDragStart: PropTypes.func,\n    // onDragEnter: PropTypes.func,\n    // onDragOver: PropTypes.func,\n    // onDragLeave: PropTypes.func,\n    // onDragEnd: PropTypes.func,\n    // onDrop: PropTypes.func,\n    filterTreeNode: PropTypes.func,\n    openTransitionName: PropTypes.string,\n    openAnimation: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    switcherIcon: PropTypes.any,\n    _propsSymbol: PropTypes.any\n  }, {\n    prefixCls: 'rc-tree',\n    showLine: false,\n    showIcon: true,\n    selectable: true,\n    multiple: false,\n    checkable: false,\n    disabled: false,\n    checkStrictly: false,\n    draggable: false,\n    defaultExpandParent: true,\n    autoExpandParent: false,\n    defaultExpandAll: false,\n    defaultExpandedKeys: [],\n    defaultCheckedKeys: [],\n    defaultSelectedKeys: []\n  }),\n\n  data: function data() {\n    warning(this.$props.__propsSymbol__, 'must pass __propsSymbol__');\n    warning(this.$props.children, 'please children prop replace slots.default');\n    this.needSyncKeys = {};\n    var state = {\n      _posEntities: new Map(),\n      _keyEntities: new Map(),\n      _expandedKeys: [],\n      _selectedKeys: [],\n      _checkedKeys: [],\n      _halfCheckedKeys: [],\n      _loadedKeys: [],\n      _loadingKeys: [],\n      _treeNode: [],\n      _prevProps: null,\n      _dragOverNodeKey: '',\n      _dropPosition: null,\n      _dragNodesKeys: []\n    };\n    return _extends({}, state, this.getDerivedStateFromProps(getOptionProps(this), state));\n  },\n  provide: function provide() {\n    return {\n      vcTree: this\n    };\n  },\n\n\n  watch: _extends({}, getWatch(['treeData', 'children', 'expandedKeys', 'autoExpandParent', 'selectedKeys', 'checkedKeys', 'loadedKeys']), {\n    __propsSymbol__: function __propsSymbol__() {\n      this.setState(this.getDerivedStateFromProps(getOptionProps(this), this.$data));\n      this.needSyncKeys = {};\n    }\n  }),\n\n  methods: {\n    getDerivedStateFromProps: function getDerivedStateFromProps(props, prevState) {\n      var _prevProps = prevState._prevProps;\n\n      var newState = {\n        _prevProps: _extends({}, props)\n      };\n      var self = this;\n      function needSync(name) {\n        return !_prevProps && name in props || _prevProps && self.needSyncKeys[name];\n      }\n\n      // ================== Tree Node ==================\n      var treeNode = null;\n\n      // Check if `treeData` or `children` changed and save into the state.\n      if (needSync('treeData')) {\n        treeNode = convertDataToTree(this.$createElement, props.treeData);\n      } else if (needSync('children')) {\n        treeNode = props.children;\n      }\n\n      // Tree support filter function which will break the tree structure in the vdm.\n      // We cache the treeNodes in state so that we can return the treeNode in event trigger.\n      if (treeNode) {\n        newState._treeNode = treeNode;\n\n        // Calculate the entities data for quick match\n        var entitiesMap = convertTreeToEntities(treeNode);\n        newState._posEntities = entitiesMap.posEntities;\n        newState._keyEntities = entitiesMap.keyEntities;\n      }\n\n      var keyEntities = newState._keyEntities || prevState._keyEntities;\n\n      // ================ expandedKeys =================\n      if (needSync('expandedKeys') || _prevProps && needSync('autoExpandParent')) {\n        newState._expandedKeys = props.autoExpandParent || !_prevProps && props.defaultExpandParent ? conductExpandParent(props.expandedKeys, keyEntities) : props.expandedKeys;\n      } else if (!_prevProps && props.defaultExpandAll) {\n        newState._expandedKeys = [].concat(_toConsumableArray(keyEntities.keys()));\n      } else if (!_prevProps && props.defaultExpandedKeys) {\n        newState._expandedKeys = props.autoExpandParent || props.defaultExpandParent ? conductExpandParent(props.defaultExpandedKeys, keyEntities) : props.defaultExpandedKeys;\n      }\n\n      // ================ selectedKeys =================\n      if (props.selectable) {\n        if (needSync('selectedKeys')) {\n          newState._selectedKeys = calcSelectedKeys(props.selectedKeys, props);\n        } else if (!_prevProps && props.defaultSelectedKeys) {\n          newState._selectedKeys = calcSelectedKeys(props.defaultSelectedKeys, props);\n        }\n      }\n\n      // ================= checkedKeys =================\n      if (props.checkable) {\n        var checkedKeyEntity = void 0;\n\n        if (needSync('checkedKeys')) {\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {};\n        } else if (!_prevProps && props.defaultCheckedKeys) {\n          checkedKeyEntity = parseCheckedKeys(props.defaultCheckedKeys) || {};\n        } else if (treeNode) {\n          // If treeNode changed, we also need check it\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {\n            checkedKeys: prevState._checkedKeys,\n            halfCheckedKeys: prevState._halfCheckedKeys\n          };\n        }\n\n        if (checkedKeyEntity) {\n          var _checkedKeyEntity = checkedKeyEntity,\n              _checkedKeyEntity$che = _checkedKeyEntity.checkedKeys,\n              checkedKeys = _checkedKeyEntity$che === undefined ? [] : _checkedKeyEntity$che,\n              _checkedKeyEntity$hal = _checkedKeyEntity.halfCheckedKeys,\n              halfCheckedKeys = _checkedKeyEntity$hal === undefined ? [] : _checkedKeyEntity$hal;\n\n\n          if (!props.checkStrictly) {\n            var conductKeys = conductCheck(checkedKeys, true, keyEntities);\n            checkedKeys = conductKeys.checkedKeys;\n            halfCheckedKeys = conductKeys.halfCheckedKeys;\n          }\n\n          newState._checkedKeys = checkedKeys;\n          newState._halfCheckedKeys = halfCheckedKeys;\n        }\n      }\n      // ================= loadedKeys ==================\n      if (needSync('loadedKeys')) {\n        newState._loadedKeys = props.loadedKeys;\n      }\n\n      return newState;\n    },\n    onNodeDragStart: function onNodeDragStart(event, node) {\n      var _expandedKeys = this.$data._expandedKeys;\n      var eventKey = node.eventKey;\n\n      var children = getSlots(node)['default'];\n      this.dragNode = node;\n\n      this.setState({\n        _dragNodesKeys: getDragNodesKeys(typeof children === 'function' ? children() : children, node),\n        _expandedKeys: arrDel(_expandedKeys, eventKey)\n      });\n      this.__emit('dragstart', { event: event, node: node });\n    },\n\n\n    /**\n     * [Legacy] Select handler is less small than node,\n     * so that this will trigger when drag enter node or select handler.\n     * This is a little tricky if customize css without padding.\n     * Better for use mouse move event to refresh drag state.\n     * But let's just keep it to avoid event trigger logic change.\n     */\n    onNodeDragEnter: function onNodeDragEnter(event, node) {\n      var _this = this;\n\n      var expandedKeys = this.$data._expandedKeys;\n      var pos = node.pos,\n          eventKey = node.eventKey;\n\n\n      if (!this.dragNode || !node.$refs.selectHandle) return;\n\n      var dropPosition = calcDropPosition(event, node);\n\n      // Skip if drag node is self\n      if (this.dragNode.eventKey === eventKey && dropPosition === 0) {\n        this.setState({\n          _dragOverNodeKey: '',\n          _dropPosition: null\n        });\n        return;\n      }\n\n      // Ref: https://github.com/react-component/tree/issues/132\n      // Add timeout to let onDragLevel fire before onDragEnter,\n      // so that we can clean drag props for onDragLeave node.\n      // Macro task for this:\n      // https://html.spec.whatwg.org/multipage/webappapis.html#clean-up-after-running-script\n      setTimeout(function () {\n        // Update drag over node\n        _this.setState({\n          _dragOverNodeKey: eventKey,\n          _dropPosition: dropPosition\n        });\n\n        // Side effect for delay drag\n        if (!_this.delayedDragEnterLogic) {\n          _this.delayedDragEnterLogic = {};\n        }\n        Object.keys(_this.delayedDragEnterLogic).forEach(function (key) {\n          clearTimeout(_this.delayedDragEnterLogic[key]);\n        });\n        _this.delayedDragEnterLogic[pos] = setTimeout(function () {\n          var newExpandedKeys = arrAdd(expandedKeys, eventKey);\n          if (!hasProp(_this, 'expandedKeys')) {\n            _this.setState({\n              _expandedKeys: newExpandedKeys\n            });\n          }\n          _this.__emit('dragenter', { event: event, node: node, expandedKeys: newExpandedKeys });\n        }, 400);\n      }, 0);\n    },\n    onNodeDragOver: function onNodeDragOver(event, node) {\n      var eventKey = node.eventKey;\n      var _$data = this.$data,\n          _dragOverNodeKey = _$data._dragOverNodeKey,\n          _dropPosition = _$data._dropPosition;\n      // Update drag position\n\n      if (this.dragNode && eventKey === _dragOverNodeKey && node.$refs.selectHandle) {\n        var dropPosition = calcDropPosition(event, node);\n\n        if (dropPosition === _dropPosition) return;\n\n        this.setState({\n          _dropPosition: dropPosition\n        });\n      }\n      this.__emit('dragover', { event: event, node: node });\n    },\n    onNodeDragLeave: function onNodeDragLeave(event, node) {\n      this.setState({\n        _dragOverNodeKey: ''\n      });\n      this.__emit('dragleave', { event: event, node: node });\n    },\n    onNodeDragEnd: function onNodeDragEnd(event, node) {\n      this.setState({\n        _dragOverNodeKey: ''\n      });\n      this.__emit('dragend', { event: event, node: node });\n      this.dragNode = null;\n    },\n    onNodeDrop: function onNodeDrop(event, node) {\n      var _$data2 = this.$data,\n          _$data2$_dragNodesKey = _$data2._dragNodesKeys,\n          _dragNodesKeys = _$data2$_dragNodesKey === undefined ? [] : _$data2$_dragNodesKey,\n          _dropPosition = _$data2._dropPosition;\n\n      var eventKey = node.eventKey,\n          pos = node.pos;\n\n\n      this.setState({\n        _dragOverNodeKey: ''\n      });\n\n      if (_dragNodesKeys.indexOf(eventKey) !== -1) {\n        warning(false, \"Can not drop to dragNode(include it's children node)\");\n        return;\n      }\n\n      var posArr = posToArr(pos);\n\n      var dropResult = {\n        event: event,\n        node: node,\n        dragNode: this.dragNode,\n        dragNodesKeys: _dragNodesKeys.slice(),\n        dropPosition: _dropPosition + Number(posArr[posArr.length - 1])\n      };\n\n      if (_dropPosition !== 0) {\n        dropResult.dropToGap = true;\n      }\n      this.__emit('drop', dropResult);\n      this.dragNode = null;\n    },\n    onNodeClick: function onNodeClick(e, treeNode) {\n      this.__emit('click', e, treeNode);\n    },\n    onNodeDoubleClick: function onNodeDoubleClick(e, treeNode) {\n      this.__emit('dblclick', e, treeNode);\n    },\n    onNodeSelect: function onNodeSelect(e, treeNode) {\n      var selectedKeys = this.$data._selectedKeys;\n      var keyEntities = this.$data._keyEntities;\n      var multiple = this.$props.multiple;\n\n      var _getOptionProps = getOptionProps(treeNode),\n          selected = _getOptionProps.selected,\n          eventKey = _getOptionProps.eventKey;\n\n      var targetSelected = !selected;\n      // Update selected keys\n      if (!targetSelected) {\n        selectedKeys = arrDel(selectedKeys, eventKey);\n      } else if (!multiple) {\n        selectedKeys = [eventKey];\n      } else {\n        selectedKeys = arrAdd(selectedKeys, eventKey);\n      }\n\n      // [Legacy] Not found related usage in doc or upper libs\n      var selectedNodes = selectedKeys.map(function (key) {\n        var entity = keyEntities.get(key);\n        if (!entity) return null;\n\n        return entity.node;\n      }).filter(function (node) {\n        return node;\n      });\n\n      this.setUncontrolledState({ _selectedKeys: selectedKeys });\n\n      var eventObj = {\n        event: 'select',\n        selected: targetSelected,\n        node: treeNode,\n        selectedNodes: selectedNodes,\n        nativeEvent: e\n      };\n      this.__emit('update:selectedKeys', selectedKeys);\n      this.__emit('select', selectedKeys, eventObj);\n    },\n    onNodeCheck: function onNodeCheck(e, treeNode, checked) {\n      var _$data3 = this.$data,\n          keyEntities = _$data3._keyEntities,\n          oriCheckedKeys = _$data3._checkedKeys,\n          oriHalfCheckedKeys = _$data3._halfCheckedKeys;\n      var checkStrictly = this.$props.checkStrictly;\n\n      var _getOptionProps2 = getOptionProps(treeNode),\n          eventKey = _getOptionProps2.eventKey;\n\n      // Prepare trigger arguments\n\n\n      var checkedObj = void 0;\n      var eventObj = {\n        event: 'check',\n        node: treeNode,\n        checked: checked,\n        nativeEvent: e\n      };\n\n      if (checkStrictly) {\n        var checkedKeys = checked ? arrAdd(oriCheckedKeys, eventKey) : arrDel(oriCheckedKeys, eventKey);\n        var halfCheckedKeys = arrDel(oriHalfCheckedKeys, eventKey);\n        checkedObj = { checked: checkedKeys, halfChecked: halfCheckedKeys };\n\n        eventObj.checkedNodes = checkedKeys.map(function (key) {\n          return keyEntities.get(key);\n        }).filter(function (entity) {\n          return entity;\n        }).map(function (entity) {\n          return entity.node;\n        });\n\n        this.setUncontrolledState({ _checkedKeys: checkedKeys });\n      } else {\n        var _conductCheck = conductCheck([eventKey], checked, keyEntities, {\n          checkedKeys: oriCheckedKeys,\n          halfCheckedKeys: oriHalfCheckedKeys\n        }),\n            _checkedKeys = _conductCheck.checkedKeys,\n            _halfCheckedKeys = _conductCheck.halfCheckedKeys;\n\n        checkedObj = _checkedKeys;\n\n        // [Legacy] This is used for `rc-tree-select`\n        eventObj.checkedNodes = [];\n        eventObj.checkedNodesPositions = [];\n        eventObj.halfCheckedKeys = _halfCheckedKeys;\n\n        _checkedKeys.forEach(function (key) {\n          var entity = keyEntities.get(key);\n          if (!entity) return;\n\n          var node = entity.node,\n              pos = entity.pos;\n\n\n          eventObj.checkedNodes.push(node);\n          eventObj.checkedNodesPositions.push({ node: node, pos: pos });\n        });\n\n        this.setUncontrolledState({\n          _checkedKeys: _checkedKeys,\n          _halfCheckedKeys: _halfCheckedKeys\n        });\n      }\n      this.__emit('check', checkedObj, eventObj);\n    },\n    onNodeLoad: function onNodeLoad(treeNode) {\n      var _this2 = this;\n\n      return new Promise(function (resolve) {\n        // We need to get the latest state of loading/loaded keys\n        _this2.setState(function (_ref) {\n          var _ref$_loadedKeys = _ref._loadedKeys,\n              loadedKeys = _ref$_loadedKeys === undefined ? [] : _ref$_loadedKeys,\n              _ref$_loadingKeys = _ref._loadingKeys,\n              loadingKeys = _ref$_loadingKeys === undefined ? [] : _ref$_loadingKeys;\n          var loadData = _this2.$props.loadData;\n\n          var _getOptionProps3 = getOptionProps(treeNode),\n              eventKey = _getOptionProps3.eventKey;\n\n          if (!loadData || loadedKeys.indexOf(eventKey) !== -1 || loadingKeys.indexOf(eventKey) !== -1) {\n            return {};\n          }\n\n          // Process load data\n          var promise = loadData(treeNode);\n          promise.then(function () {\n            var newLoadedKeys = arrAdd(_this2.$data._loadedKeys, eventKey);\n            var newLoadingKeys = arrDel(_this2.$data._loadingKeys, eventKey);\n\n            // onLoad should trigger before internal setState to avoid `loadData` trigger twice.\n            // https://github.com/ant-design/ant-design/issues/12464\n            var eventObj = {\n              event: 'load',\n              node: treeNode\n            };\n            _this2.__emit('load', newLoadedKeys, eventObj);\n            _this2.setUncontrolledState({\n              _loadedKeys: newLoadedKeys\n            });\n            _this2.setState({\n              _loadingKeys: newLoadingKeys\n            });\n            resolve();\n          });\n\n          return {\n            _loadingKeys: arrAdd(loadingKeys, eventKey)\n          };\n        });\n      });\n    },\n    onNodeExpand: function onNodeExpand(e, treeNode) {\n      var _this3 = this;\n\n      var expandedKeys = this.$data._expandedKeys;\n      var loadData = this.$props.loadData;\n\n      var _getOptionProps4 = getOptionProps(treeNode),\n          eventKey = _getOptionProps4.eventKey,\n          expanded = _getOptionProps4.expanded;\n\n      // Update selected keys\n\n\n      var index = expandedKeys.indexOf(eventKey);\n      var targetExpanded = !expanded;\n\n      warning(expanded && index !== -1 || !expanded && index === -1, 'Expand state not sync with index check');\n\n      if (targetExpanded) {\n        expandedKeys = arrAdd(expandedKeys, eventKey);\n      } else {\n        expandedKeys = arrDel(expandedKeys, eventKey);\n      }\n\n      this.setUncontrolledState({ _expandedKeys: expandedKeys });\n      this.__emit('expand', expandedKeys, {\n        node: treeNode,\n        expanded: targetExpanded,\n        nativeEvent: e\n      });\n      this.__emit('update:expandedKeys', expandedKeys);\n\n      // Async Load data\n      if (targetExpanded && loadData) {\n        var loadPromise = this.onNodeLoad(treeNode);\n        return loadPromise ? loadPromise.then(function () {\n          // [Legacy] Refresh logic\n          _this3.setUncontrolledState({ _expandedKeys: expandedKeys });\n        }) : null;\n      }\n\n      return null;\n    },\n    onNodeMouseEnter: function onNodeMouseEnter(event, node) {\n      this.__emit('mouseenter', { event: event, node: node });\n    },\n    onNodeMouseLeave: function onNodeMouseLeave(event, node) {\n      this.__emit('mouseleave', { event: event, node: node });\n    },\n    onNodeContextMenu: function onNodeContextMenu(event, node) {\n      event.preventDefault();\n      this.__emit('rightClick', { event: event, node: node });\n    },\n\n\n    /**\n     * Only update the value which is not in props\n     */\n    setUncontrolledState: function setUncontrolledState(state) {\n      var needSync = false;\n      var newState = {};\n      var props = getOptionProps(this);\n      Object.keys(state).forEach(function (name) {\n        if (name.replace('_', '') in props) return;\n        needSync = true;\n        newState[name] = state[name];\n      });\n\n      if (needSync) {\n        this.setState(newState);\n      }\n    },\n    isKeyChecked: function isKeyChecked(key) {\n      var _$data$_checkedKeys = this.$data._checkedKeys,\n          checkedKeys = _$data$_checkedKeys === undefined ? [] : _$data$_checkedKeys;\n\n      return checkedKeys.indexOf(key) !== -1;\n    },\n\n\n    /**\n     * [Legacy] Original logic use `key` as tracking clue.\n     * We have to use `cloneElement` to pass `key`.\n     */\n    renderTreeNode: function renderTreeNode(child, index) {\n      var level = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      var _$data4 = this.$data,\n          keyEntities = _$data4._keyEntities,\n          _$data4$_expandedKeys = _$data4._expandedKeys,\n          expandedKeys = _$data4$_expandedKeys === undefined ? [] : _$data4$_expandedKeys,\n          _$data4$_selectedKeys = _$data4._selectedKeys,\n          selectedKeys = _$data4$_selectedKeys === undefined ? [] : _$data4$_selectedKeys,\n          _$data4$_halfCheckedK = _$data4._halfCheckedKeys,\n          halfCheckedKeys = _$data4$_halfCheckedK === undefined ? [] : _$data4$_halfCheckedK,\n          _$data4$_loadedKeys = _$data4._loadedKeys,\n          loadedKeys = _$data4$_loadedKeys === undefined ? [] : _$data4$_loadedKeys,\n          _$data4$_loadingKeys = _$data4._loadingKeys,\n          loadingKeys = _$data4$_loadingKeys === undefined ? [] : _$data4$_loadingKeys,\n          dragOverNodeKey = _$data4._dragOverNodeKey,\n          dropPosition = _$data4._dropPosition;\n\n      var pos = getPosition(level, index);\n      var key = child.key;\n      if (!key && (key === undefined || key === null)) {\n        key = pos;\n      }\n      if (!keyEntities.get(key)) {\n        warnOnlyTreeNode();\n        return null;\n      }\n\n      return cloneElement(child, {\n        props: {\n          eventKey: key,\n          expanded: expandedKeys.indexOf(key) !== -1,\n          selected: selectedKeys.indexOf(key) !== -1,\n          loaded: loadedKeys.indexOf(key) !== -1,\n          loading: loadingKeys.indexOf(key) !== -1,\n          checked: this.isKeyChecked(key),\n          halfChecked: halfCheckedKeys.indexOf(key) !== -1,\n          pos: pos,\n\n          // [Legacy] Drag props\n          dragOver: dragOverNodeKey === key && dropPosition === 0,\n          dragOverGapTop: dragOverNodeKey === key && dropPosition === -1,\n          dragOverGapBottom: dragOverNodeKey === key && dropPosition === 1\n        },\n        key: key\n      });\n    }\n  },\n\n  render: function render() {\n    var _this4 = this;\n\n    var h = arguments[0];\n    var treeNode = this.$data._treeNode;\n    var _$props = this.$props,\n        prefixCls = _$props.prefixCls,\n        focusable = _$props.focusable,\n        showLine = _$props.showLine,\n        _$props$tabIndex = _$props.tabIndex,\n        tabIndex = _$props$tabIndex === undefined ? 0 : _$props$tabIndex;\n\n    var domProps = {};\n\n    return h(\n      'ul',\n      _mergeJSXProps([domProps, {\n        'class': classNames(prefixCls, _defineProperty({}, prefixCls + '-show-line', showLine)),\n        attrs: { role: 'tree',\n          unselectable: 'on',\n          tabIndex: focusable ? tabIndex : null\n        },\n        on: {\n          'keydown': focusable ? this.onKeydown : function () {}\n        }\n      }]),\n      [mapChildren(treeNode, function (node, index) {\n        return _this4.renderTreeNode(node, index);\n      })]\n    );\n  }\n};\n\nexport { Tree };\n\nexport default proxyComponent(Tree);","import ProxyTree, { Tree } from './Tree';\nimport TreeNode from './TreeNode';\nTree.TreeNode = TreeNode;\nProxyTree.TreeNode = TreeNode;\n\nexport { Tree, TreeNode };\nexport default ProxyTree;","import _extends from 'babel-runtime/helpers/extends';\nimport { TreeNode } from '../../vc-tree';\n/**\n * SelectNode wrapped the tree node.\n * Let's use SelectNode instead of TreeNode\n * since TreeNode is so confuse here.\n */\nexport default {\n  name: 'SelectNode',\n  functional: true,\n  isTreeNode: true,\n  props: TreeNode.props,\n  render: function render(h, context) {\n    var props = context.props,\n        slots = context.slots,\n        listeners = context.listeners,\n        data = context.data,\n        scopedSlots = context.scopedSlots;\n\n    var $slots = slots() || {};\n    var children = $slots['default'];\n    var slotsKey = Object.keys($slots);\n    var scopedSlotsTemp = {}; // for vue 2.5.x\n    slotsKey.forEach(function (name) {\n      scopedSlotsTemp[name] = function () {\n        return $slots[name];\n      };\n    });\n    var treeNodeProps = _extends({}, data, {\n      on: _extends({}, listeners, data.nativeOn),\n      props: props,\n      scopedSlots: _extends({}, scopedSlotsTemp, scopedSlots)\n    });\n    return h(\n      TreeNode,\n      treeNodeProps,\n      [children]\n    );\n  }\n};","import _typeof from 'babel-runtime/helpers/typeof';\nimport _mergeJSXProps from 'babel-helper-vue-jsx-merge-props';\nimport _extends from 'babel-runtime/helpers/extends';\nimport warning from 'warning';\nimport omit from 'omit.js';\nimport { convertDataToTree as vcConvertDataToTree, convertTreeToEntities as vcConvertTreeToEntities, conductCheck as rcConductCheck } from '../../vc-tree/src/util';\nimport SelectNode from './SelectNode';\nimport { SHOW_CHILD, SHOW_PARENT } from './strategies';\nimport { getSlots, getPropsData, isEmptyElement } from '../../_util/props-util';\n\nvar warnDeprecatedLabel = false;\n\n// =================== MISC ====================\nexport function toTitle(title) {\n  if (typeof title === 'string') {\n    return title;\n  }\n  return null;\n}\n\nexport function toArray(data) {\n  if (data === undefined || data === null) return [];\n\n  return Array.isArray(data) ? data : [data];\n}\n\nexport function createRef() {\n  var func = function setRef(node) {\n    func.current = node;\n  };\n  return func;\n}\n\n// =============== Legacy ===============\nexport var UNSELECTABLE_STYLE = {\n  userSelect: 'none',\n  WebkitUserSelect: 'none'\n};\n\nexport var UNSELECTABLE_ATTRIBUTE = {\n  unselectable: 'unselectable'\n};\n\n/**\n * Convert position list to hierarchy structure.\n * This is little hack since use '-' to split the position.\n */\nexport function flatToHierarchy(positionList) {\n  if (!positionList.length) {\n    return [];\n  }\n\n  var entrances = {};\n\n  // Prepare the position map\n  var posMap = {};\n  var parsedList = positionList.slice().map(function (entity) {\n    var clone = _extends({}, entity, {\n      fields: entity.pos.split('-')\n    });\n    delete clone.children;\n    return clone;\n  });\n\n  parsedList.forEach(function (entity) {\n    posMap[entity.pos] = entity;\n  });\n\n  parsedList.sort(function (a, b) {\n    return a.fields.length - b.fields.length;\n  });\n\n  // Create the hierarchy\n  parsedList.forEach(function (entity) {\n    var parentPos = entity.fields.slice(0, -1).join('-');\n    var parentEntity = posMap[parentPos];\n\n    if (!parentEntity) {\n      entrances[entity.pos] = entity;\n    } else {\n      parentEntity.children = parentEntity.children || [];\n      parentEntity.children.push(entity);\n    }\n\n    // Some time position list provide `key`, we don't need it\n    delete entity.key;\n    delete entity.fields;\n  });\n\n  return Object.keys(entrances).map(function (key) {\n    return entrances[key];\n  });\n}\n\n// =============== Accessibility ===============\nvar ariaId = 0;\n\nexport function resetAriaId() {\n  ariaId = 0;\n}\n\nexport function generateAriaId(prefix) {\n  ariaId += 1;\n  return prefix + '_' + ariaId;\n}\n\nexport function isLabelInValue(props) {\n  var treeCheckable = props.treeCheckable,\n      treeCheckStrictly = props.treeCheckStrictly,\n      labelInValue = props.labelInValue;\n\n  if (treeCheckable && treeCheckStrictly) {\n    return true;\n  }\n  return labelInValue || false;\n}\n\n// =================== Tree ====================\nexport function parseSimpleTreeData(treeData, _ref) {\n  var id = _ref.id,\n      pId = _ref.pId,\n      rootPId = _ref.rootPId;\n\n  var keyNodes = {};\n  var rootNodeList = [];\n\n  // Fill in the map\n  var nodeList = treeData.map(function (node) {\n    var clone = _extends({}, node);\n    var key = clone[id];\n    keyNodes[key] = clone;\n    clone.key = clone.key || key;\n    return clone;\n  });\n\n  // Connect tree\n  nodeList.forEach(function (node) {\n    var parentKey = node[pId];\n    var parent = keyNodes[parentKey];\n\n    // Fill parent\n    if (parent) {\n      parent.children = parent.children || [];\n      parent.children.push(node);\n    }\n\n    // Fill root tree node\n    if (parentKey === rootPId || !parent && rootPId === null) {\n      rootNodeList.push(node);\n    }\n  });\n\n  return rootNodeList;\n}\n\n/**\n * Detect if position has relation.\n * e.g. 1-2 related with 1-2-3\n * e.g. 1-3-2 related with 1\n * e.g. 1-2 not related with 1-21\n */\nexport function isPosRelated(pos1, pos2) {\n  var fields1 = pos1.split('-');\n  var fields2 = pos2.split('-');\n\n  var minLen = Math.min(fields1.length, fields2.length);\n  for (var i = 0; i < minLen; i += 1) {\n    if (fields1[i] !== fields2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * This function is only used on treeNode check (none treeCheckStrictly but has searchInput).\n * We convert entity to { node, pos, children } format.\n * This is legacy bug but we still need to do with it.\n * @param entity\n */\nexport function cleanEntity(_ref2) {\n  var node = _ref2.node,\n      pos = _ref2.pos,\n      children = _ref2.children;\n\n  var instance = {\n    node: node,\n    pos: pos\n  };\n\n  if (children) {\n    instance.children = children.map(cleanEntity);\n  }\n\n  return instance;\n}\n\n/**\n * Get a filtered TreeNode list by provided treeNodes.\n * [Legacy] Since `Tree` use `key` as map but `key` will changed by React,\n * we have to convert `treeNodes > data > treeNodes` to keep the key.\n * Such performance hungry!\n */\nexport function getFilterTree(h, treeNodes, searchValue, filterFunc, valueEntities) {\n  if (!searchValue) {\n    return null;\n  }\n\n  function mapFilteredNodeToData(node) {\n    if (!node || isEmptyElement(node)) return null;\n\n    var match = false;\n    if (filterFunc(searchValue, node)) {\n      match = true;\n    }\n    var children = getSlots(node)['default'];\n    children = ((typeof children === 'function' ? children() : children) || []).map(mapFilteredNodeToData).filter(function (n) {\n      return n;\n    });\n    if (children.length || match) {\n      return h(\n        SelectNode,\n        _mergeJSXProps([node.data, { key: valueEntities[getPropsData(node).value].key }]),\n        [children]\n      );\n    }\n\n    return null;\n  }\n  return treeNodes.map(mapFilteredNodeToData).filter(function (node) {\n    return node;\n  });\n}\n\n// =================== Value ===================\n/**\n * Convert value to array format to make logic simplify.\n */\nexport function formatInternalValue(value, props) {\n  var valueList = toArray(value);\n\n  // Parse label in value\n  if (isLabelInValue(props)) {\n    return valueList.map(function (val) {\n      if ((typeof val === 'undefined' ? 'undefined' : _typeof(val)) !== 'object' || !val) {\n        return {\n          value: '',\n          label: ''\n        };\n      }\n\n      return val;\n    });\n  }\n\n  return valueList.map(function (val) {\n    return {\n      value: val\n    };\n  });\n}\n\nexport function getLabel(wrappedValue, entity, treeNodeLabelProp) {\n  if (wrappedValue.label) {\n    return wrappedValue.label;\n  }\n\n  if (entity) {\n    var props = getPropsData(entity.node);\n    if (Object.keys(props).length) {\n      return props[treeNodeLabelProp];\n    }\n  }\n\n  // Since value without entity will be in missValueList.\n  // This code will never reached, but we still need this in case.\n  return wrappedValue.value;\n}\n\n/**\n * Convert internal state `valueList` to user needed value list.\n * This will return an array list. You need check if is not multiple when return.\n *\n * `allCheckedNodes` is used for `treeCheckStrictly`\n */\nexport function formatSelectorValue(valueList, props, valueEntities) {\n  var treeNodeLabelProp = props.treeNodeLabelProp,\n      treeCheckable = props.treeCheckable,\n      treeCheckStrictly = props.treeCheckStrictly,\n      showCheckedStrategy = props.showCheckedStrategy;\n\n  // Will hide some value if `showCheckedStrategy` is set\n\n  if (treeCheckable && !treeCheckStrictly) {\n    var values = {};\n    valueList.forEach(function (wrappedValue) {\n      values[wrappedValue.value] = wrappedValue;\n    });\n    var hierarchyList = flatToHierarchy(valueList.map(function (_ref3) {\n      var value = _ref3.value;\n      return valueEntities[value];\n    }));\n\n    if (showCheckedStrategy === SHOW_PARENT) {\n      // Only get the parent checked value\n      return hierarchyList.map(function (_ref4) {\n        var node = _ref4.node;\n\n        var value = getPropsData(node).value;\n        return {\n          label: getLabel(values[value], valueEntities[value], treeNodeLabelProp),\n          value: value\n        };\n      });\n    }\n    if (showCheckedStrategy === SHOW_CHILD) {\n      // Only get the children checked value\n      var targetValueList = [];\n\n      // Find the leaf children\n      var traverse = function traverse(_ref5) {\n        var node = _ref5.node,\n            children = _ref5.children;\n\n        var value = getPropsData(node).value;\n        if (!children || children.length === 0) {\n          targetValueList.push({\n            label: getLabel(values[value], valueEntities[value], treeNodeLabelProp),\n            value: value\n          });\n          return;\n        }\n\n        children.forEach(function (entity) {\n          traverse(entity);\n        });\n      };\n\n      hierarchyList.forEach(function (entity) {\n        traverse(entity);\n      });\n\n      return targetValueList;\n    }\n  }\n\n  return valueList.map(function (wrappedValue) {\n    return {\n      label: getLabel(wrappedValue, valueEntities[wrappedValue.value], treeNodeLabelProp),\n      value: wrappedValue.value\n    };\n  });\n}\n\n/**\n * Use `rc-tree` convertDataToTree to convert treeData to TreeNodes.\n * This will change the label to title value\n */\nfunction processProps(props) {\n  var title = props.title,\n      label = props.label,\n      value = props.value,\n      cls = props['class'],\n      style = props.style,\n      _props$on = props.on,\n      on = _props$on === undefined ? {} : _props$on;\n\n  var key = props.key;\n  if (!key && (key === undefined || key === null)) {\n    key = value;\n  }\n  var p = {\n    props: omit(props, ['on', 'key', 'class', 'className', 'style']),\n    on: on,\n    'class': cls || props.className,\n    style: style,\n    key: key\n  };\n  // Warning user not to use deprecated label prop.\n  if (label && !title) {\n    if (!warnDeprecatedLabel) {\n      warning(false, \"'label' in treeData is deprecated. Please use 'title' instead.\");\n      warnDeprecatedLabel = true;\n    }\n\n    p.props.title = label;\n  }\n\n  return p;\n}\n\nexport function convertDataToTree(h, treeData) {\n  return vcConvertDataToTree(h, treeData, { processProps: processProps });\n}\n\n/**\n * Use `rc-tree` convertTreeToEntities for entities calculation.\n * We have additional entities of `valueEntities`\n */\nfunction initWrapper(wrapper) {\n  return _extends({}, wrapper, {\n    valueEntities: {}\n  });\n}\n\nfunction processEntity(entity, wrapper) {\n  var value = getPropsData(entity.node).value;\n  entity.value = value;\n\n  // This should be empty, or will get error message.\n  var currentEntity = wrapper.valueEntities[value];\n  if (currentEntity) {\n    warning(false, 'Conflict! value of node \\'' + entity.key + '\\' (' + value + ') has already used by node \\'' + currentEntity.key + '\\'.');\n  }\n  wrapper.valueEntities[value] = entity;\n}\n\nexport function convertTreeToEntities(treeNodes) {\n  return vcConvertTreeToEntities(treeNodes, {\n    initWrapper: initWrapper,\n    processEntity: processEntity\n  });\n}\n\n/**\n * https://github.com/ant-design/ant-design/issues/13328\n * We need calculate the half check key when searchValue is set.\n */\n// TODO: This logic may better move to rc-tree\nexport function getHalfCheckedKeys(valueList, valueEntities) {\n  var values = {};\n\n  // Fill checked keys\n  valueList.forEach(function (_ref6) {\n    var value = _ref6.value;\n\n    values[value] = false;\n  });\n\n  // Fill half checked keys\n  valueList.forEach(function (_ref7) {\n    var value = _ref7.value;\n\n    var current = valueEntities[value];\n\n    while (current && current.parent) {\n      var parentValue = current.parent.value;\n      if (parentValue in values) break;\n      values[parentValue] = true;\n\n      current = current.parent;\n    }\n  });\n\n  // Get half keys\n  return Object.keys(values).filter(function (value) {\n    return values[value];\n  }).map(function (value) {\n    return valueEntities[value].key;\n  });\n}\n\nexport var conductCheck = rcConductCheck;","import _mergeJSXProps from 'babel-helper-vue-jsx-merge-props';\nimport _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport PropTypes from '../../_util/vue-types';\n\nimport Trigger from '../../vc-trigger';\nimport { createRef } from './util';\nimport classNames from 'classnames';\n\nvar BUILT_IN_PLACEMENTS = {\n  bottomLeft: {\n    points: ['tl', 'bl'],\n    offset: [0, 4],\n    overflow: {\n      adjustX: 0,\n      adjustY: 1\n    },\n    ignoreShake: true\n  },\n  topLeft: {\n    points: ['bl', 'tl'],\n    offset: [0, -4],\n    overflow: {\n      adjustX: 0,\n      adjustY: 1\n    },\n    ignoreShake: true\n  }\n};\n\nvar SelectTrigger = {\n  name: 'SelectTrigger',\n  props: {\n    // Pass by outside user props\n    disabled: PropTypes.bool,\n    showSearch: PropTypes.bool,\n    prefixCls: PropTypes.string,\n    dropdownPopupAlign: PropTypes.object,\n    dropdownClassName: PropTypes.string,\n    dropdownStyle: PropTypes.object,\n    transitionName: PropTypes.string,\n    animation: PropTypes.string,\n    getPopupContainer: PropTypes.func,\n\n    dropdownMatchSelectWidth: PropTypes.bool,\n\n    // Pass by Select\n    isMultiple: PropTypes.bool,\n    dropdownPrefixCls: PropTypes.string,\n    dropdownVisibleChange: PropTypes.func,\n    popupElement: PropTypes.node,\n    open: PropTypes.bool\n  },\n  created: function created() {\n    this.triggerRef = createRef();\n  },\n\n  methods: {\n    getDropdownTransitionName: function getDropdownTransitionName() {\n      var _$props = this.$props,\n          transitionName = _$props.transitionName,\n          animation = _$props.animation,\n          dropdownPrefixCls = _$props.dropdownPrefixCls;\n\n      if (!transitionName && animation) {\n        return dropdownPrefixCls + '-' + animation;\n      }\n      return transitionName;\n    },\n    forcePopupAlign: function forcePopupAlign() {\n      var $trigger = this.triggerRef.current;\n      if ($trigger) {\n        $trigger.forcePopupAlign();\n      }\n    }\n  },\n\n  render: function render() {\n    var _classNames;\n\n    var h = arguments[0];\n    var _$props2 = this.$props,\n        disabled = _$props2.disabled,\n        isMultiple = _$props2.isMultiple,\n        dropdownPopupAlign = _$props2.dropdownPopupAlign,\n        dropdownMatchSelectWidth = _$props2.dropdownMatchSelectWidth,\n        dropdownClassName = _$props2.dropdownClassName,\n        dropdownStyle = _$props2.dropdownStyle,\n        dropdownVisibleChange = _$props2.dropdownVisibleChange,\n        getPopupContainer = _$props2.getPopupContainer,\n        dropdownPrefixCls = _$props2.dropdownPrefixCls,\n        popupElement = _$props2.popupElement,\n        open = _$props2.open;\n\n    // TODO: [Legacy] Use new action when trigger fixed: https://github.com/react-component/trigger/pull/86\n\n    // When false do nothing with the width\n    // ref: https://github.com/ant-design/ant-design/issues/10927\n\n    var stretch = void 0;\n    if (dropdownMatchSelectWidth !== false) {\n      stretch = dropdownMatchSelectWidth ? 'width' : 'minWidth';\n    }\n    return h(\n      Trigger,\n      _mergeJSXProps([{\n        directives: [{\n          name: 'ant-ref',\n          value: this.triggerRef\n        }]\n      }, {\n        attrs: {\n          action: disabled ? [] : ['click'],\n          popupPlacement: 'bottomLeft',\n          builtinPlacements: BUILT_IN_PLACEMENTS,\n          popupAlign: dropdownPopupAlign,\n          prefixCls: dropdownPrefixCls,\n          popupTransitionName: this.getDropdownTransitionName(),\n\n          popup: popupElement,\n          popupVisible: open,\n          getPopupContainer: getPopupContainer,\n          stretch: stretch,\n          popupClassName: classNames(dropdownClassName, (_classNames = {}, _defineProperty(_classNames, dropdownPrefixCls + '--multiple', isMultiple), _defineProperty(_classNames, dropdownPrefixCls + '--single', !isMultiple), _classNames)),\n          popupStyle: dropdownStyle\n        },\n        on: {\n          'popupVisibleChange': dropdownVisibleChange\n        }\n      }]),\n      [this.$slots['default']]\n    );\n  }\n};\n\nexport default SelectTrigger;","import _mergeJSXProps from 'babel-helper-vue-jsx-merge-props';\nimport _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _extends from 'babel-runtime/helpers/extends';\n/**\n * Input Box is in different position for different mode.\n * This not the same design as `Select` cause it's followed by antd 0.x `Select`.\n * We will not follow the new design immediately since antd 3.x is already released.\n *\n * So this file named as Selector to avoid confuse.\n */\nimport { createRef } from '../util';\nimport PropTypes from '../../../_util/vue-types';\nimport classNames from 'classnames';\nimport { initDefaultProps, getComponentFromProp } from '../../../_util/props-util';\nimport BaseMixin from '../../../_util/BaseMixin';\nexport var selectorPropTypes = function selectorPropTypes() {\n  return {\n    prefixCls: PropTypes.string,\n    className: PropTypes.string,\n    open: PropTypes.bool,\n    selectorValueList: PropTypes.array,\n    allowClear: PropTypes.bool,\n    showArrow: PropTypes.bool,\n    // onClick: PropTypes.func,\n    // onBlur: PropTypes.func,\n    // onFocus: PropTypes.func,\n    removeSelected: PropTypes.func,\n    choiceTransitionName: PropTypes.string,\n    // Pass by component\n    ariaId: PropTypes.string,\n    inputIcon: PropTypes.any,\n    clearIcon: PropTypes.any,\n    removeIcon: PropTypes.any,\n    placeholder: PropTypes.any,\n    disabled: PropTypes.bool,\n    focused: PropTypes.bool\n  };\n};\n\nfunction noop() {}\nexport default function (modeName) {\n  var BaseSelector = {\n    name: 'BaseSelector',\n    mixins: [BaseMixin],\n    props: initDefaultProps(_extends({}, selectorPropTypes(), {\n\n      // Pass by HOC\n      renderSelection: PropTypes.func.isRequired,\n      renderPlaceholder: PropTypes.func,\n      tabIndex: PropTypes.number\n    }), {\n      tabIndex: 0\n    }),\n    inject: {\n      vcTreeSelect: { 'default': function _default() {\n          return {};\n        } }\n    },\n    created: function created() {\n      this.domRef = createRef();\n    },\n\n    methods: {\n      onFocus: function onFocus(e) {\n        var focused = this.$props.focused;\n        var onSelectorFocus = this.vcTreeSelect.onSelectorFocus;\n\n\n        if (!focused) {\n          onSelectorFocus();\n        }\n        this.__emit('focus', e);\n      },\n      onBlur: function onBlur(e) {\n        var onSelectorBlur = this.vcTreeSelect.onSelectorBlur;\n\n        // TODO: Not trigger when is inner component get focused\n\n        onSelectorBlur();\n        this.__emit('blur', e);\n      },\n      focus: function focus() {\n        this.domRef.current.focus();\n      },\n      blur: function blur() {\n        this.domRef.current.blur();\n      },\n      renderClear: function renderClear() {\n        var h = this.$createElement;\n        var _$props = this.$props,\n            prefixCls = _$props.prefixCls,\n            allowClear = _$props.allowClear,\n            selectorValueList = _$props.selectorValueList;\n        var onSelectorClear = this.vcTreeSelect.onSelectorClear;\n\n\n        if (!allowClear || !selectorValueList.length || !selectorValueList[0].value) {\n          return null;\n        }\n        var clearIcon = getComponentFromProp(this, 'clearIcon');\n        return h(\n          'span',\n          { key: 'clear', 'class': prefixCls + '-selection__clear', on: {\n              'click': onSelectorClear\n            }\n          },\n          [clearIcon]\n        );\n      },\n      renderArrow: function renderArrow() {\n        var h = this.$createElement;\n        var _$props2 = this.$props,\n            prefixCls = _$props2.prefixCls,\n            showArrow = _$props2.showArrow;\n\n        if (!showArrow) {\n          return null;\n        }\n        var inputIcon = getComponentFromProp(this, 'inputIcon');\n        return h(\n          'span',\n          { key: 'arrow', 'class': prefixCls + '-arrow', style: { outline: 'none' } },\n          [inputIcon]\n        );\n      }\n    },\n\n    render: function render() {\n      var _classNames;\n\n      var h = arguments[0];\n      var _$props3 = this.$props,\n          prefixCls = _$props3.prefixCls,\n          className = _$props3.className,\n          style = _$props3.style,\n          open = _$props3.open,\n          focused = _$props3.focused,\n          disabled = _$props3.disabled,\n          allowClear = _$props3.allowClear,\n          ariaId = _$props3.ariaId,\n          renderSelection = _$props3.renderSelection,\n          renderPlaceholder = _$props3.renderPlaceholder,\n          tabIndex = _$props3.tabIndex;\n      var onSelectorKeyDown = this.vcTreeSelect.onSelectorKeyDown,\n          $listeners = this.$listeners;\n\n\n      var myTabIndex = tabIndex;\n      if (disabled) {\n        myTabIndex = null;\n      }\n\n      return h(\n        'span',\n        _mergeJSXProps([{\n          style: style,\n          on: {\n            'click': $listeners.click || noop\n          },\n\n          'class': classNames(className, prefixCls, (_classNames = {}, _defineProperty(_classNames, prefixCls + '-open', open), _defineProperty(_classNames, prefixCls + '-focused', open || focused), _defineProperty(_classNames, prefixCls + '-disabled', disabled), _defineProperty(_classNames, prefixCls + '-enabled', !disabled), _defineProperty(_classNames, prefixCls + '-allow-clear', allowClear), _classNames))\n        }, {\n          directives: [{\n            name: 'ant-ref',\n            value: this.domRef\n          }]\n        }, {\n          attrs: {\n            role: 'combobox',\n            'aria-expanded': open,\n            'aria-owns': open ? ariaId : undefined,\n            'aria-controls': open ? ariaId : undefined,\n            'aria-haspopup': 'listbox',\n            'aria-disabled': disabled,\n            tabIndex: myTabIndex\n          },\n          on: {\n            'focus': this.onFocus,\n            'blur': this.onBlur,\n            'keydown': onSelectorKeyDown\n          }\n        }]),\n        [h(\n          'span',\n          {\n            key: 'selection',\n            'class': classNames(prefixCls + '-selection', prefixCls + '-selection--' + modeName)\n          },\n          [renderSelection(), this.renderClear(), this.renderArrow(), renderPlaceholder && renderPlaceholder()]\n        )]\n      );\n    }\n  };\n\n  return BaseSelector;\n}","import _extends from 'babel-runtime/helpers/extends';\nimport generateSelector, { selectorPropTypes } from '../Base/BaseSelector';\nimport { toTitle } from '../util';\nimport { getOptionProps } from '../../../_util/props-util';\nimport { createRef } from '../util';\nvar Selector = generateSelector('single');\n\nvar SingleSelector = {\n  name: 'SingleSelector',\n  props: selectorPropTypes(),\n  created: function created() {\n    this.selectorRef = createRef();\n  },\n\n  methods: {\n    focus: function focus() {\n      this.selectorRef.current.focus();\n    },\n    blur: function blur() {\n      this.selectorRef.current.blur();\n    },\n    renderSelection: function renderSelection() {\n      var h = this.$createElement;\n      var _$props = this.$props,\n          selectorValueList = _$props.selectorValueList,\n          placeholder = _$props.placeholder,\n          prefixCls = _$props.prefixCls;\n\n\n      var innerNode = void 0;\n\n      if (selectorValueList.length) {\n        var _selectorValueList$ = selectorValueList[0],\n            label = _selectorValueList$.label,\n            value = _selectorValueList$.value;\n\n        innerNode = h(\n          'span',\n          { key: 'value', attrs: { title: toTitle(label) },\n            'class': prefixCls + '-selection-selected-value' },\n          [label || value]\n        );\n      } else {\n        innerNode = h(\n          'span',\n          { key: 'placeholder', 'class': prefixCls + '-selection__placeholder' },\n          [placeholder]\n        );\n      }\n\n      return h(\n        'span',\n        { 'class': prefixCls + '-selection__rendered' },\n        [innerNode]\n      );\n    }\n  },\n\n  render: function render() {\n    var h = arguments[0];\n\n    var props = {\n      props: _extends({}, getOptionProps(this), {\n        renderSelection: this.renderSelection\n      }),\n      on: this.$listeners,\n      directives: [{\n        name: 'ant-ref',\n        value: this.selectorRef\n      }]\n    };\n    return h(Selector, props);\n  }\n};\n\nexport default SingleSelector;","import _mergeJSXProps from 'babel-helper-vue-jsx-merge-props';\nimport _extends from 'babel-runtime/helpers/extends';\n/**\n * Since search box is in different position with different mode.\n * - Single: in the popup box\n * - multiple: in the selector\n * Move the code as a SearchInput for easy management.\n */\n\nimport PropTypes from '../../_util/vue-types';\nimport { createRef } from './util';\n\nvar SearchInput = {\n  name: 'SearchInput',\n  props: {\n    open: PropTypes.bool,\n    searchValue: PropTypes.string,\n    prefixCls: PropTypes.string,\n    disabled: PropTypes.bool,\n    renderPlaceholder: PropTypes.func,\n    needAlign: PropTypes.bool,\n    ariaId: PropTypes.string\n  },\n  inject: {\n    vcTreeSelect: { 'default': function _default() {\n        return {};\n      } }\n  },\n  data: function data() {\n    return {\n      mirrorSearchValue: this.searchValue\n    };\n  },\n\n  watch: {\n    searchValue: function searchValue(val) {\n      this.mirrorSearchValue = val;\n    }\n  },\n  created: function created() {\n    this.inputRef = createRef();\n    this.mirrorInputRef = createRef();\n    this.prevProps = _extends({}, this.$props);\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$nextTick(function () {\n      var _$props = _this.$props,\n          open = _$props.open,\n          needAlign = _$props.needAlign;\n\n      if (needAlign) {\n        _this.alignInputWidth();\n      }\n\n      if (open) {\n        _this.focus(true);\n      }\n    });\n  },\n  updated: function updated() {\n    var _this2 = this;\n\n    var _$props2 = this.$props,\n        open = _$props2.open,\n        searchValue = _$props2.searchValue,\n        needAlign = _$props2.needAlign;\n    var prevProps = this.prevProps;\n\n    this.$nextTick(function () {\n      if (open && prevProps.open !== open) {\n        _this2.focus();\n      }\n      if (needAlign && searchValue !== prevProps.searchValue) {\n        _this2.alignInputWidth();\n      }\n      _this2.prevProps = _extends({}, _this2.$props);\n    });\n  },\n\n  methods: {\n    /**\n     * `scrollWidth` is not correct in IE, do the workaround.\n     * ref: https://github.com/react-component/tree-select/issues/65\n     *  clientWidth 0 when mounted in vue. why?\n     */\n    alignInputWidth: function alignInputWidth() {\n      this.inputRef.current.style.width = (this.mirrorInputRef.current.clientWidth || this.mirrorInputRef.current.offsetWidth) + 'px';\n    },\n\n\n    /**\n     * Need additional timeout for focus cause parent dom is not ready when didMount trigger\n     */\n    focus: function focus(isDidMount) {\n      var _this3 = this;\n\n      if (this.inputRef.current) {\n        if (isDidMount) {\n          setTimeout(function () {\n            _this3.inputRef.current.focus();\n          }, 0);\n        } else {\n          // set it into else, Avoid scrolling when focus\n          this.inputRef.current.focus();\n        }\n      }\n    },\n    blur: function blur() {\n      if (this.inputRef.current) {\n        this.inputRef.current.blur();\n      }\n    },\n    handleInputChange: function handleInputChange(e) {\n      var _e$target = e.target,\n          value = _e$target.value,\n          composing = _e$target.composing;\n      var _searchValue = this.searchValue,\n          searchValue = _searchValue === undefined ? '' : _searchValue;\n\n      if (composing || searchValue === value) {\n        this.mirrorSearchValue = value;\n        return;\n      }\n      this.vcTreeSelect.onSearchInputChange(e);\n    }\n  },\n\n  render: function render() {\n    var h = arguments[0];\n    var _$props3 = this.$props,\n        searchValue = _$props3.searchValue,\n        prefixCls = _$props3.prefixCls,\n        disabled = _$props3.disabled,\n        renderPlaceholder = _$props3.renderPlaceholder,\n        open = _$props3.open,\n        ariaId = _$props3.ariaId;\n    var onSearchInputKeyDown = this.vcTreeSelect.onSearchInputKeyDown,\n        handleInputChange = this.handleInputChange,\n        mirrorSearchValue = this.mirrorSearchValue;\n\n    return h(\n      'span',\n      { 'class': prefixCls + '-search__field__wrap' },\n      [h('input', _mergeJSXProps([{\n        attrs: {\n          type: 'text'\n        }\n      }, {\n        directives: [{\n          name: 'ant-ref',\n          value: this.inputRef\n        }, {\n          name: 'ant-input'\n        }]\n      }, {\n        on: {\n          'input': handleInputChange,\n          'keydown': onSearchInputKeyDown\n        },\n        domProps: {\n          'value': searchValue\n        },\n        attrs: {\n          disabled: disabled,\n\n          'aria-label': 'filter select',\n          'aria-autocomplete': 'list',\n          'aria-controls': open ? ariaId : undefined,\n          'aria-multiline': 'false'\n        },\n        'class': prefixCls + '-search__field' }])), h(\n        'span',\n        _mergeJSXProps([{\n          directives: [{\n            name: 'ant-ref',\n            value: this.mirrorInputRef\n          }]\n        }, {\n          'class': prefixCls + '-search__field__mirror'\n        }]),\n        [mirrorSearchValue, '\\xA0']\n      ), renderPlaceholder ? renderPlaceholder() : null]\n    );\n  }\n};\n\nexport default SearchInput;","import _mergeJSXProps from 'babel-helper-vue-jsx-merge-props';\nimport PropTypes from '../../../../_util/vue-types';\nimport { toTitle, UNSELECTABLE_ATTRIBUTE, UNSELECTABLE_STYLE } from '../../util';\nimport { getComponentFromProp } from '../../../../_util/props-util';\nimport BaseMixin from '../../../../_util/BaseMixin';\n\nvar Selection = {\n  mixins: [BaseMixin],\n  props: {\n    prefixCls: PropTypes.string,\n    maxTagTextLength: PropTypes.number,\n    // onRemove: PropTypes.func,\n\n    label: PropTypes.any,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    removeIcon: PropTypes.any\n  },\n  methods: {\n    onRemove: function onRemove(event) {\n      var value = this.$props.value;\n\n      this.__emit('remove', event, value);\n      event.stopPropagation();\n    }\n  },\n\n  render: function render() {\n    var h = arguments[0];\n    var _$props = this.$props,\n        prefixCls = _$props.prefixCls,\n        maxTagTextLength = _$props.maxTagTextLength,\n        label = _$props.label,\n        value = _$props.value;\n    var $listeners = this.$listeners;\n\n    var content = label || value;\n    if (maxTagTextLength && typeof content === 'string' && content.length > maxTagTextLength) {\n      content = content.slice(0, maxTagTextLength) + '...';\n    }\n\n    return h(\n      'li',\n      _mergeJSXProps([{\n        style: UNSELECTABLE_STYLE\n      }, { attrs: UNSELECTABLE_ATTRIBUTE }, {\n        attrs: {\n          role: 'menuitem',\n\n          title: toTitle(label)\n        },\n        'class': prefixCls + '-selection__choice' }]),\n      [$listeners.remove && h(\n        'span',\n        { 'class': prefixCls + '-selection__choice__remove', on: {\n            'click': this.onRemove\n          }\n        },\n        [getComponentFromProp(this, 'removeIcon')]\n      ), h(\n        'span',\n        { 'class': prefixCls + '-selection__choice__content' },\n        [content]\n      )]\n    );\n  }\n};\n\nexport default Selection;","import _mergeJSXProps from 'babel-helper-vue-jsx-merge-props';\nimport _toConsumableArray from 'babel-runtime/helpers/toConsumableArray';\nimport _extends from 'babel-runtime/helpers/extends';\nimport PropTypes from '../../../../_util/vue-types';\nimport { createRef } from '../../util';\nimport generateSelector, { selectorPropTypes } from '../../Base/BaseSelector';\nimport SearchInput from '../../SearchInput';\nimport Selection from './Selection';\nimport { getComponentFromProp } from '../../../../_util/props-util';\nimport getTransitionProps from '../../../../_util/getTransitionProps';\nimport BaseMixin from '../../../../_util/BaseMixin';\nvar TREE_SELECT_EMPTY_VALUE_KEY = 'RC_TREE_SELECT_EMPTY_VALUE_KEY';\n\nvar Selector = generateSelector('multiple');\n\n// export const multipleSelectorContextTypes = {\n//   onMultipleSelectorRemove: PropTypes.func.isRequired,\n// }\n\nvar MultipleSelector = {\n  mixins: [BaseMixin],\n  props: _extends({}, selectorPropTypes(), SearchInput.props, {\n    selectorValueList: PropTypes.array,\n    disabled: PropTypes.bool,\n    searchValue: PropTypes.string,\n    labelInValue: PropTypes.bool,\n    maxTagCount: PropTypes.number,\n    maxTagPlaceholder: PropTypes.any\n\n    // onChoiceAnimationLeave: PropTypes.func,\n  }),\n  inject: {\n    vcTreeSelect: { 'default': function _default() {\n        return {};\n      } }\n  },\n  created: function created() {\n    this.inputRef = createRef();\n  },\n\n  methods: {\n    onPlaceholderClick: function onPlaceholderClick() {\n      this.inputRef.current.focus();\n    },\n    focus: function focus() {\n      this.inputRef.current.focus();\n    },\n    blur: function blur() {\n      this.inputRef.current.blur();\n    },\n    _renderPlaceholder: function _renderPlaceholder() {\n      var h = this.$createElement;\n      var _$props = this.$props,\n          prefixCls = _$props.prefixCls,\n          placeholder = _$props.placeholder,\n          searchPlaceholder = _$props.searchPlaceholder,\n          searchValue = _$props.searchValue,\n          selectorValueList = _$props.selectorValueList;\n\n\n      var currentPlaceholder = placeholder || searchPlaceholder;\n\n      if (!currentPlaceholder) return null;\n\n      var hidden = searchValue || selectorValueList.length;\n\n      // [Legacy] Not remove the placeholder\n      return h(\n        'span',\n        {\n          style: {\n            display: hidden ? 'none' : 'block'\n          },\n          on: {\n            'click': this.onPlaceholderClick\n          },\n\n          'class': prefixCls + '-search__field__placeholder'\n        },\n        [currentPlaceholder]\n      );\n    },\n    onChoiceAnimationLeave: function onChoiceAnimationLeave() {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      this.__emit.apply(this, ['choiceAnimationLeave'].concat(_toConsumableArray(args)));\n    },\n    renderSelection: function renderSelection() {\n      var _this = this;\n\n      var h = this.$createElement;\n      var _$props2 = this.$props,\n          selectorValueList = _$props2.selectorValueList,\n          choiceTransitionName = _$props2.choiceTransitionName,\n          prefixCls = _$props2.prefixCls,\n          labelInValue = _$props2.labelInValue,\n          maxTagCount = _$props2.maxTagCount;\n      var onMultipleSelectorRemove = this.vcTreeSelect.onMultipleSelectorRemove,\n          $listeners = this.$listeners,\n          $slots = this.$slots;\n\n      // Check if `maxTagCount` is set\n\n      var myValueList = selectorValueList;\n      if (maxTagCount >= 0) {\n        myValueList = selectorValueList.slice(0, maxTagCount);\n      }\n      // Selector node list\n      var selectedValueNodes = myValueList.map(function (_ref) {\n        var label = _ref.label,\n            value = _ref.value;\n        return h(\n          Selection,\n          _mergeJSXProps([{\n            props: _extends({}, _this.$props, {\n              label: label,\n              value: value\n            }),\n            on: _extends({}, $listeners, { remove: onMultipleSelectorRemove })\n          }, {\n            key: value || TREE_SELECT_EMPTY_VALUE_KEY\n          }]),\n          [$slots['default']]\n        );\n      });\n\n      // Rest node count\n      if (maxTagCount >= 0 && maxTagCount < selectorValueList.length) {\n        var content = '+ ' + (selectorValueList.length - maxTagCount) + ' ...';\n        var maxTagPlaceholder = getComponentFromProp(this, 'maxTagPlaceholder', {}, false);\n        if (typeof maxTagPlaceholder === 'string') {\n          content = maxTagPlaceholder;\n        } else if (typeof maxTagPlaceholder === 'function') {\n          var restValueList = selectorValueList.slice(maxTagCount);\n          content = maxTagPlaceholder(labelInValue ? restValueList : restValueList.map(function (_ref2) {\n            var value = _ref2.value;\n            return value;\n          }));\n        }\n\n        var restNodeSelect = h(\n          Selection,\n          _mergeJSXProps([{\n            props: _extends({}, this.$props, {\n              label: content,\n              value: null\n            }),\n            on: $listeners\n          }, {\n            key: 'rc-tree-select-internal-max-tag-counter'\n          }]),\n          [$slots['default']]\n        );\n\n        selectedValueNodes.push(restNodeSelect);\n      }\n\n      selectedValueNodes.push(h(\n        'li',\n        { 'class': prefixCls + '-search ' + prefixCls + '-search--inline', key: '__input' },\n        [h(\n          SearchInput,\n          {\n            props: _extends({}, this.$props, {\n              needAlign: true\n            }),\n            on: $listeners,\n            directives: [{\n              name: 'ant-ref',\n              value: this.inputRef\n            }]\n          },\n          [$slots['default']]\n        )]\n      ));\n      var className = prefixCls + '-selection__rendered';\n      if (choiceTransitionName) {\n        var transitionProps = getTransitionProps(choiceTransitionName, {\n          tag: 'ul',\n          afterLeave: this.onChoiceAnimationLeave\n        });\n        return h(\n          'transition-group',\n          _mergeJSXProps([{ 'class': className }, transitionProps]),\n          [selectedValueNodes]\n        );\n      }\n      return h(\n        'ul',\n        { 'class': className, attrs: { role: 'menubar' }\n        },\n        [selectedValueNodes]\n      );\n    }\n  },\n\n  render: function render() {\n    var h = arguments[0];\n    var $listeners = this.$listeners,\n        $slots = this.$slots;\n\n    return h(\n      Selector,\n      {\n        props: _extends({}, this.$props, {\n          tabIndex: -1,\n          showArrow: false,\n          renderSelection: this.renderSelection,\n          renderPlaceholder: this._renderPlaceholder\n        }),\n        on: $listeners\n      },\n      [$slots['default']]\n    );\n  }\n};\n\nexport default MultipleSelector;","import _toConsumableArray from 'babel-runtime/helpers/toConsumableArray';\nimport _extends from 'babel-runtime/helpers/extends';\nimport warning from 'warning';\nimport PropTypes from '../../../_util/vue-types';\nimport { Tree } from '../../../vc-tree';\nimport BaseMixin from '../../../_util/BaseMixin';\n\n// export const popupContextTypes = {\n//   onPopupKeyDown: PropTypes.func.isRequired,\n//   onTreeNodeSelect: PropTypes.func.isRequired,\n//   onTreeNodeCheck: PropTypes.func.isRequired,\n// }\nfunction getDerivedStateFromProps(nextProps, prevState) {\n  var _ref = prevState || {},\n      _ref$_prevProps = _ref._prevProps,\n      prevProps = _ref$_prevProps === undefined ? {} : _ref$_prevProps,\n      loadedKeys = _ref._loadedKeys,\n      expandedKeyList = _ref._expandedKeyList,\n      cachedExpandedKeyList = _ref._cachedExpandedKeyList;\n\n  var valueList = nextProps.valueList,\n      valueEntities = nextProps.valueEntities,\n      keyEntities = nextProps.keyEntities,\n      treeExpandedKeys = nextProps.treeExpandedKeys,\n      filteredTreeNodes = nextProps.filteredTreeNodes,\n      upperSearchValue = nextProps.upperSearchValue;\n\n\n  var newState = {\n    _prevProps: _extends({}, nextProps)\n  };\n\n  // Check value update\n  if (valueList !== prevProps.valueList) {\n    newState._keyList = valueList.map(function (_ref2) {\n      var value = _ref2.value;\n      return valueEntities[value];\n    }).filter(function (entity) {\n      return entity;\n    }).map(function (_ref3) {\n      var key = _ref3.key;\n      return key;\n    });\n  }\n\n  // Show all when tree is in filter mode\n  if (!treeExpandedKeys && filteredTreeNodes && filteredTreeNodes.length && filteredTreeNodes !== prevProps.filteredTreeNodes) {\n    newState._expandedKeyList = [].concat(_toConsumableArray(keyEntities.keys()));\n  }\n\n  // Cache `expandedKeyList` when filter set\n  if (upperSearchValue && !prevProps.upperSearchValue) {\n    newState._cachedExpandedKeyList = expandedKeyList;\n  } else if (!upperSearchValue && prevProps.upperSearchValue && !treeExpandedKeys) {\n    newState._expandedKeyList = cachedExpandedKeyList || [];\n    newState._cachedExpandedKeyList = [];\n  }\n\n  // Use expandedKeys if provided\n  if (prevProps.treeExpandedKeys !== treeExpandedKeys) {\n    newState._expandedKeyList = treeExpandedKeys;\n  }\n\n  // Clean loadedKeys if key not exist in keyEntities anymore\n  if (nextProps.loadData) {\n    newState._loadedKeys = loadedKeys.filter(function (key) {\n      return keyEntities.has(key);\n    });\n  }\n\n  return newState;\n}\nvar BasePopup = {\n  mixins: [BaseMixin],\n  name: 'BasePopup',\n  props: {\n    prefixCls: PropTypes.string,\n    upperSearchValue: PropTypes.string,\n    valueList: PropTypes.array,\n    searchHalfCheckedKeys: PropTypes.array,\n    valueEntities: PropTypes.object,\n    keyEntities: Map,\n    treeIcon: PropTypes.bool,\n    treeLine: PropTypes.bool,\n    treeNodeFilterProp: PropTypes.string,\n    treeCheckable: PropTypes.any,\n    treeCheckStrictly: PropTypes.bool,\n    treeDefaultExpandAll: PropTypes.bool,\n    treeDefaultExpandedKeys: PropTypes.array,\n    treeExpandedKeys: PropTypes.array,\n    loadData: PropTypes.func,\n    multiple: PropTypes.bool,\n    // onTreeExpand: PropTypes.func,\n    searchValue: PropTypes.string,\n    treeNodes: PropTypes.any,\n    filteredTreeNodes: PropTypes.any,\n    notFoundContent: PropTypes.any,\n\n    ariaId: PropTypes.string,\n    switcherIcon: PropTypes.any,\n    // HOC\n    renderSearch: PropTypes.func,\n    // onTreeExpanded: PropTypes.func,\n\n    __propsSymbol__: PropTypes.any\n  },\n  inject: {\n    vcTreeSelect: { 'default': function _default() {\n        return {};\n      } }\n  },\n  watch: {\n    __propsSymbol__: function __propsSymbol__() {\n      var state = getDerivedStateFromProps(this.$props, this.$data);\n      this.setState(state);\n    }\n  },\n  data: function data() {\n    warning(this.$props.__propsSymbol__, 'must pass __propsSymbol__');\n    var _$props = this.$props,\n        treeDefaultExpandAll = _$props.treeDefaultExpandAll,\n        treeDefaultExpandedKeys = _$props.treeDefaultExpandedKeys,\n        keyEntities = _$props.keyEntities;\n\n    // TODO: make `expandedKeyList` control\n\n    var expandedKeyList = treeDefaultExpandedKeys;\n    if (treeDefaultExpandAll) {\n      expandedKeyList = [].concat(_toConsumableArray(keyEntities.keys()));\n    }\n\n    var state = {\n      _keyList: [],\n      _expandedKeyList: expandedKeyList,\n      // Cache `expandedKeyList` when tree is in filter. This is used in `getDerivedStateFromProps`\n      _cachedExpandedKeyList: [], // eslint-disable-line react/no-unused-state\n      _loadedKeys: [],\n      _prevProps: {}\n    };\n    return _extends({}, state, getDerivedStateFromProps(this.$props, state));\n  },\n\n  methods: {\n    onTreeExpand: function onTreeExpand(expandedKeyList) {\n      var _this = this;\n\n      var treeExpandedKeys = this.$props.treeExpandedKeys;\n\n      // Set uncontrolled state\n\n      if (!treeExpandedKeys) {\n        this.setState({ _expandedKeyList: expandedKeyList }, function () {\n          _this.__emit('treeExpanded');\n        });\n      }\n      this.__emit('update:treeExpandedKeys', expandedKeyList);\n      this.__emit('treeExpand', expandedKeyList);\n    },\n    onLoad: function onLoad(loadedKeys) {\n      this.setState({ _loadedKeys: loadedKeys });\n    },\n\n\n    /**\n     * Not pass `loadData` when searching. To avoid loop ajax call makes browser crash.\n     */\n    getLoadData: function getLoadData() {\n      var _$props2 = this.$props,\n          loadData = _$props2.loadData,\n          upperSearchValue = _$props2.upperSearchValue;\n\n      if (upperSearchValue) return null;\n      return loadData;\n    },\n\n\n    /**\n     * This method pass to Tree component which is used for add filtered class\n     * in TreeNode > li\n     */\n    filterTreeNode: function filterTreeNode(treeNode) {\n      var _$props3 = this.$props,\n          upperSearchValue = _$props3.upperSearchValue,\n          treeNodeFilterProp = _$props3.treeNodeFilterProp;\n\n\n      var filterVal = treeNode[treeNodeFilterProp];\n      if (typeof filterVal === 'string') {\n        return upperSearchValue && filterVal.toUpperCase().indexOf(upperSearchValue) !== -1;\n      }\n\n      return false;\n    },\n    renderNotFound: function renderNotFound() {\n      var h = this.$createElement;\n      var _$props4 = this.$props,\n          prefixCls = _$props4.prefixCls,\n          notFoundContent = _$props4.notFoundContent;\n\n\n      return h(\n        'span',\n        { 'class': prefixCls + '-not-found' },\n        [notFoundContent]\n      );\n    }\n  },\n\n  render: function render() {\n    var h = arguments[0];\n    var _$data = this.$data,\n        keyList = _$data._keyList,\n        expandedKeyList = _$data._expandedKeyList,\n        loadedKeys = _$data._loadedKeys;\n    var _$props5 = this.$props,\n        prefixCls = _$props5.prefixCls,\n        treeNodes = _$props5.treeNodes,\n        filteredTreeNodes = _$props5.filteredTreeNodes,\n        treeIcon = _$props5.treeIcon,\n        treeLine = _$props5.treeLine,\n        treeCheckable = _$props5.treeCheckable,\n        treeCheckStrictly = _$props5.treeCheckStrictly,\n        multiple = _$props5.multiple,\n        ariaId = _$props5.ariaId,\n        renderSearch = _$props5.renderSearch,\n        switcherIcon = _$props5.switcherIcon,\n        searchHalfCheckedKeys = _$props5.searchHalfCheckedKeys;\n    var _vcTreeSelect = this.vcTreeSelect,\n        onPopupKeyDown = _vcTreeSelect.onPopupKeyDown,\n        onTreeNodeSelect = _vcTreeSelect.onTreeNodeSelect,\n        onTreeNodeCheck = _vcTreeSelect.onTreeNodeCheck;\n\n\n    var loadData = this.getLoadData();\n\n    var treeProps = {};\n\n    if (treeCheckable) {\n      treeProps.checkedKeys = keyList;\n    } else {\n      treeProps.selectedKeys = keyList;\n    }\n    var $notFound = void 0;\n    var $treeNodes = void 0;\n    if (filteredTreeNodes) {\n      if (filteredTreeNodes.length) {\n        treeProps.checkStrictly = true;\n        $treeNodes = filteredTreeNodes;\n\n        // Fill halfCheckedKeys\n        if (treeCheckable && !treeCheckStrictly) {\n          treeProps.checkedKeys = {\n            checked: keyList,\n            halfChecked: searchHalfCheckedKeys\n          };\n        }\n      } else {\n        $notFound = this.renderNotFound();\n      }\n    } else if (!treeNodes.length) {\n      $notFound = this.renderNotFound();\n    } else {\n      $treeNodes = treeNodes;\n    }\n\n    var $tree = void 0;\n    if ($notFound) {\n      $tree = $notFound;\n    } else {\n      var treeAllProps = {\n        props: _extends({\n          prefixCls: prefixCls + '-tree',\n          showIcon: treeIcon,\n          showLine: treeLine,\n          selectable: !treeCheckable,\n          checkable: treeCheckable,\n          checkStrictly: treeCheckStrictly,\n          multiple: multiple,\n          loadData: loadData,\n          loadedKeys: loadedKeys,\n          expandedKeys: expandedKeyList,\n          filterTreeNode: this.filterTreeNode,\n          switcherIcon: switcherIcon\n        }, treeProps, {\n          __propsSymbol__: Symbol(),\n          children: $treeNodes\n        }),\n        on: {\n          select: onTreeNodeSelect,\n          check: onTreeNodeCheck,\n          expand: this.onTreeExpand,\n          load: this.onLoad\n        }\n      };\n      $tree = h(Tree, treeAllProps);\n    }\n\n    return h(\n      'div',\n      {\n        attrs: { role: 'listbox', id: ariaId, tabIndex: -1 },\n        on: {\n          'keydown': onPopupKeyDown\n        }\n      },\n      [renderSearch ? renderSearch() : null, $tree]\n    );\n  }\n};\n\nexport default BasePopup;","import _extends from 'babel-runtime/helpers/extends';\nimport PropTypes from '../../../_util/vue-types';\nimport BasePopup from '../Base/BasePopup';\nimport SearchInput from '../SearchInput';\nimport { createRef } from '../util';\n\nvar SinglePopup = {\n  name: 'SinglePopup',\n  props: _extends({}, BasePopup.props, SearchInput.props, {\n    searchValue: PropTypes.string,\n    showSearch: PropTypes.bool,\n    dropdownPrefixCls: PropTypes.string,\n    disabled: PropTypes.bool,\n    searchPlaceholder: PropTypes.string\n  }),\n  created: function created() {\n    this.inputRef = createRef();\n  },\n\n  methods: {\n    onPlaceholderClick: function onPlaceholderClick() {\n      this.inputRef.current.focus();\n    },\n    _renderPlaceholder: function _renderPlaceholder() {\n      var h = this.$createElement;\n      var _$props = this.$props,\n          searchPlaceholder = _$props.searchPlaceholder,\n          searchValue = _$props.searchValue,\n          prefixCls = _$props.prefixCls;\n\n\n      if (!searchPlaceholder) {\n        return null;\n      }\n\n      return h(\n        'span',\n        {\n          style: {\n            display: searchValue ? 'none' : 'block'\n          },\n          on: {\n            'click': this.onPlaceholderClick\n          },\n\n          'class': prefixCls + '-search__field__placeholder'\n        },\n        [searchPlaceholder]\n      );\n    },\n    _renderSearch: function _renderSearch() {\n      var h = this.$createElement;\n      var _$props2 = this.$props,\n          showSearch = _$props2.showSearch,\n          dropdownPrefixCls = _$props2.dropdownPrefixCls;\n\n\n      if (!showSearch) {\n        return null;\n      }\n\n      return h(\n        'span',\n        { 'class': dropdownPrefixCls + '-search' },\n        [h(SearchInput, {\n          props: _extends({}, this.$props, { renderPlaceholder: this._renderPlaceholder }),\n          on: this.$listeners,\n          directives: [{\n            name: 'ant-ref',\n            value: this.inputRef\n          }]\n        })]\n      );\n    }\n  },\n  render: function render() {\n    var h = arguments[0];\n\n    return h(BasePopup, {\n      props: _extends({}, this.$props, { renderSearch: this._renderSearch, __propsSymbol__: Symbol() }),\n      on: this.$listeners\n    });\n  }\n};\n\nexport default SinglePopup;","import BasePopup from '../Base/BasePopup';\n\nexport default BasePopup;","import _mergeJSXProps from 'babel-helper-vue-jsx-merge-props';\nimport _toConsumableArray from 'babel-runtime/helpers/toConsumableArray';\nimport _extends from 'babel-runtime/helpers/extends';\n/**\n * ARIA: https://www.w3.org/TR/wai-aria/#combobox\n * Sample 1: https://www.w3.org/TR/2017/NOTE-wai-aria-practices-1.1-20171214/examples/combobox/aria1.1pattern/listbox-combo.html\n * Sample 2: https://www.w3.org/blog/wai-components-gallery/widget/combobox-with-aria-autocompleteinline/\n *\n * Tab logic:\n * Popup is close\n * 1. Focus input (mark component as focused)\n * 2. Press enter to show the popup\n * 3. If popup has input, focus it\n *\n * Popup is open\n * 1. press tab to close the popup\n * 2. Focus back to the selection input box\n * 3. Let the native tab going on\n *\n * TreeSelect use 2 design type.\n * In single mode, we should focus on the `span`\n * In multiple mode, we should focus on the `input`\n */\n\nimport shallowEqual from 'shallowequal';\nimport raf from 'raf';\nimport warning from 'warning';\nimport PropTypes from '../../_util/vue-types';\nimport KeyCode from '../../_util/KeyCode';\n\nimport SelectTrigger from './SelectTrigger';\nimport SingleSelector from './Selector/SingleSelector';\nimport MultipleSelector from './Selector/MultipleSelector';\nimport SinglePopup from './Popup/SinglePopup';\nimport MultiplePopup from './Popup/MultiplePopup';\n\nimport { SHOW_ALL, SHOW_PARENT, SHOW_CHILD } from './strategies';\nimport BaseMixin from '../../_util/BaseMixin';\nimport { createRef, generateAriaId, formatInternalValue, formatSelectorValue, parseSimpleTreeData, convertDataToTree, convertTreeToEntities, conductCheck, getHalfCheckedKeys, flatToHierarchy, isPosRelated, isLabelInValue as _isLabelInValue, getFilterTree, cleanEntity } from './util';\nimport SelectNode from './SelectNode';\nimport { initDefaultProps, getOptionProps, mergeProps, getPropsData, filterEmpty } from '../../_util/props-util';\nfunction getWatch() {\n  var keys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n  var watch = {};\n  keys.forEach(function (k) {\n    watch[k] = function () {\n      this.needSyncKeys[k] = true;\n    };\n  });\n  return watch;\n}\nvar Select = {\n  name: 'Select',\n  mixins: [BaseMixin],\n  props: initDefaultProps({\n    prefixCls: PropTypes.string,\n    prefixAria: PropTypes.string,\n    multiple: PropTypes.bool,\n    showArrow: PropTypes.bool,\n    open: PropTypes.bool,\n    value: PropTypes.any,\n\n    autoFocus: PropTypes.bool,\n\n    defaultOpen: PropTypes.bool,\n    defaultValue: PropTypes.any,\n\n    showSearch: PropTypes.bool,\n    placeholder: PropTypes.any,\n    inputValue: PropTypes.string, // [Legacy] Deprecated. Use `searchValue` instead.\n    searchValue: PropTypes.string,\n    autoClearSearchValue: PropTypes.bool,\n    searchPlaceholder: PropTypes.any, // [Legacy] Confuse with placeholder\n    disabled: PropTypes.bool,\n    children: PropTypes.any,\n    labelInValue: PropTypes.bool,\n    maxTagCount: PropTypes.number,\n    maxTagPlaceholder: PropTypes.oneOfType([PropTypes.any, PropTypes.func]),\n    maxTagTextLength: PropTypes.number,\n    showCheckedStrategy: PropTypes.oneOf([SHOW_ALL, SHOW_PARENT, SHOW_CHILD]),\n    dropdownClassName: PropTypes.string,\n    dropdownStyle: PropTypes.object,\n    dropdownVisibleChange: PropTypes.func,\n    dropdownMatchSelectWidth: PropTypes.bool,\n    treeData: PropTypes.array,\n    treeDataSimpleMode: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n    treeNodeFilterProp: PropTypes.string,\n    treeNodeLabelProp: PropTypes.string,\n    treeCheckable: PropTypes.oneOfType([PropTypes.any, PropTypes.object, PropTypes.bool]),\n    // treeCheckable: PropTypes.any,\n    treeCheckStrictly: PropTypes.bool,\n    treeIcon: PropTypes.bool,\n    treeLine: PropTypes.bool,\n    treeDefaultExpandAll: PropTypes.bool,\n    treeDefaultExpandedKeys: PropTypes.array,\n    treeExpandedKeys: PropTypes.array,\n    loadData: PropTypes.func,\n    filterTreeNode: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n\n    notFoundContent: PropTypes.any,\n    getPopupContainer: PropTypes.func,\n\n    // onSearch: PropTypes.func,\n    // onSelect: PropTypes.func,\n    // onDeselect: PropTypes.func,\n    // onChange: PropTypes.func,\n    // onDropdownVisibleChange: PropTypes.func,\n\n    // onTreeExpand: PropTypes.func,\n    allowClear: PropTypes.bool,\n    transitionName: PropTypes.string,\n    animation: PropTypes.string,\n    choiceTransitionName: PropTypes.string,\n    inputIcon: PropTypes.any,\n    clearIcon: PropTypes.any,\n    removeIcon: PropTypes.any,\n    switcherIcon: PropTypes.any,\n    __propsSymbol__: PropTypes.any\n  }, {\n    prefixCls: 'rc-tree-select',\n    prefixAria: 'rc-tree-select',\n    showArrow: true,\n    showSearch: true,\n    autoClearSearchValue: true,\n    showCheckedStrategy: SHOW_CHILD,\n\n    // dropdownMatchSelectWidth change the origin design, set to false now\n    // ref: https://github.com/react-component/select/blob/4cad95e098a341a09de239ad6981067188842020/src/Select.jsx#L344\n    // ref: https://github.com/react-component/select/pull/71\n    treeNodeFilterProp: 'value',\n    treeNodeLabelProp: 'title',\n    treeIcon: false,\n    notFoundContent: 'Not Found',\n    dropdownStyle: {},\n    dropdownVisibleChange: function dropdownVisibleChange() {\n      return true;\n    }\n  }),\n\n  data: function data() {\n    warning(this.$props.__propsSymbol__, 'must pass __propsSymbol__');\n    var _$props = this.$props,\n        prefixAria = _$props.prefixAria,\n        defaultOpen = _$props.defaultOpen,\n        open = _$props.open;\n\n    this.needSyncKeys = {};\n    this.selectorRef = createRef();\n    this.selectTriggerRef = createRef();\n\n    // ARIA need `aria-controls` props mapping\n    // Since this need user input. Let's generate ourselves\n    this.ariaId = generateAriaId(prefixAria + '-list');\n\n    var state = {\n      _open: open || defaultOpen,\n      _valueList: [],\n      _searchHalfCheckedKeys: [],\n      _missValueList: [], // Contains the value not in the tree\n      _selectorValueList: [], // Used for multiple selector\n      _valueEntities: {},\n      _posEntities: new Map(),\n      _keyEntities: new Map(),\n      _searchValue: '',\n      _prevProps: {},\n      _init: true,\n      _focused: undefined,\n      _treeNodes: undefined,\n      _filteredTreeNodes: undefined\n    };\n    var newState = this.getDerivedStateFromProps(this.$props, state);\n    return _extends({}, state, newState);\n  },\n  provide: function provide() {\n    return {\n      vcTreeSelect: {\n        onSelectorFocus: this.onSelectorFocus,\n        onSelectorBlur: this.onSelectorBlur,\n        onSelectorKeyDown: this.onComponentKeyDown,\n        onSelectorClear: this.onSelectorClear,\n        onMultipleSelectorRemove: this.onMultipleSelectorRemove,\n\n        onTreeNodeSelect: this.onTreeNodeSelect,\n        onTreeNodeCheck: this.onTreeNodeCheck,\n        onPopupKeyDown: this.onComponentKeyDown,\n\n        onSearchInputChange: this.onSearchInputChange,\n        onSearchInputKeyDown: this.onSearchInputKeyDown\n      }\n    };\n  },\n\n  watch: _extends({}, getWatch(['treeData', 'defaultValue', 'value']), {\n    __propsSymbol__: function __propsSymbol__() {\n      var state = this.getDerivedStateFromProps(this.$props, this.$data);\n      this.setState(state);\n      this.needSyncKeys = {};\n    },\n\n    '$data._valueList': function $data_valueList() {\n      var _this = this;\n\n      this.$nextTick(function () {\n        _this.forcePopupAlign();\n      });\n    }\n  }),\n  mounted: function mounted() {\n    var _this2 = this;\n\n    this.$nextTick(function () {\n      var _$props2 = _this2.$props,\n          autoFocus = _$props2.autoFocus,\n          disabled = _$props2.disabled;\n\n      if (autoFocus && !disabled) {\n        _this2.focus();\n      }\n    });\n  },\n\n\n  methods: {\n    getDerivedStateFromProps: function getDerivedStateFromProps(nextProps, prevState) {\n      var h = this.$createElement;\n      var _prevState$_prevProps = prevState._prevProps,\n          prevProps = _prevState$_prevProps === undefined ? {} : _prevState$_prevProps;\n      var treeCheckable = nextProps.treeCheckable,\n          treeCheckStrictly = nextProps.treeCheckStrictly,\n          filterTreeNode = nextProps.filterTreeNode,\n          treeNodeFilterProp = nextProps.treeNodeFilterProp,\n          treeDataSimpleMode = nextProps.treeDataSimpleMode;\n\n      var newState = {\n        _prevProps: _extends({}, nextProps),\n        _init: false\n      };\n      var self = this;\n      // Process the state when props updated\n      function processState(propName, updater) {\n        if (prevProps[propName] !== nextProps[propName] || self.needSyncKeys[propName]) {\n          updater(nextProps[propName], prevProps[propName]);\n          return true;\n        }\n        return false;\n      }\n\n      var valueRefresh = false;\n\n      // Open\n      processState('open', function (propValue) {\n        newState._open = propValue;\n      });\n\n      // Tree Nodes\n      var treeNodes = void 0;\n      var treeDataChanged = false;\n      var treeDataModeChanged = false;\n      processState('treeData', function (propValue) {\n        treeNodes = convertDataToTree(h, propValue);\n        treeDataChanged = true;\n      });\n\n      processState('treeDataSimpleMode', function (propValue, prevValue) {\n        if (!propValue) return;\n\n        var prev = !prevValue || prevValue === true ? {} : prevValue;\n\n        // Shallow equal to avoid dynamic prop object\n        if (!shallowEqual(propValue, prev)) {\n          treeDataModeChanged = true;\n        }\n      });\n\n      // Parse by `treeDataSimpleMode`\n      if (treeDataSimpleMode && (treeDataChanged || treeDataModeChanged)) {\n        var simpleMapper = _extends({\n          id: 'id',\n          pId: 'pId',\n          rootPId: null\n        }, treeDataSimpleMode !== true ? treeDataSimpleMode : {});\n        treeNodes = convertDataToTree(h, parseSimpleTreeData(nextProps.treeData, simpleMapper));\n      }\n\n      // If `treeData` not provide, use children TreeNodes\n      if (!nextProps.treeData) {\n        // processState('children', (propValue) => {\n        //   treeNodes = Array.isArray(propValue) ? propValue : [propValue]\n        // })\n        treeNodes = filterEmpty(this.$slots['default']);\n      }\n\n      // Convert `treeData` to entities\n      if (treeNodes) {\n        var entitiesMap = convertTreeToEntities(treeNodes);\n        newState._treeNodes = treeNodes;\n        newState._posEntities = entitiesMap.posEntities;\n        newState._valueEntities = entitiesMap.valueEntities;\n        newState._keyEntities = entitiesMap.keyEntities;\n\n        valueRefresh = true;\n      }\n\n      // Value List\n      if (prevState._init) {\n        processState('defaultValue', function (propValue) {\n          newState._valueList = formatInternalValue(propValue, nextProps);\n          valueRefresh = true;\n        });\n      }\n\n      processState('value', function (propValue) {\n        newState._valueList = formatInternalValue(propValue, nextProps);\n        valueRefresh = true;\n      });\n\n      // Selector Value List\n      if (valueRefresh) {\n        // Find out that value not exist in the tree\n        var missValueList = [];\n        var filteredValueList = [];\n        var keyList = [];\n\n        // Get latest value list\n        var latestValueList = newState._valueList;\n        if (!latestValueList) {\n          // Also need add prev missValueList to avoid new treeNodes contains the value\n          latestValueList = [].concat(_toConsumableArray(prevState._valueList), _toConsumableArray(prevState._missValueList));\n        }\n\n        // Get key by value\n        latestValueList.forEach(function (wrapperValue) {\n          var value = wrapperValue.value;\n\n          var entity = (newState._valueEntities || prevState._valueEntities)[value];\n\n          if (entity) {\n            keyList.push(entity.key);\n            filteredValueList.push(wrapperValue);\n            return;\n          }\n\n          // If not match, it may caused by ajax load. We need keep this\n          missValueList.push(wrapperValue);\n        });\n\n        // We need calculate the value when tree is checked tree\n        if (treeCheckable && !treeCheckStrictly) {\n          // Calculate the keys need to be checked\n          var _conductCheck = conductCheck(keyList, true, newState._keyEntities || prevState._keyEntities),\n              checkedKeys = _conductCheck.checkedKeys;\n\n          // Format value list again for internal usage\n\n\n          newState._valueList = checkedKeys.map(function (key) {\n            return {\n              value: (newState._keyEntities || prevState._keyEntities).get(key).value\n            };\n          });\n        } else {\n          newState._valueList = filteredValueList;\n        }\n\n        // Fill the missValueList, we still need display in the selector\n        newState._missValueList = missValueList;\n\n        // Calculate the value list for `Selector` usage\n        newState._selectorValueList = formatSelectorValue(newState._valueList, nextProps, newState._valueEntities || prevState._valueEntities);\n      }\n\n      // [Legacy] To align with `Select` component,\n      // We use `searchValue` instead of `inputValue` but still keep the api\n      // `inputValue` support `null` to work as `autoClearSearchValue`\n      processState('inputValue', function (propValue) {\n        if (propValue !== null) {\n          newState._searchValue = propValue;\n        }\n      });\n\n      // Search value\n      processState('searchValue', function (propValue) {\n        newState._searchValue = propValue;\n      });\n\n      // Do the search logic\n      if (newState._searchValue !== undefined || prevState._searchValue && treeNodes) {\n        var searchValue = newState._searchValue !== undefined ? newState._searchValue : prevState._searchValue;\n        var upperSearchValue = String(searchValue).toUpperCase();\n\n        var filterTreeNodeFn = filterTreeNode;\n        if (filterTreeNode === false) {\n          // Don't filter if is false\n          filterTreeNodeFn = function filterTreeNodeFn() {\n            return true;\n          };\n        } else if (typeof filterTreeNodeFn !== 'function') {\n          // When is not function (true or undefined), use inner filter\n          filterTreeNodeFn = function filterTreeNodeFn(_, node) {\n            var nodeValue = String(getPropsData(node)[treeNodeFilterProp]).toUpperCase();\n            return nodeValue.indexOf(upperSearchValue) !== -1;\n          };\n        }\n\n        newState._filteredTreeNodes = getFilterTree(this.$createElement, newState._treeNodes || prevState._treeNodes, searchValue, filterTreeNodeFn, newState._valueEntities || prevState._valueEntities);\n      }\n\n      // We should re-calculate the halfCheckedKeys when in search mode\n      if (valueRefresh && treeCheckable && !treeCheckStrictly && (newState._searchValue || prevState._searchValue)) {\n        newState._searchHalfCheckedKeys = getHalfCheckedKeys(newState._valueList, newState._valueEntities || prevState._valueEntities);\n      }\n\n      // Checked Strategy\n      processState('showCheckedStrategy', function () {\n        newState._selectorValueList = newState._selectorValueList || formatSelectorValue(newState._valueList || prevState._valueList, nextProps, newState._valueEntities || prevState._valueEntities);\n      });\n\n      return newState;\n    },\n\n    // ==================== Selector ====================\n    onSelectorFocus: function onSelectorFocus() {\n      this.setState({ _focused: true });\n    },\n    onSelectorBlur: function onSelectorBlur() {\n      this.setState({ _focused: false });\n\n      // TODO: Close when Popup is also not focused\n      // this.setState({ open: false });\n    },\n\n\n    // Handle key board event in both Selector and Popup\n    onComponentKeyDown: function onComponentKeyDown(event) {\n      var open = this.$data._open;\n      var keyCode = event.keyCode;\n\n\n      if (!open) {\n        if ([KeyCode.ENTER, KeyCode.DOWN].indexOf(keyCode) !== -1) {\n          this.setOpenState(true);\n        }\n      } else if (KeyCode.ESC === keyCode) {\n        this.setOpenState(false);\n      } else if ([KeyCode.UP, KeyCode.DOWN, KeyCode.LEFT, KeyCode.RIGHT].indexOf(keyCode) !== -1) {\n        // TODO: Handle `open` state\n        event.stopPropagation();\n      }\n    },\n    onDeselect: function onDeselect(wrappedValue, node, nodeEventInfo) {\n      this.__emit('deselect', wrappedValue, node, nodeEventInfo);\n    },\n    onSelectorClear: function onSelectorClear(event) {\n      var disabled = this.$props.disabled;\n\n      if (disabled) return;\n\n      this.triggerChange([], []);\n\n      if (!this.isSearchValueControlled()) {\n        this.setUncontrolledState({\n          _searchValue: '',\n          _filteredTreeNodes: null\n        });\n      }\n\n      event.stopPropagation();\n    },\n    onMultipleSelectorRemove: function onMultipleSelectorRemove(event, removeValue) {\n      event.stopPropagation();\n\n      var _$data = this.$data,\n          valueList = _$data._valueList,\n          missValueList = _$data._missValueList,\n          valueEntities = _$data._valueEntities;\n      var _$props3 = this.$props,\n          treeCheckable = _$props3.treeCheckable,\n          treeCheckStrictly = _$props3.treeCheckStrictly,\n          treeNodeLabelProp = _$props3.treeNodeLabelProp,\n          disabled = _$props3.disabled;\n\n      if (disabled) return;\n\n      // Find trigger entity\n      var triggerEntity = valueEntities[removeValue];\n\n      // Clean up value\n      var newValueList = valueList;\n      if (triggerEntity) {\n        // If value is in tree\n        if (treeCheckable && !treeCheckStrictly) {\n          newValueList = valueList.filter(function (_ref) {\n            var value = _ref.value;\n\n            var entity = valueEntities[value];\n            return !isPosRelated(entity.pos, triggerEntity.pos);\n          });\n        } else {\n          newValueList = valueList.filter(function (_ref2) {\n            var value = _ref2.value;\n            return value !== removeValue;\n          });\n        }\n      }\n\n      var triggerNode = triggerEntity ? triggerEntity.node : null;\n\n      var extraInfo = {\n        triggerValue: removeValue,\n        triggerNode: triggerNode\n      };\n      var deselectInfo = {\n        node: triggerNode\n      };\n\n      // [Legacy] Little hack on this to make same action as `onCheck` event.\n      if (treeCheckable) {\n        var filteredEntityList = newValueList.map(function (_ref3) {\n          var value = _ref3.value;\n          return valueEntities[value];\n        });\n\n        deselectInfo.event = 'check';\n        deselectInfo.checked = false;\n        deselectInfo.checkedNodes = filteredEntityList.map(function (_ref4) {\n          var node = _ref4.node;\n          return node;\n        });\n        deselectInfo.checkedNodesPositions = filteredEntityList.map(function (_ref5) {\n          var node = _ref5.node,\n              pos = _ref5.pos;\n          return {\n            node: node,\n            pos: pos\n          };\n        });\n\n        if (treeCheckStrictly) {\n          extraInfo.allCheckedNodes = deselectInfo.checkedNodes;\n        } else {\n          // TODO: It's too expansive to get `halfCheckedKeys` in onDeselect. Not pass this.\n          extraInfo.allCheckedNodes = flatToHierarchy(filteredEntityList).map(function (_ref6) {\n            var node = _ref6.node;\n            return node;\n          });\n        }\n      } else {\n        deselectInfo.event = 'select';\n        deselectInfo.selected = false;\n        deselectInfo.selectedNodes = newValueList.map(function (_ref7) {\n          var value = _ref7.value;\n          return (valueEntities[value] || {}).node;\n        });\n      }\n\n      // Some value user pass prop is not in the tree, we also need clean it\n      var newMissValueList = missValueList.filter(function (_ref8) {\n        var value = _ref8.value;\n        return value !== removeValue;\n      });\n      var wrappedValue = void 0;\n      if (this.isLabelInValue()) {\n        wrappedValue = {\n          label: triggerNode ? getPropsData(triggerNode)[treeNodeLabelProp] : null,\n          value: removeValue\n        };\n      } else {\n        wrappedValue = removeValue;\n      }\n\n      this.onDeselect(wrappedValue, triggerNode, deselectInfo);\n\n      this.triggerChange(newMissValueList, newValueList, extraInfo);\n    },\n\n\n    // ===================== Popup ======================\n    onValueTrigger: function onValueTrigger(isAdd, nodeList, nodeEventInfo, nodeExtraInfo) {\n      var node = nodeEventInfo.node;\n      var value = node.$props.value;\n      var _$data2 = this.$data,\n          missValueList = _$data2._missValueList,\n          valueEntities = _$data2._valueEntities,\n          keyEntities = _$data2._keyEntities,\n          searchValue = _$data2._searchValue;\n      var _$props4 = this.$props,\n          disabled = _$props4.disabled,\n          inputValue = _$props4.inputValue,\n          treeNodeLabelProp = _$props4.treeNodeLabelProp,\n          multiple = _$props4.multiple,\n          treeCheckable = _$props4.treeCheckable,\n          treeCheckStrictly = _$props4.treeCheckStrictly,\n          autoClearSearchValue = _$props4.autoClearSearchValue;\n\n      var label = node.$props[treeNodeLabelProp];\n\n      if (disabled) return;\n\n      // Wrap the return value for user\n      var wrappedValue = void 0;\n      if (this.isLabelInValue()) {\n        wrappedValue = {\n          value: value,\n          label: label\n        };\n      } else {\n        wrappedValue = value;\n      }\n\n      // [Legacy] Origin code not trigger `onDeselect` every time. Let's align the behaviour.\n      if (isAdd) {\n        this.__emit('select', wrappedValue, node, nodeEventInfo);\n      } else {\n        this.__emit('deselect', wrappedValue, node, nodeEventInfo);\n      }\n\n      // Get wrapped value list.\n      // This is a bit hack cause we use key to match the value.\n      var newValueList = nodeList.map(function (node) {\n        var props = getPropsData(node);\n        return {\n          value: props.value,\n          label: props[treeNodeLabelProp]\n        };\n      });\n\n      // When is `treeCheckable` and with `searchValue`, `valueList` is not full filled.\n      // We need calculate the missing nodes.\n      if (treeCheckable && !treeCheckStrictly) {\n        var keyList = newValueList.map(function (_ref9) {\n          var val = _ref9.value;\n          return valueEntities[val].key;\n        });\n        if (isAdd) {\n          keyList = conductCheck(keyList, true, keyEntities).checkedKeys;\n        } else {\n          keyList = conductCheck([valueEntities[value].key], false, keyEntities, {\n            checkedKeys: keyList\n          }).checkedKeys;\n        }\n        newValueList = keyList.map(function (key) {\n          var props = getPropsData(keyEntities.get(key).node);\n          return {\n            value: props.value,\n            label: props[treeNodeLabelProp]\n          };\n        });\n      }\n\n      // Clean up `searchValue` when this prop is set\n      if (autoClearSearchValue || inputValue === null) {\n        // Clean state `searchValue` if uncontrolled\n        if (!this.isSearchValueControlled() && (multiple || treeCheckable)) {\n          this.setUncontrolledState({\n            _searchValue: '',\n            _filteredTreeNodes: null\n          });\n        }\n\n        // Trigger onSearch if `searchValue` to be empty.\n        // We should also trigger onSearch with empty string here\n        // since if user use `treeExpandedKeys`, it need user have the ability to reset it.\n        if (searchValue && searchValue.length) {\n          this.__emit('update:searchValue', '');\n          this.__emit('search', '');\n        }\n      }\n\n      // [Legacy] Provide extra info\n      var extraInfo = _extends({}, nodeExtraInfo, {\n        triggerValue: value,\n        triggerNode: node\n      });\n\n      this.triggerChange(missValueList, newValueList, extraInfo);\n    },\n    onTreeNodeSelect: function onTreeNodeSelect(_, nodeEventInfo) {\n      var _$data3 = this.$data,\n          valueList = _$data3._valueList,\n          valueEntities = _$data3._valueEntities;\n      var _$props5 = this.$props,\n          treeCheckable = _$props5.treeCheckable,\n          multiple = _$props5.multiple;\n\n      if (treeCheckable) return;\n\n      if (!multiple) {\n        this.setOpenState(false);\n      }\n\n      var isAdd = nodeEventInfo.selected;\n      var selectedValue = nodeEventInfo.node.$props.value;\n\n\n      var newValueList = void 0;\n\n      if (!multiple) {\n        newValueList = [{ value: selectedValue }];\n      } else {\n        newValueList = valueList.filter(function (_ref10) {\n          var value = _ref10.value;\n          return value !== selectedValue;\n        });\n        if (isAdd) {\n          newValueList.push({ value: selectedValue });\n        }\n      }\n\n      var selectedNodes = newValueList.map(function (_ref11) {\n        var value = _ref11.value;\n        return valueEntities[value];\n      }).filter(function (entity) {\n        return entity;\n      }).map(function (_ref12) {\n        var node = _ref12.node;\n        return node;\n      });\n\n      this.onValueTrigger(isAdd, selectedNodes, nodeEventInfo, { selected: isAdd });\n    },\n    onTreeNodeCheck: function onTreeNodeCheck(_, nodeEventInfo) {\n      var _$data4 = this.$data,\n          searchValue = _$data4._searchValue,\n          keyEntities = _$data4._keyEntities,\n          valueEntities = _$data4._valueEntities,\n          valueList = _$data4._valueList;\n      var treeCheckStrictly = this.$props.treeCheckStrictly;\n      var checkedNodes = nodeEventInfo.checkedNodes,\n          checkedNodesPositions = nodeEventInfo.checkedNodesPositions;\n\n      var isAdd = nodeEventInfo.checked;\n\n      var extraInfo = {\n        checked: isAdd\n      };\n\n      var checkedNodeList = checkedNodes;\n\n      // [Legacy] Check event provide `allCheckedNodes`.\n      // When `treeCheckStrictly` or internal `searchValue` is set, TreeNode will be unrelated:\n      // - Related: Show the top checked nodes and has children prop.\n      // - Unrelated: Show all the checked nodes.\n      if (searchValue) {\n        var oriKeyList = valueList.map(function (_ref13) {\n          var value = _ref13.value;\n          return valueEntities[value];\n        }).filter(function (entity) {\n          return entity;\n        }).map(function (_ref14) {\n          var key = _ref14.key;\n          return key;\n        });\n\n        var keyList = void 0;\n        if (isAdd) {\n          keyList = Array.from(new Set([].concat(_toConsumableArray(oriKeyList), _toConsumableArray(checkedNodeList.map(function (node) {\n            var _getPropsData = getPropsData(node),\n                value = _getPropsData.value;\n\n            return valueEntities[value].key;\n          })))));\n        } else {\n          keyList = conductCheck([getPropsData(nodeEventInfo.node).eventKey], false, keyEntities, {\n            checkedKeys: oriKeyList\n          }).checkedKeys;\n        }\n\n        checkedNodeList = keyList.map(function (key) {\n          return keyEntities.get(key).node;\n        });\n\n        // Let's follow as not `treeCheckStrictly` format\n        extraInfo.allCheckedNodes = keyList.map(function (key) {\n          return cleanEntity(keyEntities.get(key));\n        });\n      } else if (treeCheckStrictly) {\n        extraInfo.allCheckedNodes = nodeEventInfo.checkedNodes;\n      } else {\n        extraInfo.allCheckedNodes = flatToHierarchy(checkedNodesPositions);\n      }\n\n      this.onValueTrigger(isAdd, checkedNodeList, nodeEventInfo, extraInfo);\n    },\n\n\n    // ==================== Trigger =====================\n\n    onDropdownVisibleChange: function onDropdownVisibleChange(open) {\n      var _$props6 = this.$props,\n          multiple = _$props6.multiple,\n          treeCheckable = _$props6.treeCheckable;\n      var _searchValue = this._searchValue;\n\n      // When set open success and single mode,\n      // we will reset the input content.\n\n      if (open && !multiple && !treeCheckable && _searchValue) {\n        this.setUncontrolledState({\n          _searchValue: '',\n          _filteredTreeNodes: null\n        });\n      }\n      this.setOpenState(open, true);\n    },\n    onSearchInputChange: function onSearchInputChange(event) {\n      var value = event.target.value;\n      var _$data5 = this.$data,\n          treeNodes = _$data5._treeNodes,\n          valueEntities = _$data5._valueEntities;\n      var _$props7 = this.$props,\n          filterTreeNode = _$props7.filterTreeNode,\n          treeNodeFilterProp = _$props7.treeNodeFilterProp;\n\n      this.__emit('update:searchValue', value);\n      this.__emit('search', value);\n\n      var isSet = false;\n\n      if (!this.isSearchValueControlled()) {\n        isSet = this.setUncontrolledState({\n          _searchValue: value\n        });\n        this.setOpenState(true);\n      }\n\n      if (isSet) {\n        // Do the search logic\n        var upperSearchValue = String(value).toUpperCase();\n\n        var filterTreeNodeFn = filterTreeNode;\n        if (filterTreeNode === false) {\n          filterTreeNodeFn = function filterTreeNodeFn() {\n            return true;\n          };\n        } else if (!filterTreeNodeFn) {\n          filterTreeNodeFn = function filterTreeNodeFn(_, node) {\n            var nodeValue = String(getPropsData(node)[treeNodeFilterProp]).toUpperCase();\n            return nodeValue.indexOf(upperSearchValue) !== -1;\n          };\n        }\n\n        this.setState({\n          _filteredTreeNodes: getFilterTree(this.$createElement, treeNodes, value, filterTreeNodeFn, valueEntities)\n        });\n      }\n    },\n    onSearchInputKeyDown: function onSearchInputKeyDown(event) {\n      var _$data6 = this.$data,\n          searchValue = _$data6._searchValue,\n          valueList = _$data6._valueList;\n      var keyCode = event.keyCode;\n\n\n      if (KeyCode.BACKSPACE === keyCode && this.isMultiple() && !searchValue && valueList.length) {\n        var lastValue = valueList[valueList.length - 1].value;\n        this.onMultipleSelectorRemove(event, lastValue);\n      }\n    },\n    onChoiceAnimationLeave: function onChoiceAnimationLeave() {\n      this.forcePopupAlign();\n    },\n\n\n    /**\n     * Only update the value which is not in props\n     */\n    setUncontrolledState: function setUncontrolledState(state) {\n      var needSync = false;\n      var newState = {};\n      var props = getOptionProps(this);\n      Object.keys(state).forEach(function (name) {\n        if (name.slice(1) in props) return;\n\n        needSync = true;\n        newState[name] = state[name];\n      });\n\n      if (needSync) {\n        this.setState(newState);\n      }\n\n      return needSync;\n    },\n\n\n    // [Legacy] Origin provide `documentClickClose` which triggered by `Trigger`\n    // Currently `TreeSelect` align the hide popup logic as `Select` which blur to hide.\n    // `documentClickClose` is not accurate anymore. Let's just keep the key word.\n    setOpenState: function setOpenState(open) {\n      var byTrigger = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var dropdownVisibleChange = this.$props.dropdownVisibleChange;\n\n\n      if (dropdownVisibleChange && dropdownVisibleChange(open, { documentClickClose: !open && byTrigger }) === false) {\n        return;\n      }\n\n      this.setUncontrolledState({ _open: open });\n    },\n\n\n    // Tree checkable is also a multiple case\n    isMultiple: function isMultiple() {\n      var _$props8 = this.$props,\n          multiple = _$props8.multiple,\n          treeCheckable = _$props8.treeCheckable;\n\n      return !!(multiple || treeCheckable);\n    },\n    isLabelInValue: function isLabelInValue() {\n      return _isLabelInValue(this.$props);\n    },\n\n\n    // [Legacy] To align with `Select` component,\n    // We use `searchValue` instead of `inputValue`\n    // but currently still need support that.\n    // Add this method the check if is controlled\n    isSearchValueControlled: function isSearchValueControlled() {\n      var props = getOptionProps(this);\n      var inputValue = props.inputValue;\n\n      if ('searchValue' in props) return true;\n      return 'inputValue' in props && inputValue !== null;\n    },\n    forcePopupAlign: function forcePopupAlign() {\n      var $trigger = this.selectTriggerRef.current;\n      if ($trigger) {\n        $trigger.forcePopupAlign();\n      }\n    },\n    delayForcePopupAlign: function delayForcePopupAlign() {\n      var _this3 = this;\n\n      // Wait 2 frame to avoid dom update & dom algin in the same time\n      // https://github.com/ant-design/ant-design/issues/12031\n      raf(function () {\n        raf(_this3.forcePopupAlign);\n      });\n    },\n\n\n    /**\n     * 1. Update state valueList.\n     * 2. Fire `onChange` event to user.\n     */\n    triggerChange: function triggerChange(missValueList, valueList) {\n      var extraInfo = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var _$data7 = this.$data,\n          valueEntities = _$data7._valueEntities,\n          searchValue = _$data7._searchValue,\n          prevSelectorValueList = _$data7._selectorValueList;\n\n      var props = getOptionProps(this);\n      var disabled = props.disabled,\n          treeCheckable = props.treeCheckable,\n          treeCheckStrictly = props.treeCheckStrictly;\n\n      if (disabled) return;\n\n      // Trigger\n      var extra = _extends({\n        // [Legacy] Always return as array contains label & value\n        preValue: prevSelectorValueList.map(function (_ref15) {\n          var label = _ref15.label,\n              value = _ref15.value;\n          return { label: label, value: value };\n        })\n      }, extraInfo);\n\n      // Format value by `treeCheckStrictly`\n      var selectorValueList = formatSelectorValue(valueList, props, valueEntities);\n\n      if (!('value' in props)) {\n        var newState = {\n          _missValueList: missValueList,\n          _valueList: valueList,\n          _selectorValueList: selectorValueList\n        };\n\n        if (searchValue && treeCheckable && !treeCheckStrictly) {\n          newState._searchHalfCheckedKeys = getHalfCheckedKeys(valueList, valueEntities);\n        }\n\n        this.setState(newState);\n      }\n\n      // Only do the logic when `onChange` function provided\n      if (this.$listeners.change) {\n        var connectValueList = void 0;\n\n        // Get value by mode\n        if (this.isMultiple()) {\n          connectValueList = [].concat(_toConsumableArray(missValueList), _toConsumableArray(selectorValueList));\n        } else {\n          connectValueList = selectorValueList.slice(0, 1);\n        }\n\n        var labelList = null;\n        var returnValue = void 0;\n\n        if (this.isLabelInValue()) {\n          returnValue = connectValueList.map(function (_ref16) {\n            var label = _ref16.label,\n                value = _ref16.value;\n            return { label: label, value: value };\n          });\n        } else {\n          labelList = [];\n          returnValue = connectValueList.map(function (_ref17) {\n            var label = _ref17.label,\n                value = _ref17.value;\n\n            labelList.push(label);\n            return value;\n          });\n        }\n\n        if (!this.isMultiple()) {\n          returnValue = returnValue[0];\n        }\n        this.__emit('change', returnValue, labelList, extra);\n      }\n    },\n    focus: function focus() {\n      this.selectorRef.current.focus();\n    },\n    blur: function blur() {\n      this.selectorRef.current.blur();\n    }\n  },\n\n  // ===================== Render =====================\n\n  render: function render() {\n    var h = arguments[0];\n    var _$data8 = this.$data,\n        valueList = _$data8._valueList,\n        missValueList = _$data8._missValueList,\n        selectorValueList = _$data8._selectorValueList,\n        searchHalfCheckedKeys = _$data8._searchHalfCheckedKeys,\n        valueEntities = _$data8._valueEntities,\n        keyEntities = _$data8._keyEntities,\n        searchValue = _$data8._searchValue,\n        open = _$data8._open,\n        focused = _$data8._focused,\n        treeNodes = _$data8._treeNodes,\n        filteredTreeNodes = _$data8._filteredTreeNodes;\n\n    var props = getOptionProps(this);\n    var prefixCls = props.prefixCls,\n        treeExpandedKeys = props.treeExpandedKeys;\n\n    var isMultiple = this.isMultiple();\n\n    var passProps = {\n      props: _extends({}, props, {\n        isMultiple: isMultiple,\n        valueList: valueList,\n        searchHalfCheckedKeys: searchHalfCheckedKeys,\n        selectorValueList: [].concat(_toConsumableArray(missValueList), _toConsumableArray(selectorValueList)),\n        valueEntities: valueEntities,\n        keyEntities: keyEntities,\n        searchValue: searchValue,\n        upperSearchValue: (searchValue || '').toUpperCase(), // Perf save\n        open: open,\n        focused: focused,\n        dropdownPrefixCls: prefixCls + '-dropdown',\n        ariaId: this.ariaId\n      }),\n      on: _extends({}, this.$listeners, {\n        choiceAnimationLeave: this.onChoiceAnimationLeave\n      }),\n      scopedSlots: this.$scopedSlots\n    };\n    var popupProps = mergeProps(passProps, {\n      props: {\n        treeNodes: treeNodes,\n        filteredTreeNodes: filteredTreeNodes,\n        // Tree expanded control\n        treeExpandedKeys: treeExpandedKeys,\n        __propsSymbol__: Symbol()\n      },\n      on: {\n        treeExpanded: this.delayForcePopupAlign\n      }\n    });\n\n    var Popup = isMultiple ? MultiplePopup : SinglePopup;\n    var $popup = h(Popup, popupProps);\n\n    var Selector = isMultiple ? MultipleSelector : SingleSelector;\n    var $selector = h(Selector, _mergeJSXProps([passProps, {\n      directives: [{\n        name: 'ant-ref',\n        value: this.selectorRef\n      }]\n    }]));\n    var selectTriggerProps = mergeProps(passProps, {\n      props: {\n        popupElement: $popup,\n        dropdownVisibleChange: this.onDropdownVisibleChange\n      },\n      directives: [{\n        name: 'ant-ref',\n        value: this.selectTriggerRef\n      }]\n    });\n    return h(\n      SelectTrigger,\n      selectTriggerProps,\n      [$selector]\n    );\n  }\n};\n\nSelect.TreeNode = SelectNode;\nSelect.SHOW_ALL = SHOW_ALL;\nSelect.SHOW_PARENT = SHOW_PARENT;\nSelect.SHOW_CHILD = SHOW_CHILD;\n\n// Let warning show correct component name\nSelect.name = 'TreeSelect';\n\nexport default Select;","import Select from './Select';\nimport SelectNode from './SelectNode';\n\nexport { SHOW_ALL, SHOW_CHILD, SHOW_PARENT } from './strategies';\nexport var TreeNode = SelectNode;\n\nexport default Select;","// based on rc-tree 1.14.10\n'use strict';\n\nmodule.exports = require('./src/');","export var SHOW_ALL = 'SHOW_ALL';\nexport var SHOW_PARENT = 'SHOW_PARENT';\nexport var SHOW_CHILD = 'SHOW_CHILD';","import _mergeJSXProps from 'babel-helper-vue-jsx-merge-props';\nimport PropTypes from '../_util/vue-types';\nimport BaseMixin from '../_util/BaseMixin';\nimport moment from 'moment';\nimport { getComponentFromProp } from '../_util/props-util';\nimport { isIE, isIE9 } from '../_util/env';\n\nvar Header = {\n  mixins: [BaseMixin],\n  props: {\n    format: PropTypes.string,\n    prefixCls: PropTypes.string,\n    disabledDate: PropTypes.func,\n    placeholder: PropTypes.string,\n    clearText: PropTypes.string,\n    value: PropTypes.object,\n    inputReadOnly: PropTypes.bool.def(false),\n    hourOptions: PropTypes.array,\n    minuteOptions: PropTypes.array,\n    secondOptions: PropTypes.array,\n    disabledHours: PropTypes.func,\n    disabledMinutes: PropTypes.func,\n    disabledSeconds: PropTypes.func,\n    // onChange: PropTypes.func,\n    // onClear: PropTypes.func,\n    // onEsc: PropTypes.func,\n    allowEmpty: PropTypes.bool,\n    defaultOpenValue: PropTypes.object,\n    currentSelectPanel: PropTypes.string,\n    focusOnOpen: PropTypes.bool,\n    // onKeyDown: PropTypes.func,\n    clearIcon: PropTypes.any\n  },\n  data: function data() {\n    var value = this.value,\n        format = this.format;\n\n    return {\n      str: value && value.format(format) || '',\n      invalid: false\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    if (this.focusOnOpen) {\n      // Wait one frame for the panel to be positioned before focusing\n      var requestAnimationFrame = window.requestAnimationFrame || window.setTimeout;\n      requestAnimationFrame(function () {\n        _this.$refs.input.focus();\n        _this.$refs.input.select();\n      });\n    }\n  },\n\n  watch: {\n    $props: {\n      handler: function handler(nextProps) {\n        var value = nextProps.value,\n            format = nextProps.format;\n\n        this.setState({\n          str: value && value.format(format) || '',\n          invalid: false\n        });\n      },\n      deep: true\n    }\n  },\n\n  methods: {\n    onInputChange: function onInputChange(e) {\n      var _e$target = e.target,\n          str = _e$target.value,\n          composing = _e$target.composing;\n      var _str = this.str,\n          oldStr = _str === undefined ? '' : _str;\n\n      if (composing || oldStr === str) return;\n\n      this.setState({\n        str: str\n      });\n      var format = this.format,\n          hourOptions = this.hourOptions,\n          minuteOptions = this.minuteOptions,\n          secondOptions = this.secondOptions,\n          disabledHours = this.disabledHours,\n          disabledMinutes = this.disabledMinutes,\n          disabledSeconds = this.disabledSeconds,\n          allowEmpty = this.allowEmpty,\n          originalValue = this.value;\n\n\n      if (str) {\n        var value = this.getProtoValue().clone();\n        var parsed = moment(str, format, true);\n        if (!parsed.isValid()) {\n          this.setState({\n            invalid: true\n          });\n          return;\n        }\n        value.hour(parsed.hour()).minute(parsed.minute()).second(parsed.second());\n\n        // if time value not allowed, response warning.\n        if (hourOptions.indexOf(value.hour()) < 0 || minuteOptions.indexOf(value.minute()) < 0 || secondOptions.indexOf(value.second()) < 0) {\n          this.setState({\n            invalid: true\n          });\n          return;\n        }\n\n        // if time value is disabled, response warning.\n        var disabledHourOptions = disabledHours();\n        var disabledMinuteOptions = disabledMinutes(value.hour());\n        var disabledSecondOptions = disabledSeconds(value.hour(), value.minute());\n        if (disabledHourOptions && disabledHourOptions.indexOf(value.hour()) >= 0 || disabledMinuteOptions && disabledMinuteOptions.indexOf(value.minute()) >= 0 || disabledSecondOptions && disabledSecondOptions.indexOf(value.second()) >= 0) {\n          this.setState({\n            invalid: true\n          });\n          return;\n        }\n\n        if (originalValue) {\n          if (originalValue.hour() !== value.hour() || originalValue.minute() !== value.minute() || originalValue.second() !== value.second()) {\n            // keep other fields for rc-calendar\n            var changedValue = originalValue.clone();\n            changedValue.hour(value.hour());\n            changedValue.minute(value.minute());\n            changedValue.second(value.second());\n            this.__emit('change', changedValue);\n          }\n        } else if (originalValue !== value) {\n          this.__emit('change', value);\n        }\n      } else if (allowEmpty) {\n        this.__emit('change', null);\n      } else {\n        this.setState({\n          invalid: true\n        });\n        return;\n      }\n\n      this.setState({\n        invalid: false\n      });\n    },\n    onKeyDown: function onKeyDown(e) {\n      if (e.keyCode === 27) {\n        this.__emit('esc');\n      }\n      this.__emit('keydown', e);\n    },\n    getProtoValue: function getProtoValue() {\n      return this.value || this.defaultOpenValue;\n    },\n    getInput: function getInput() {\n      var h = this.$createElement;\n      var prefixCls = this.prefixCls,\n          placeholder = this.placeholder,\n          inputReadOnly = this.inputReadOnly,\n          invalid = this.invalid,\n          str = this.str;\n\n      var invalidClass = invalid ? prefixCls + '-input-invalid' : '';\n      return h('input', _mergeJSXProps([{\n        'class': prefixCls + '-input ' + invalidClass,\n        ref: 'input',\n        on: {\n          'keydown': this.onKeyDown,\n          'input': this.onInputChange\n        },\n        domProps: {\n          'value': str\n        },\n        attrs: {\n          placeholder: placeholder,\n\n          readOnly: !!inputReadOnly\n        }\n      }, {\n        directives: [{\n          name: 'ant-input'\n        }]\n      }]));\n    }\n  },\n\n  render: function render() {\n    var h = arguments[0];\n    var prefixCls = this.prefixCls;\n\n    return h(\n      'div',\n      { 'class': prefixCls + '-input-wrap' },\n      [this.getInput()]\n    );\n  }\n};\n\nexport default Header;","import _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport PropTypes from '../_util/vue-types';\nimport BaseMixin from '../_util/BaseMixin';\nimport classnames from 'classnames';\nfunction noop() {}\nvar scrollTo = function scrollTo(element, to, duration) {\n  var requestAnimationFrame = window.requestAnimationFrame || function requestAnimationFrameTimeout() {\n    return setTimeout(arguments[0], 10);\n  };\n  // jump to target if duration zero\n  if (duration <= 0) {\n    element.scrollTop = to;\n    return;\n  }\n  var difference = to - element.scrollTop;\n  var perTick = difference / duration * 10;\n\n  requestAnimationFrame(function () {\n    element.scrollTop += perTick;\n    if (element.scrollTop === to) return;\n    scrollTo(element, to, duration - 10);\n  });\n};\n\nvar Select = {\n  mixins: [BaseMixin],\n  props: {\n    prefixCls: PropTypes.string,\n    options: PropTypes.array,\n    selectedIndex: PropTypes.number,\n    type: PropTypes.string\n    // onSelect: PropTypes.func,\n    // onMouseEnter: PropTypes.func,\n  },\n  data: function data() {\n    return {\n      active: false\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$nextTick(function () {\n      // jump to selected option\n      _this.scrollToSelected(0);\n    });\n  },\n\n  watch: {\n    selectedIndex: function selectedIndex() {\n      var _this2 = this;\n\n      this.$nextTick(function () {\n        // smooth scroll to selected option\n        _this2.scrollToSelected(120);\n      });\n    }\n  },\n  methods: {\n    onSelect: function onSelect(value) {\n      var type = this.type;\n\n      this.__emit('select', type, value);\n    },\n    getOptions: function getOptions() {\n      var _this3 = this;\n\n      var h = this.$createElement;\n      var options = this.options,\n          selectedIndex = this.selectedIndex,\n          prefixCls = this.prefixCls;\n\n      return options.map(function (item, index) {\n        var _classnames;\n\n        var cls = classnames((_classnames = {}, _defineProperty(_classnames, prefixCls + '-select-option-selected', selectedIndex === index), _defineProperty(_classnames, prefixCls + '-select-option-disabled', item.disabled), _classnames));\n        var onClick = item.disabled ? noop : function () {\n          _this3.onSelect(item.value);\n        };\n        return h(\n          'li',\n          {\n            attrs: { role: 'button', disabled: item.disabled },\n            on: {\n              'click': onClick\n            },\n            'class': cls, key: index },\n          [item.value]\n        );\n      });\n    },\n    handleMouseEnter: function handleMouseEnter(e) {\n      this.setState({ active: true });\n      this.__emit('mouseenter', e);\n    },\n    handleMouseLeave: function handleMouseLeave() {\n      this.setState({ active: false });\n    },\n    scrollToSelected: function scrollToSelected(duration) {\n      // move to selected item\n      var select = this.$el;\n      var list = this.$refs.list;\n      if (!list) {\n        return;\n      }\n      var index = this.selectedIndex;\n      if (index < 0) {\n        index = 0;\n      }\n      var topOption = list.children[index];\n      var to = topOption.offsetTop;\n      scrollTo(select, to, duration);\n    }\n  },\n\n  render: function render() {\n    var _cls;\n\n    var h = arguments[0];\n    var prefixCls = this.prefixCls,\n        options = this.options,\n        active = this.active;\n\n    if (options.length === 0) {\n      return null;\n    }\n\n    var cls = (_cls = {}, _defineProperty(_cls, prefixCls + '-select', 1), _defineProperty(_cls, prefixCls + '-select-active', active), _cls);\n\n    return h(\n      'div',\n      { 'class': cls, on: {\n          'mouseenter': this.handleMouseEnter,\n          'mouseleave': this.handleMouseLeave\n        }\n      },\n      [h(\n        'ul',\n        { ref: 'list' },\n        [this.getOptions()]\n      )]\n    );\n  }\n};\n\nexport default Select;","import PropTypes from '../_util/vue-types';\nimport Select from './Select';\nimport BaseMixin from '../_util/BaseMixin';\n\nvar formatOption = function formatOption(option, disabledOptions) {\n  var value = '' + option;\n  if (option < 10) {\n    value = '0' + option;\n  }\n\n  var disabled = false;\n  if (disabledOptions && disabledOptions.indexOf(option) >= 0) {\n    disabled = true;\n  }\n\n  return {\n    value: value,\n    disabled: disabled\n  };\n};\n\nvar Combobox = {\n  mixins: [BaseMixin],\n  name: 'Combobox',\n  props: {\n    format: PropTypes.string,\n    defaultOpenValue: PropTypes.object,\n    prefixCls: PropTypes.string,\n    value: PropTypes.object,\n    // onChange: PropTypes.func,\n    // onAmPmChange: PropTypes.func,\n    showHour: PropTypes.bool,\n    showMinute: PropTypes.bool,\n    showSecond: PropTypes.bool,\n    hourOptions: PropTypes.array,\n    minuteOptions: PropTypes.array,\n    secondOptions: PropTypes.array,\n    disabledHours: PropTypes.func,\n    disabledMinutes: PropTypes.func,\n    disabledSeconds: PropTypes.func,\n    // onCurrentSelectPanelChange: PropTypes.func,\n    use12Hours: PropTypes.bool,\n    isAM: PropTypes.bool\n  },\n  methods: {\n    onItemChange: function onItemChange(type, itemValue) {\n      var defaultOpenValue = this.defaultOpenValue,\n          use12Hours = this.use12Hours,\n          propValue = this.value,\n          isAM = this.isAM;\n\n      var value = (propValue || defaultOpenValue).clone();\n\n      if (type === 'hour') {\n        if (use12Hours) {\n          if (isAM) {\n            value.hour(+itemValue % 12);\n          } else {\n            value.hour(+itemValue % 12 + 12);\n          }\n        } else {\n          value.hour(+itemValue);\n        }\n      } else if (type === 'minute') {\n        value.minute(+itemValue);\n      } else if (type === 'ampm') {\n        var ampm = itemValue.toUpperCase();\n        if (use12Hours) {\n          if (ampm === 'PM' && value.hour() < 12) {\n            value.hour(value.hour() % 12 + 12);\n          }\n\n          if (ampm === 'AM') {\n            if (value.hour() >= 12) {\n              value.hour(value.hour() - 12);\n            }\n          }\n        }\n        this.__emit('amPmChange', ampm);\n      } else {\n        value.second(+itemValue);\n      }\n      this.__emit('change', value);\n    },\n    onEnterSelectPanel: function onEnterSelectPanel(range) {\n      this.__emit('currentSelectPanelChange', range);\n    },\n    getHourSelect: function getHourSelect(hour) {\n      var _this = this;\n\n      var h = this.$createElement;\n      var prefixCls = this.prefixCls,\n          hourOptions = this.hourOptions,\n          disabledHours = this.disabledHours,\n          showHour = this.showHour,\n          use12Hours = this.use12Hours;\n\n      if (!showHour) {\n        return null;\n      }\n      var disabledOptions = disabledHours();\n      var hourOptionsAdj = void 0;\n      var hourAdj = void 0;\n      if (use12Hours) {\n        hourOptionsAdj = [12].concat(hourOptions.filter(function (h) {\n          return h < 12 && h > 0;\n        }));\n        hourAdj = hour % 12 || 12;\n      } else {\n        hourOptionsAdj = hourOptions;\n        hourAdj = hour;\n      }\n\n      return h(Select, {\n        attrs: {\n          prefixCls: prefixCls,\n          options: hourOptionsAdj.map(function (option) {\n            return formatOption(option, disabledOptions);\n          }),\n          selectedIndex: hourOptionsAdj.indexOf(hourAdj),\n          type: 'hour'\n        },\n        on: {\n          'select': this.onItemChange,\n          'mouseenter': function mouseenter() {\n            return _this.onEnterSelectPanel('hour');\n          }\n        }\n      });\n    },\n    getMinuteSelect: function getMinuteSelect(minute) {\n      var _this2 = this;\n\n      var h = this.$createElement;\n      var prefixCls = this.prefixCls,\n          minuteOptions = this.minuteOptions,\n          disabledMinutes = this.disabledMinutes,\n          defaultOpenValue = this.defaultOpenValue,\n          showMinute = this.showMinute,\n          propValue = this.value;\n\n      if (!showMinute) {\n        return null;\n      }\n      var value = propValue || defaultOpenValue;\n      var disabledOptions = disabledMinutes(value.hour());\n\n      return h(Select, {\n        attrs: {\n          prefixCls: prefixCls,\n          options: minuteOptions.map(function (option) {\n            return formatOption(option, disabledOptions);\n          }),\n          selectedIndex: minuteOptions.indexOf(minute),\n          type: 'minute'\n        },\n        on: {\n          'select': this.onItemChange,\n          'mouseenter': function mouseenter() {\n            return _this2.onEnterSelectPanel('minute');\n          }\n        }\n      });\n    },\n    getSecondSelect: function getSecondSelect(second) {\n      var _this3 = this;\n\n      var h = this.$createElement;\n      var prefixCls = this.prefixCls,\n          secondOptions = this.secondOptions,\n          disabledSeconds = this.disabledSeconds,\n          showSecond = this.showSecond,\n          defaultOpenValue = this.defaultOpenValue,\n          propValue = this.value;\n\n      if (!showSecond) {\n        return null;\n      }\n      var value = propValue || defaultOpenValue;\n      var disabledOptions = disabledSeconds(value.hour(), value.minute());\n\n      return h(Select, {\n        attrs: {\n          prefixCls: prefixCls,\n          options: secondOptions.map(function (option) {\n            return formatOption(option, disabledOptions);\n          }),\n          selectedIndex: secondOptions.indexOf(second),\n          type: 'second'\n        },\n        on: {\n          'select': this.onItemChange,\n          'mouseenter': function mouseenter() {\n            return _this3.onEnterSelectPanel('second');\n          }\n        }\n      });\n    },\n    getAMPMSelect: function getAMPMSelect() {\n      var _this4 = this;\n\n      var h = this.$createElement;\n      var prefixCls = this.prefixCls,\n          use12Hours = this.use12Hours,\n          format = this.format,\n          isAM = this.isAM;\n\n      if (!use12Hours) {\n        return null;\n      }\n\n      var AMPMOptions = ['am', 'pm'] // If format has A char, then we should uppercase AM/PM\n      .map(function (c) {\n        return format.match(/\\sA/) ? c.toUpperCase() : c;\n      }).map(function (c) {\n        return { value: c };\n      });\n\n      var selected = isAM ? 0 : 1;\n\n      return h(Select, {\n        attrs: {\n          prefixCls: prefixCls,\n          options: AMPMOptions,\n          selectedIndex: selected,\n          type: 'ampm'\n        },\n        on: {\n          'select': this.onItemChange,\n          'mouseenter': function mouseenter() {\n            return _this4.onEnterSelectPanel('ampm');\n          }\n        }\n      });\n    }\n  },\n\n  render: function render() {\n    var h = arguments[0];\n    var prefixCls = this.prefixCls,\n        defaultOpenValue = this.defaultOpenValue,\n        propValue = this.value;\n\n    var value = propValue || defaultOpenValue;\n    return h(\n      'div',\n      { 'class': prefixCls + '-combobox' },\n      [this.getHourSelect(value.hour()), this.getMinuteSelect(value.minute()), this.getSecondSelect(value.second()), this.getAMPMSelect(value.hour())]\n    );\n  }\n};\n\nexport default Combobox;","import moment from 'moment';\nimport PropTypes from '../_util/vue-types';\nimport BaseMixin from '../_util/BaseMixin';\nimport Header from './Header';\nimport Combobox from './Combobox';\nimport { getComponentFromProp } from '../_util/props-util';\n\nfunction noop() {}\n\nfunction generateOptions(length, disabledOptions, hideDisabledOptions) {\n  var step = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n\n  var arr = [];\n  for (var value = 0; value < length; value += step) {\n    if (!disabledOptions || disabledOptions.indexOf(value) < 0 || !hideDisabledOptions) {\n      arr.push(value);\n    }\n  }\n  return arr;\n}\n\nfunction toNearestValidTime(time, hourOptions, minuteOptions, secondOptions) {\n  var hour = hourOptions.slice().sort(function (a, b) {\n    return Math.abs(time.hour() - a) - Math.abs(time.hour() - b);\n  })[0];\n  var minute = minuteOptions.slice().sort(function (a, b) {\n    return Math.abs(time.minute() - a) - Math.abs(time.minute() - b);\n  })[0];\n  var second = secondOptions.slice().sort(function (a, b) {\n    return Math.abs(time.second() - a) - Math.abs(time.second() - b);\n  })[0];\n  return moment(hour + ':' + minute + ':' + second, 'HH:mm:ss');\n}\n\nvar Panel = {\n  mixins: [BaseMixin],\n  props: {\n    clearText: PropTypes.string,\n    prefixCls: PropTypes.string.def('rc-time-picker-panel'),\n    defaultOpenValue: {\n      type: Object,\n      'default': function _default() {\n        return moment();\n      }\n    },\n    value: PropTypes.any,\n    defaultValue: PropTypes.any,\n    placeholder: PropTypes.string,\n    format: PropTypes.string,\n    inputReadOnly: PropTypes.bool.def(false),\n    disabledHours: PropTypes.func.def(noop),\n    disabledMinutes: PropTypes.func.def(noop),\n    disabledSeconds: PropTypes.func.def(noop),\n    hideDisabledOptions: PropTypes.bool,\n    // onChange: PropTypes.func,\n    // onEsc: PropTypes.func,\n    allowEmpty: PropTypes.bool,\n    showHour: PropTypes.bool,\n    showMinute: PropTypes.bool,\n    showSecond: PropTypes.bool,\n    // onClear: PropTypes.func,\n    use12Hours: PropTypes.bool.def(false),\n    hourStep: PropTypes.number,\n    minuteStep: PropTypes.number,\n    secondStep: PropTypes.number,\n    addon: PropTypes.func.def(noop),\n    focusOnOpen: PropTypes.bool,\n    // onKeydown: PropTypes.func,\n    clearIcon: PropTypes.any\n  },\n  data: function data() {\n    return {\n      sValue: this.value,\n      selectionRange: [],\n      currentSelectPanel: ''\n    };\n  },\n\n  watch: {\n    value: function value(val) {\n      if (val) {\n        this.setState({\n          sValue: val\n        });\n      }\n    }\n  },\n\n  methods: {\n    onChange: function onChange(newValue) {\n      this.setState({ sValue: newValue });\n      this.__emit('change', newValue);\n    },\n    onAmPmChange: function onAmPmChange(ampm) {\n      this.__emit('amPmChange', ampm);\n    },\n    onCurrentSelectPanelChange: function onCurrentSelectPanelChange(currentSelectPanel) {\n      this.setState({ currentSelectPanel: currentSelectPanel });\n    },\n\n\n    // https://github.com/ant-design/ant-design/issues/5829\n    close: function close() {\n      this.__emit('esc');\n    },\n    disabledHours2: function disabledHours2() {\n      var use12Hours = this.use12Hours,\n          disabledHours = this.disabledHours;\n\n      var disabledOptions = disabledHours();\n      if (use12Hours && Array.isArray(disabledOptions)) {\n        if (this.isAM()) {\n          disabledOptions = disabledOptions.filter(function (h) {\n            return h < 12;\n          }).map(function (h) {\n            return h === 0 ? 12 : h;\n          });\n        } else {\n          disabledOptions = disabledOptions.map(function (h) {\n            return h === 12 ? 12 : h - 12;\n          });\n        }\n      }\n      return disabledOptions;\n    },\n    isAM: function isAM() {\n      var value = this.sValue || this.defaultOpenValue;\n      return value.hour() >= 0 && value.hour() < 12;\n    }\n  },\n\n  render: function render() {\n    var h = arguments[0];\n    var prefixCls = this.prefixCls,\n        placeholder = this.placeholder,\n        disabledMinutes = this.disabledMinutes,\n        addon = this.addon,\n        disabledSeconds = this.disabledSeconds,\n        hideDisabledOptions = this.hideDisabledOptions,\n        allowEmpty = this.allowEmpty,\n        showHour = this.showHour,\n        showMinute = this.showMinute,\n        showSecond = this.showSecond,\n        format = this.format,\n        defaultOpenValue = this.defaultOpenValue,\n        clearText = this.clearText,\n        use12Hours = this.use12Hours,\n        focusOnOpen = this.focusOnOpen,\n        hourStep = this.hourStep,\n        minuteStep = this.minuteStep,\n        secondStep = this.secondStep,\n        inputReadOnly = this.inputReadOnly,\n        sValue = this.sValue,\n        currentSelectPanel = this.currentSelectPanel,\n        _$listeners = this.$listeners,\n        $listeners = _$listeners === undefined ? {} : _$listeners;\n\n    var clearIcon = getComponentFromProp(this, 'clearIcon');\n    var _$listeners$esc = $listeners.esc,\n        esc = _$listeners$esc === undefined ? noop : _$listeners$esc,\n        _$listeners$clear = $listeners.clear,\n        clear = _$listeners$clear === undefined ? noop : _$listeners$clear,\n        _$listeners$keydown = $listeners.keydown,\n        keydown = _$listeners$keydown === undefined ? noop : _$listeners$keydown;\n\n\n    var disabledHourOptions = this.disabledHours2();\n    var disabledMinuteOptions = disabledMinutes(sValue ? sValue.hour() : null);\n    var disabledSecondOptions = disabledSeconds(sValue ? sValue.hour() : null, sValue ? sValue.minute() : null);\n    var hourOptions = generateOptions(24, disabledHourOptions, hideDisabledOptions, hourStep);\n    var minuteOptions = generateOptions(60, disabledMinuteOptions, hideDisabledOptions, minuteStep);\n    var secondOptions = generateOptions(60, disabledSecondOptions, hideDisabledOptions, secondStep);\n    var validDefaultOpenValue = toNearestValidTime(defaultOpenValue, hourOptions, minuteOptions, secondOptions);\n    return h(\n      'div',\n      { 'class': prefixCls + '-inner' },\n      [h(Header, {\n        attrs: {\n          clearText: clearText,\n          prefixCls: prefixCls,\n          defaultOpenValue: validDefaultOpenValue,\n          value: sValue,\n          currentSelectPanel: currentSelectPanel,\n\n          format: format,\n          placeholder: placeholder,\n          hourOptions: hourOptions,\n          minuteOptions: minuteOptions,\n          secondOptions: secondOptions,\n          disabledHours: this.disabledHours2,\n          disabledMinutes: disabledMinutes,\n          disabledSeconds: disabledSeconds,\n\n          allowEmpty: allowEmpty,\n          focusOnOpen: focusOnOpen,\n\n          inputReadOnly: inputReadOnly,\n          clearIcon: clearIcon\n        },\n        on: {\n          'esc': esc,\n          'change': this.onChange,\n          'keydown': keydown\n        }\n      }), h(Combobox, {\n        attrs: {\n          prefixCls: prefixCls,\n          value: sValue,\n          defaultOpenValue: validDefaultOpenValue,\n          format: format,\n\n          showHour: showHour,\n          showMinute: showMinute,\n          showSecond: showSecond,\n          hourOptions: hourOptions,\n          minuteOptions: minuteOptions,\n          secondOptions: secondOptions,\n          disabledHours: this.disabledHours2,\n          disabledMinutes: disabledMinutes,\n          disabledSeconds: disabledSeconds,\n\n          use12Hours: use12Hours,\n          isAM: this.isAM()\n        },\n        on: {\n          'change': this.onChange,\n          'amPmChange': this.onAmPmChange,\n          'currentSelectPanelChange': this.onCurrentSelectPanelChange\n        }\n      }), addon(this)]\n    );\n  }\n};\n\nexport default Panel;","import PropTypes from '../_util/vue-types';\n\nexport default {\n  props: {\n    prefixCls: PropTypes.string,\n    overlay: PropTypes.any,\n    trigger: PropTypes.any\n  },\n  updated: function updated() {\n    var trigger = this.trigger;\n\n    if (trigger) {\n      trigger.forcePopupAlign();\n    }\n  },\n  render: function render() {\n    var h = arguments[0];\n    var overlay = this.overlay,\n        prefixCls = this.prefixCls;\n\n    return h(\n      'div',\n      { 'class': prefixCls + '-inner', attrs: { role: 'tooltip' }\n      },\n      [typeof overlay === 'function' ? overlay() : overlay]\n    );\n  }\n};","import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport PropTypes from '../_util/vue-types';\nimport Trigger from '../vc-trigger';\nimport { placements } from './placements';\nimport Content from './Content';\nimport { hasProp, getComponentFromProp, getOptionProps } from '../_util/props-util';\nfunction noop() {}\nexport default {\n  props: {\n    trigger: PropTypes.any.def(['hover']),\n    defaultVisible: PropTypes.bool,\n    visible: PropTypes.bool,\n    placement: PropTypes.string.def('right'),\n    transitionName: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    animation: PropTypes.any,\n    afterVisibleChange: PropTypes.func.def(function () {}),\n    overlay: PropTypes.any,\n    overlayStyle: PropTypes.object,\n    overlayClassName: PropTypes.string,\n    prefixCls: PropTypes.string.def('rc-tooltip'),\n    mouseEnterDelay: PropTypes.number.def(0),\n    mouseLeaveDelay: PropTypes.number.def(0.1),\n    getTooltipContainer: PropTypes.func,\n    destroyTooltipOnHide: PropTypes.bool.def(false),\n    align: PropTypes.object.def({}),\n    arrowContent: PropTypes.any.def(null),\n    tipId: PropTypes.string,\n    builtinPlacements: PropTypes.object\n  },\n  methods: {\n    getPopupElement: function getPopupElement() {\n      var h = this.$createElement;\n      var _$props = this.$props,\n          prefixCls = _$props.prefixCls,\n          tipId = _$props.tipId;\n\n      return [h(\n        'div',\n        { 'class': prefixCls + '-arrow', key: 'arrow' },\n        [getComponentFromProp(this, 'arrowContent')]\n      ), h(Content, {\n        key: 'content',\n        attrs: { trigger: this.$refs.trigger,\n          prefixCls: prefixCls,\n          id: tipId,\n          overlay: getComponentFromProp(this, 'overlay')\n        }\n      })];\n    },\n    getPopupDomNode: function getPopupDomNode() {\n      return this.$refs.trigger.getPopupDomNode();\n    }\n  },\n  render: function render(h) {\n    var _getOptionProps = getOptionProps(this),\n        overlayClassName = _getOptionProps.overlayClassName,\n        trigger = _getOptionProps.trigger,\n        mouseEnterDelay = _getOptionProps.mouseEnterDelay,\n        mouseLeaveDelay = _getOptionProps.mouseLeaveDelay,\n        overlayStyle = _getOptionProps.overlayStyle,\n        prefixCls = _getOptionProps.prefixCls,\n        afterVisibleChange = _getOptionProps.afterVisibleChange,\n        transitionName = _getOptionProps.transitionName,\n        animation = _getOptionProps.animation,\n        placement = _getOptionProps.placement,\n        align = _getOptionProps.align,\n        destroyTooltipOnHide = _getOptionProps.destroyTooltipOnHide,\n        defaultVisible = _getOptionProps.defaultVisible,\n        getTooltipContainer = _getOptionProps.getTooltipContainer,\n        restProps = _objectWithoutProperties(_getOptionProps, ['overlayClassName', 'trigger', 'mouseEnterDelay', 'mouseLeaveDelay', 'overlayStyle', 'prefixCls', 'afterVisibleChange', 'transitionName', 'animation', 'placement', 'align', 'destroyTooltipOnHide', 'defaultVisible', 'getTooltipContainer']);\n\n    var extraProps = _extends({}, restProps);\n    if (hasProp(this, 'visible')) {\n      extraProps.popupVisible = this.$props.visible;\n    }\n    var triggerProps = {\n      props: _extends({\n        popupClassName: overlayClassName,\n        prefixCls: prefixCls,\n        action: trigger,\n        builtinPlacements: placements,\n        popupPlacement: placement,\n        popupAlign: align,\n        getPopupContainer: getTooltipContainer,\n        afterPopupVisibleChange: afterVisibleChange,\n        popupTransitionName: transitionName,\n        popupAnimation: animation,\n        defaultPopupVisible: defaultVisible,\n        destroyPopupOnHide: destroyTooltipOnHide,\n        mouseLeaveDelay: mouseLeaveDelay,\n        popupStyle: overlayStyle,\n        mouseEnterDelay: mouseEnterDelay\n      }, extraProps),\n      on: _extends({}, this.$listeners, {\n        popupVisibleChange: this.$listeners.visibleChange || noop,\n        popupAlign: this.$listeners.popupAlign || noop\n      }),\n      ref: 'trigger'\n    };\n    return h(\n      Trigger,\n      triggerProps,\n      [h(\n        'template',\n        { slot: 'popup' },\n        [this.getPopupElement(h)]\n      ), this.$slots['default']]\n    );\n  }\n};","// based on rc-tooltip 3.7.3\nimport Tooltip from './Tooltip';\n\nexport default Tooltip;","import _toConsumableArray from 'babel-runtime/helpers/toConsumableArray';\nimport _slicedToArray from 'babel-runtime/helpers/slicedToArray';\nimport _typeof from 'babel-runtime/helpers/typeof';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\n/* eslint no-loop-func: 0*/\nimport warning from 'warning';\nimport omit from 'omit.js';\nimport TreeNode from './TreeNode';\nimport { getSlotOptions, getOptionProps } from '../../_util/props-util';\nvar DRAG_SIDE_RANGE = 0.25;\nvar DRAG_MIN_GAP = 2;\n\nvar onlyTreeNodeWarned = false;\n\nexport function warnOnlyTreeNode() {\n  if (onlyTreeNodeWarned) return;\n\n  onlyTreeNodeWarned = true;\n  warning(false, 'Tree only accept TreeNode as children.');\n}\n\nexport function arrDel(list, value) {\n  var clone = list.slice();\n  var index = clone.indexOf(value);\n  if (index >= 0) {\n    clone.splice(index, 1);\n  }\n  return clone;\n}\n\nexport function arrAdd(list, value) {\n  var clone = list.slice();\n  if (clone.indexOf(value) === -1) {\n    clone.push(value);\n  }\n  return clone;\n}\n\nexport function posToArr(pos) {\n  return pos.split('-');\n}\n\nexport function getPosition(level, index) {\n  return level + '-' + index;\n}\n\nexport function isTreeNode(node) {\n  return getSlotOptions(node).isTreeNode;\n}\n\nexport function getNodeChildren() {\n  var children = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n  return children.filter(isTreeNode);\n}\n\nexport function isCheckDisabled(node) {\n  var _ref = getOptionProps(node) || {},\n      disabled = _ref.disabled,\n      disableCheckbox = _ref.disableCheckbox;\n\n  return !!(disabled || disableCheckbox);\n}\n\nexport function traverseTreeNodes(treeNodes, callback) {\n  function processNode(node, index, parent) {\n    var children = node ? node.componentOptions.children : treeNodes;\n    var pos = node ? getPosition(parent.pos, index) : 0;\n\n    // Filter children\n    var childList = getNodeChildren(children);\n\n    // Process node if is not root\n    if (node) {\n      var key = node.key;\n      if (!key && (key === undefined || key === null)) {\n        key = pos;\n      }\n      var data = {\n        node: node,\n        index: index,\n        pos: pos,\n        key: key,\n        parentPos: parent.node ? parent.pos : null\n      };\n      callback(data);\n    }\n\n    // Process children node\n    childList.forEach(function (subNode, subIndex) {\n      processNode(subNode, subIndex, { node: node, pos: pos });\n    });\n  }\n\n  processNode(null);\n}\n\n/**\n * Use `rc-util` `toArray` to get the children list which keeps the key.\n * And return single node if children is only one(This can avoid `key` missing check).\n */\nexport function mapChildren() {\n  var children = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var func = arguments[1];\n\n  var list = children.map(func);\n  if (list.length === 1) {\n    return list[0];\n  }\n  return list;\n}\n\nexport function getDragNodesKeys(treeNodes, node) {\n  var _getOptionProps = getOptionProps(node),\n      eventKey = _getOptionProps.eventKey,\n      pos = _getOptionProps.pos;\n\n  var dragNodesKeys = [];\n\n  traverseTreeNodes(treeNodes, function (_ref2) {\n    var key = _ref2.key;\n\n    dragNodesKeys.push(key);\n  });\n  dragNodesKeys.push(eventKey || pos);\n  return dragNodesKeys;\n}\n\nexport function calcDropPosition(event, treeNode) {\n  var clientY = event.clientY;\n\n  var _treeNode$$refs$selec = treeNode.$refs.selectHandle.getBoundingClientRect(),\n      top = _treeNode$$refs$selec.top,\n      bottom = _treeNode$$refs$selec.bottom,\n      height = _treeNode$$refs$selec.height;\n\n  var des = Math.max(height * DRAG_SIDE_RANGE, DRAG_MIN_GAP);\n\n  if (clientY <= top + des) {\n    return -1;\n  } else if (clientY >= bottom - des) {\n    return 1;\n  }\n  return 0;\n}\n\n/**\n * Return selectedKeys according with multiple prop\n * @param selectedKeys\n * @param props\n * @returns [string]\n */\nexport function calcSelectedKeys(selectedKeys, props) {\n  if (!selectedKeys) {\n    return undefined;\n  }\n\n  var multiple = props.multiple;\n\n  if (multiple) {\n    return selectedKeys.slice();\n  }\n\n  if (selectedKeys.length) {\n    return [selectedKeys[0]];\n  }\n  return selectedKeys;\n}\n\n/**\n * Since React internal will convert key to string,\n * we need do this to avoid `checkStrictly` use number match\n */\n// function keyListToString (keyList) {\n//   if (!keyList) return keyList\n//   return keyList.map(key => String(key))\n// }\n\nvar internalProcessProps = function internalProcessProps() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  return {\n    props: omit(props, ['on', 'key', 'class', 'className', 'style']),\n    on: props.on || {},\n    'class': props['class'] || props.className,\n    style: props.style,\n    key: props.key\n  };\n};\nexport function convertDataToTree(h, treeData, processer) {\n  if (!treeData) return [];\n\n  var _ref3 = processer || {},\n      _ref3$processProps = _ref3.processProps,\n      processProps = _ref3$processProps === undefined ? internalProcessProps : _ref3$processProps;\n\n  var list = Array.isArray(treeData) ? treeData : [treeData];\n  return list.map(function (_ref4) {\n    var children = _ref4.children,\n        props = _objectWithoutProperties(_ref4, ['children']);\n\n    var childrenNodes = convertDataToTree(h, children, processer);\n    return h(\n      TreeNode,\n      processProps(props),\n      [childrenNodes]\n    );\n  });\n}\n\n// TODO: ========================= NEW LOGIC =========================\n/**\n * Calculate treeNodes entities. `processTreeEntity` is used for `rc-tree-select`\n * @param treeNodes\n * @param processTreeEntity  User can customize the entity\n */\nexport function convertTreeToEntities(treeNodes) {\n  var _ref5 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      initWrapper = _ref5.initWrapper,\n      processEntity = _ref5.processEntity,\n      onProcessFinished = _ref5.onProcessFinished;\n\n  var posEntities = new Map();\n  var keyEntities = new Map();\n  var wrapper = {\n    posEntities: posEntities,\n    keyEntities: keyEntities\n  };\n\n  if (initWrapper) {\n    wrapper = initWrapper(wrapper) || wrapper;\n  }\n\n  traverseTreeNodes(treeNodes, function (item) {\n    var node = item.node,\n        index = item.index,\n        pos = item.pos,\n        key = item.key,\n        parentPos = item.parentPos;\n\n    var entity = { node: node, index: index, key: key, pos: pos };\n\n    posEntities.set(pos, entity);\n    keyEntities.set(key, entity);\n\n    // Fill children\n    entity.parent = posEntities.get(parentPos);\n    if (entity.parent) {\n      entity.parent.children = entity.parent.children || [];\n      entity.parent.children.push(entity);\n    }\n\n    if (processEntity) {\n      processEntity(entity, wrapper);\n    }\n  });\n\n  if (onProcessFinished) {\n    onProcessFinished(wrapper);\n  }\n\n  return wrapper;\n}\n\n/**\n * Parse `checkedKeys` to { checkedKeys, halfCheckedKeys } style\n */\nexport function parseCheckedKeys(keys) {\n  if (!keys) {\n    return null;\n  }\n\n  // Convert keys to object format\n  var keyProps = void 0;\n  if (Array.isArray(keys)) {\n    // [Legacy] Follow the api doc\n    keyProps = {\n      checkedKeys: keys,\n      halfCheckedKeys: undefined\n    };\n  } else if ((typeof keys === 'undefined' ? 'undefined' : _typeof(keys)) === 'object') {\n    keyProps = {\n      checkedKeys: keys.checked || undefined,\n      halfCheckedKeys: keys.halfChecked || undefined\n    };\n  } else {\n    warning(false, '`checkedKeys` is not an array or an object');\n    return null;\n  }\n\n  // keyProps.checkedKeys = keyListToString(keyProps.checkedKeys)\n  // keyProps.halfCheckedKeys = keyListToString(keyProps.halfCheckedKeys)\n\n  return keyProps;\n}\n\n/**\n * Conduct check state by the keyList. It will conduct up & from the provided key.\n * If the conduct path reach the disabled or already checked / unchecked node will stop conduct.\n * @param keyList       list of keys\n * @param isCheck       is check the node or not\n * @param keyEntities   parsed by `convertTreeToEntities` function in Tree\n * @param checkStatus   Can pass current checked status for process (usually for uncheck operation)\n * @returns {{checkedKeys: [], halfCheckedKeys: []}}\n */\nexport function conductCheck(keyList, isCheck, keyEntities) {\n  var checkStatus = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  var checkedKeys = new Map();\n  var halfCheckedKeys = new Map(); // Record the key has some child checked (include child half checked)\n\n  (checkStatus.checkedKeys || []).forEach(function (key) {\n    checkedKeys.set(key, true);\n  });\n\n  (checkStatus.halfCheckedKeys || []).forEach(function (key) {\n    halfCheckedKeys.set(key, true);\n  });\n\n  // Conduct up\n  function conductUp(key) {\n    if (checkedKeys.get(key) === isCheck) return;\n\n    var entity = keyEntities.get(key);\n    if (!entity) return;\n\n    var children = entity.children,\n        parent = entity.parent,\n        node = entity.node;\n\n\n    if (isCheckDisabled(node)) return;\n\n    // Check child node checked status\n    var everyChildChecked = true;\n    var someChildChecked = false; // Child checked or half checked\n\n    (children || []).filter(function (child) {\n      return !isCheckDisabled(child.node);\n    }).forEach(function (_ref6) {\n      var childKey = _ref6.key;\n\n      var childChecked = checkedKeys.get(childKey);\n      var childHalfChecked = halfCheckedKeys.get(childKey);\n\n      if (childChecked || childHalfChecked) someChildChecked = true;\n      if (!childChecked) everyChildChecked = false;\n    });\n\n    // Update checked status\n    if (isCheck) {\n      checkedKeys.set(key, everyChildChecked);\n    } else {\n      checkedKeys.set(key, false);\n    }\n    halfCheckedKeys.set(key, someChildChecked);\n\n    if (parent) {\n      conductUp(parent.key);\n    }\n  }\n\n  // Conduct down\n  function conductDown(key) {\n    if (checkedKeys.get(key) === isCheck) return;\n\n    var entity = keyEntities.get(key);\n    if (!entity) return;\n\n    var children = entity.children,\n        node = entity.node;\n\n\n    if (isCheckDisabled(node)) return;\n\n    checkedKeys.set(key, isCheck);\n\n    (children || []).forEach(function (child) {\n      conductDown(child.key);\n    });\n  }\n\n  function conduct(key) {\n    var entity = keyEntities.get(key);\n\n    if (!entity) {\n      warning(false, '\\'' + key + '\\' does not exist in the tree.');\n      return;\n    }\n    var children = entity.children,\n        parent = entity.parent,\n        node = entity.node;\n\n    checkedKeys.set(key, isCheck);\n\n    if (isCheckDisabled(node)) return;\n\n    // Conduct down\n    (children || []).filter(function (child) {\n      return !isCheckDisabled(child.node);\n    }).forEach(function (child) {\n      conductDown(child.key);\n    });\n\n    // Conduct up\n    if (parent) {\n      conductUp(parent.key);\n    }\n  }\n\n  (keyList || []).forEach(function (key) {\n    conduct(key);\n  });\n\n  var checkedKeyList = [];\n  var halfCheckedKeyList = [];\n\n  // Fill checked list\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = checkedKeys[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var _ref7 = _step.value;\n\n      var _ref8 = _slicedToArray(_ref7, 2);\n\n      var key = _ref8[0];\n      var value = _ref8[1];\n\n      if (value) {\n        checkedKeyList.push(key);\n      }\n    }\n\n    // Fill half checked list\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator['return']) {\n        _iterator['return']();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = halfCheckedKeys[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var _ref9 = _step2.value;\n\n      var _ref10 = _slicedToArray(_ref9, 2);\n\n      var _key = _ref10[0];\n      var _value = _ref10[1];\n\n      if (!checkedKeys.get(_key) && _value) {\n        halfCheckedKeyList.push(_key);\n      }\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2['return']) {\n        _iterator2['return']();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  return {\n    checkedKeys: checkedKeyList,\n    halfCheckedKeys: halfCheckedKeyList\n  };\n}\n\n/**\n * If user use `autoExpandParent` we should get the list of parent node\n * @param keyList\n * @param keyEntities\n */\nexport function conductExpandParent(keyList, keyEntities) {\n  var expandedKeys = new Map();\n\n  function conductUp(key) {\n    if (expandedKeys.get(key)) return;\n\n    var entity = keyEntities.get(key);\n    if (!entity) return;\n\n    expandedKeys.set(key, true);\n\n    var parent = entity.parent,\n        node = entity.node;\n\n\n    if (isCheckDisabled(node)) return;\n\n    if (parent) {\n      conductUp(parent.key);\n    }\n  }\n\n  (keyList || []).forEach(function (key) {\n    conductUp(key);\n  });\n\n  return [].concat(_toConsumableArray(expandedKeys.keys()));\n}\n\n/**\n * Returns only the data- and aria- key/value pairs\n * @param {object} props\n */\nexport function getDataAndAria(props) {\n  return Object.keys(props).reduce(function (prev, key) {\n    if (key.substr(0, 5) === 'data-' || key.substr(0, 5) === 'aria-') {\n      prev[key] = props[key];\n    }\n    return prev;\n  }, {});\n}","import _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _typeof from 'babel-runtime/helpers/typeof';\nimport _extends from 'babel-runtime/helpers/extends';\nimport PropTypes from '../../_util/vue-types';\nimport classNames from 'classnames';\nimport { getNodeChildren as _getNodeChildren, mapChildren, warnOnlyTreeNode } from './util';\nimport { initDefaultProps, filterEmpty, getComponentFromProp } from '../../_util/props-util';\nimport BaseMixin from '../../_util/BaseMixin';\nimport getTransitionProps from '../../_util/getTransitionProps';\nimport { cloneElement } from '../../_util/vnode';\n\nfunction noop() {}\nvar ICON_OPEN = 'open';\nvar ICON_CLOSE = 'close';\n\nvar defaultTitle = '---';\n\nvar TreeNode = {\n  name: 'TreeNode',\n  mixins: [BaseMixin],\n  __ANT_TREE_NODE: true,\n  props: initDefaultProps({\n    eventKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]), // Pass by parent `cloneElement`\n    prefixCls: PropTypes.string,\n    // className: PropTypes.string,\n    root: PropTypes.object,\n    // onSelect: PropTypes.func,\n\n    // By parent\n    expanded: PropTypes.bool,\n    selected: PropTypes.bool,\n    checked: PropTypes.bool,\n    loaded: PropTypes.bool,\n    loading: PropTypes.bool,\n    halfChecked: PropTypes.bool,\n    title: PropTypes.any,\n    pos: PropTypes.string,\n    dragOver: PropTypes.bool,\n    dragOverGapTop: PropTypes.bool,\n    dragOverGapBottom: PropTypes.bool,\n\n    // By user\n    isLeaf: PropTypes.bool,\n    selectable: PropTypes.bool,\n    disabled: PropTypes.bool,\n    disableCheckbox: PropTypes.bool,\n    icon: PropTypes.any,\n    dataRef: PropTypes.object,\n    switcherIcon: PropTypes.any,\n\n    label: PropTypes.any,\n    value: PropTypes.any\n  }, {}),\n\n  data: function data() {\n    return {\n      dragNodeHighlight: false\n    };\n  },\n\n  inject: {\n    vcTree: { 'default': function _default() {\n        return {};\n      } },\n    vcTreeNode: { 'default': function _default() {\n        return {};\n      } }\n  },\n  provide: function provide() {\n    return {\n      vcTreeNode: this\n    };\n  },\n\n\n  // Isomorphic needn't load data in server side\n  mounted: function mounted() {\n    this.syncLoadData(this.$props);\n  },\n  updated: function updated() {\n    this.syncLoadData(this.$props);\n  },\n\n\n  methods: {\n    onSelectorClick: function onSelectorClick(e) {\n      // Click trigger before select/check operation\n      var onNodeClick = this.vcTree.onNodeClick;\n\n      onNodeClick(e, this);\n      if (this.isSelectable()) {\n        this.onSelect(e);\n      } else {\n        this.onCheck(e);\n      }\n    },\n    onSelectorDoubleClick: function onSelectorDoubleClick(e) {\n      var onNodeDoubleClick = this.vcTree.onNodeDoubleClick;\n\n      onNodeDoubleClick(e, this);\n    },\n    onSelect: function onSelect(e) {\n      if (this.isDisabled()) return;\n\n      var onNodeSelect = this.vcTree.onNodeSelect;\n\n      e.preventDefault();\n      onNodeSelect(e, this);\n    },\n    onCheck: function onCheck(e) {\n      if (this.isDisabled()) return;\n\n      var disableCheckbox = this.disableCheckbox,\n          checked = this.checked;\n      var _vcTree = this.vcTree,\n          checkable = _vcTree.checkable,\n          onNodeCheck = _vcTree.onNodeCheck;\n\n\n      if (!checkable || disableCheckbox) return;\n\n      e.preventDefault();\n      var targetChecked = !checked;\n      onNodeCheck(e, this, targetChecked);\n    },\n    onMouseEnter: function onMouseEnter(e) {\n      var onNodeMouseEnter = this.vcTree.onNodeMouseEnter;\n\n      onNodeMouseEnter(e, this);\n    },\n    onMouseLeave: function onMouseLeave(e) {\n      var onNodeMouseLeave = this.vcTree.onNodeMouseLeave;\n\n      onNodeMouseLeave(e, this);\n    },\n    onContextMenu: function onContextMenu(e) {\n      var onNodeContextMenu = this.vcTree.onNodeContextMenu;\n\n      onNodeContextMenu(e, this);\n    },\n    onDragStart: function onDragStart(e) {\n      var onNodeDragStart = this.vcTree.onNodeDragStart;\n\n\n      e.stopPropagation();\n      this.setState({\n        dragNodeHighlight: true\n      });\n      onNodeDragStart(e, this);\n\n      try {\n        // ie throw error\n        // firefox-need-it\n        e.dataTransfer.setData('text/plain', '');\n      } catch (error) {\n        // empty\n      }\n    },\n    onDragEnter: function onDragEnter(e) {\n      var onNodeDragEnter = this.vcTree.onNodeDragEnter;\n\n\n      e.preventDefault();\n      e.stopPropagation();\n      onNodeDragEnter(e, this);\n    },\n    onDragOver: function onDragOver(e) {\n      var onNodeDragOver = this.vcTree.onNodeDragOver;\n\n\n      e.preventDefault();\n      e.stopPropagation();\n      onNodeDragOver(e, this);\n    },\n    onDragLeave: function onDragLeave(e) {\n      var onNodeDragLeave = this.vcTree.onNodeDragLeave;\n\n\n      e.stopPropagation();\n      onNodeDragLeave(e, this);\n    },\n    onDragEnd: function onDragEnd(e) {\n      var onNodeDragEnd = this.vcTree.onNodeDragEnd;\n\n\n      e.stopPropagation();\n      this.setState({\n        dragNodeHighlight: false\n      });\n      onNodeDragEnd(e, this);\n    },\n    onDrop: function onDrop(e) {\n      var onNodeDrop = this.vcTree.onNodeDrop;\n\n\n      e.preventDefault();\n      e.stopPropagation();\n      this.setState({\n        dragNodeHighlight: false\n      });\n      onNodeDrop(e, this);\n    },\n\n\n    // Disabled item still can be switch\n    onExpand: function onExpand(e) {\n      var onNodeExpand = this.vcTree.onNodeExpand;\n\n      onNodeExpand(e, this);\n    },\n    getNodeChildren: function getNodeChildren() {\n      var children = this.$slots['default'];\n\n      var originList = filterEmpty(children);\n      var targetList = _getNodeChildren(originList);\n\n      if (originList.length !== targetList.length) {\n        warnOnlyTreeNode();\n      }\n\n      return targetList;\n    },\n    getNodeState: function getNodeState() {\n      var expanded = this.expanded;\n\n\n      if (this.isLeaf2()) {\n        return null;\n      }\n\n      return expanded ? ICON_OPEN : ICON_CLOSE;\n    },\n    isLeaf2: function isLeaf2() {\n      var isLeaf = this.isLeaf,\n          loaded = this.loaded;\n      var loadData = this.vcTree.loadData;\n\n\n      var hasChildren = this.getNodeChildren().length !== 0;\n      if (isLeaf === false) {\n        return false;\n      }\n      return isLeaf || !loadData && !hasChildren || loadData && loaded && !hasChildren;\n    },\n    isDisabled: function isDisabled() {\n      var disabled = this.disabled;\n      var treeDisabled = this.vcTree.disabled;\n\n      // Follow the logic of Selectable\n\n      if (disabled === false) {\n        return false;\n      }\n\n      return !!(treeDisabled || disabled);\n    },\n    isSelectable: function isSelectable() {\n      var selectable = this.selectable;\n      var treeSelectable = this.vcTree.selectable;\n\n      // Ignore when selectable is undefined or null\n\n      if (typeof selectable === 'boolean') {\n        return selectable;\n      }\n\n      return treeSelectable;\n    },\n\n\n    // Load data to avoid default expanded tree without data\n    syncLoadData: function syncLoadData(props) {\n      var expanded = props.expanded,\n          loading = props.loading,\n          loaded = props.loaded;\n      var _vcTree2 = this.vcTree,\n          loadData = _vcTree2.loadData,\n          onNodeLoad = _vcTree2.onNodeLoad;\n\n      if (loading) return;\n      // read from state to avoid loadData at same time\n      if (loadData && expanded && !this.isLeaf2()) {\n        // We needn't reload data when has children in sync logic\n        // It's only needed in node expanded\n        var hasChildren = this.getNodeChildren().length !== 0;\n        if (!hasChildren && !loaded) {\n          onNodeLoad(this);\n        }\n      }\n    },\n\n\n    // Switcher\n    renderSwitcher: function renderSwitcher() {\n      var h = this.$createElement;\n      var expanded = this.expanded;\n      var prefixCls = this.vcTree.prefixCls;\n\n      var switcherIcon = getComponentFromProp(this, 'switcherIcon', {}, false) || getComponentFromProp(this.vcTree, 'switcherIcon', {}, false);\n      if (this.isLeaf2()) {\n        return h(\n          'span',\n          {\n            key: 'switcher',\n            'class': classNames(prefixCls + '-switcher', prefixCls + '-switcher-noop')\n          },\n          [typeof switcherIcon === 'function' ? cloneElement(switcherIcon(_extends({}, this.$props, { isLeaf: true }))) : switcherIcon]\n        );\n      }\n\n      var switcherCls = classNames(prefixCls + '-switcher', prefixCls + '-switcher_' + (expanded ? ICON_OPEN : ICON_CLOSE));\n      return h(\n        'span',\n        { key: 'switcher', on: {\n            'click': this.onExpand\n          },\n          'class': switcherCls },\n        [typeof switcherIcon === 'function' ? cloneElement(switcherIcon(_extends({}, this.$props, { isLeaf: false }))) : switcherIcon]\n      );\n    },\n\n\n    // Checkbox\n    renderCheckbox: function renderCheckbox() {\n      var h = this.$createElement;\n      var checked = this.checked,\n          halfChecked = this.halfChecked,\n          disableCheckbox = this.disableCheckbox;\n      var _vcTree3 = this.vcTree,\n          prefixCls = _vcTree3.prefixCls,\n          checkable = _vcTree3.checkable;\n\n      var disabled = this.isDisabled();\n\n      if (!checkable) return null;\n\n      // [Legacy] Custom element should be separate with `checkable` in future\n      var $custom = typeof checkable !== 'boolean' ? checkable : null;\n\n      return h(\n        'span',\n        {\n          key: 'checkbox',\n          'class': classNames(prefixCls + '-checkbox', checked && prefixCls + '-checkbox-checked', !checked && halfChecked && prefixCls + '-checkbox-indeterminate', (disabled || disableCheckbox) && prefixCls + '-checkbox-disabled'),\n          on: {\n            'click': this.onCheck\n          }\n        },\n        [$custom]\n      );\n    },\n    renderIcon: function renderIcon() {\n      var h = this.$createElement;\n      var loading = this.loading;\n      var prefixCls = this.vcTree.prefixCls;\n\n\n      return h('span', {\n        key: 'icon',\n        'class': classNames(prefixCls + '-iconEle', prefixCls + '-icon__' + (this.getNodeState() || 'docu'), loading && prefixCls + '-icon_loading')\n      });\n    },\n\n\n    // Icon + Title\n    renderSelector: function renderSelector(h) {\n      var selected = this.selected,\n          icon = this.icon,\n          loading = this.loading,\n          dragNodeHighlight = this.dragNodeHighlight;\n      var _vcTree4 = this.vcTree,\n          prefixCls = _vcTree4.prefixCls,\n          showIcon = _vcTree4.showIcon,\n          treeIcon = _vcTree4.icon,\n          draggable = _vcTree4.draggable,\n          loadData = _vcTree4.loadData;\n\n      var disabled = this.isDisabled();\n      var title = getComponentFromProp(this, 'title') || defaultTitle;\n      var wrapClass = prefixCls + '-node-content-wrapper';\n\n      // Icon - Still show loading icon when loading without showIcon\n      var $icon = void 0;\n\n      if (showIcon) {\n        var currentIcon = icon || treeIcon;\n        $icon = currentIcon ? h(\n          'span',\n          { 'class': classNames(prefixCls + '-iconEle', prefixCls + '-icon__customize') },\n          [typeof currentIcon === 'function' ? currentIcon(_extends({}, this.$props), h) : currentIcon]\n        ) : this.renderIcon();\n      } else if (loadData && loading) {\n        $icon = this.renderIcon();\n      }\n\n      // Title\n      var $title = h(\n        'span',\n        { 'class': prefixCls + '-title' },\n        [title]\n      );\n\n      return h(\n        'span',\n        {\n          key: 'selector',\n          ref: 'selectHandle',\n          attrs: { title: typeof title === 'string' ? title : '',\n\n            draggable: !disabled && draggable || undefined,\n            'aria-grabbed': !disabled && draggable || undefined\n          },\n          'class': classNames('' + wrapClass, wrapClass + '-' + (this.getNodeState() || 'normal'), !disabled && (selected || dragNodeHighlight) && prefixCls + '-node-selected', !disabled && draggable && 'draggable'), on: {\n            'mouseenter': this.onMouseEnter,\n            'mouseleave': this.onMouseLeave,\n            'contextmenu': this.onContextMenu,\n            'click': this.onSelectorClick,\n            'dblclick': this.onSelectorDoubleClick,\n            'dragstart': draggable ? this.onDragStart : noop\n          }\n        },\n        [$icon, $title]\n      );\n    },\n\n\n    // Children list wrapped with `Animation`\n    renderChildren: function renderChildren() {\n      var h = this.$createElement;\n      var expanded = this.expanded,\n          pos = this.pos;\n      var _vcTree5 = this.vcTree,\n          prefixCls = _vcTree5.prefixCls,\n          openTransitionName = _vcTree5.openTransitionName,\n          openAnimation = _vcTree5.openAnimation,\n          renderTreeNode = _vcTree5.renderTreeNode;\n\n\n      var animProps = {};\n      if (openTransitionName) {\n        animProps = getTransitionProps(openTransitionName);\n      } else if ((typeof openAnimation === 'undefined' ? 'undefined' : _typeof(openAnimation)) === 'object') {\n        animProps = _extends({}, openAnimation);\n        animProps.props = _extends({ css: false }, animProps.props);\n      }\n\n      // Children TreeNode\n      var nodeList = this.getNodeChildren();\n\n      if (nodeList.length === 0) {\n        return null;\n      }\n\n      var $children = void 0;\n      if (expanded) {\n        $children = h(\n          'ul',\n          {\n            'class': classNames(prefixCls + '-child-tree', expanded && prefixCls + '-child-tree-open'),\n            attrs: { 'data-expanded': expanded,\n              role: 'group'\n            }\n          },\n          [mapChildren(nodeList, function (node, index) {\n            return renderTreeNode(node, index, pos);\n          })]\n        );\n      }\n\n      return h(\n        'transition',\n        animProps,\n        [$children]\n      );\n    }\n  },\n\n  render: function render(h) {\n    var _ref;\n\n    var _$props = this.$props,\n        dragOver = _$props.dragOver,\n        dragOverGapTop = _$props.dragOverGapTop,\n        dragOverGapBottom = _$props.dragOverGapBottom,\n        isLeaf = _$props.isLeaf,\n        expanded = _$props.expanded,\n        selected = _$props.selected,\n        checked = _$props.checked,\n        halfChecked = _$props.halfChecked,\n        loading = _$props.loading;\n    var _vcTree6 = this.vcTree,\n        prefixCls = _vcTree6.prefixCls,\n        filterTreeNode = _vcTree6.filterTreeNode,\n        draggable = _vcTree6.draggable;\n\n    var disabled = this.isDisabled();\n    return h(\n      'li',\n      {\n        'class': (_ref = {}, _defineProperty(_ref, prefixCls + '-treenode-disabled', disabled), _defineProperty(_ref, prefixCls + '-treenode-switcher-' + (expanded ? 'open' : 'close'), !isLeaf), _defineProperty(_ref, prefixCls + '-treenode-checkbox-checked', checked), _defineProperty(_ref, prefixCls + '-treenode-checkbox-indeterminate', halfChecked), _defineProperty(_ref, prefixCls + '-treenode-selected', selected), _defineProperty(_ref, prefixCls + '-treenode-loading', loading), _defineProperty(_ref, 'drag-over', !disabled && dragOver), _defineProperty(_ref, 'drag-over-gap-top', !disabled && dragOverGapTop), _defineProperty(_ref, 'drag-over-gap-bottom', !disabled && dragOverGapBottom), _defineProperty(_ref, 'filter-node', filterTreeNode && filterTreeNode(this)), _ref),\n        attrs: { role: 'treeitem'\n        },\n        on: {\n          'dragenter': draggable ? this.onDragEnter : noop,\n          'dragover': draggable ? this.onDragOver : noop,\n          'dragleave': draggable ? this.onDragLeave : noop,\n          'drop': draggable ? this.onDrop : noop,\n          'dragend': draggable ? this.onDragEnd : noop\n        }\n      },\n      [this.renderSwitcher(), this.renderCheckbox(), this.renderSelector(h), this.renderChildren()]\n    );\n  }\n};\n\nTreeNode.isTreeNode = 1;\n\nexport default TreeNode;","// export this package's api\n// base 2.5.4\nimport Vue from 'vue';\nimport TreeSelect from './src';\nimport ref from 'vue-ref';\n\nVue.use(ref, { name: 'ant-ref' });\nexport default TreeSelect;\n\nexport { TreeNode, SHOW_ALL, SHOW_PARENT, SHOW_CHILD } from './src';","var autoAdjustOverflow = {\n  adjustX: 1,\n  adjustY: 1\n};\n\nvar targetOffset = [0, 0];\n\nvar placements = {\n  bottomLeft: {\n    points: ['tl', 'tl'],\n    overflow: autoAdjustOverflow,\n    offset: [0, -3],\n    targetOffset: targetOffset\n  },\n  bottomRight: {\n    points: ['tr', 'tr'],\n    overflow: autoAdjustOverflow,\n    offset: [0, -3],\n    targetOffset: targetOffset\n  },\n  topRight: {\n    points: ['br', 'br'],\n    overflow: autoAdjustOverflow,\n    offset: [0, 3],\n    targetOffset: targetOffset\n  },\n  topLeft: {\n    points: ['bl', 'bl'],\n    overflow: autoAdjustOverflow,\n    offset: [0, 3],\n    targetOffset: targetOffset\n  }\n};\n\nexport default placements;","import moment from 'moment';\nimport PropTypes from '../_util/vue-types';\nimport BaseMixin from '../_util/BaseMixin';\nimport { initDefaultProps, hasProp, getComponentFromProp, isValidElement, getEvents } from '../_util/props-util';\nimport { cloneElement } from '../_util/vnode';\nimport Trigger from '../vc-trigger';\nimport Panel from './Panel';\nimport placements from './placements';\n\nfunction noop() {}\n\nexport default {\n  name: 'VcTimePicker',\n  mixins: [BaseMixin],\n  props: initDefaultProps({\n    prefixCls: PropTypes.string,\n    clearText: PropTypes.string,\n    value: PropTypes.any,\n    defaultOpenValue: {\n      type: Object,\n      'default': function _default() {\n        return moment();\n      }\n    },\n    inputReadOnly: PropTypes.bool,\n    disabled: PropTypes.bool,\n    allowEmpty: PropTypes.bool,\n    defaultValue: PropTypes.any,\n    open: PropTypes.bool,\n    defaultOpen: PropTypes.bool,\n    align: PropTypes.object,\n    placement: PropTypes.any,\n    transitionName: PropTypes.string,\n    getPopupContainer: PropTypes.func,\n    placeholder: PropTypes.string,\n    format: PropTypes.string,\n    showHour: PropTypes.bool,\n    showMinute: PropTypes.bool,\n    showSecond: PropTypes.bool,\n    popupClassName: PropTypes.string,\n    popupStyle: PropTypes.object,\n    disabledHours: PropTypes.func,\n    disabledMinutes: PropTypes.func,\n    disabledSeconds: PropTypes.func,\n    hideDisabledOptions: PropTypes.bool,\n    // onChange: PropTypes.func,\n    // onAmPmChange: PropTypes.func,\n    // onOpen: PropTypes.func,\n    // onClose: PropTypes.func,\n    // onFocus: PropTypes.func,\n    // onBlur: PropTypes.func,\n    name: PropTypes.string,\n    autoComplete: PropTypes.string,\n    use12Hours: PropTypes.bool,\n    hourStep: PropTypes.number,\n    minuteStep: PropTypes.number,\n    secondStep: PropTypes.number,\n    focusOnOpen: PropTypes.bool,\n    // onKeyDown: PropTypes.func,\n    autoFocus: PropTypes.bool,\n    id: PropTypes.string,\n    inputIcon: PropTypes.any,\n    clearIcon: PropTypes.any,\n    addon: PropTypes.func\n  }, {\n    clearText: 'clear',\n    prefixCls: 'rc-time-picker',\n    defaultOpen: false,\n    inputReadOnly: false,\n    popupClassName: '',\n    popupStyle: {},\n    align: {},\n    id: '',\n    allowEmpty: true,\n    showHour: true,\n    showMinute: true,\n    showSecond: true,\n    disabledHours: noop,\n    disabledMinutes: noop,\n    disabledSeconds: noop,\n    hideDisabledOptions: false,\n    placement: 'bottomLeft',\n    use12Hours: false,\n    focusOnOpen: false\n  }),\n  data: function data() {\n    var defaultOpen = this.defaultOpen,\n        defaultValue = this.defaultValue,\n        _open = this.open,\n        open = _open === undefined ? defaultOpen : _open,\n        _value = this.value,\n        value = _value === undefined ? defaultValue : _value;\n\n    return {\n      sOpen: open,\n      sValue: value\n    };\n  },\n\n\n  watch: {\n    value: function value(val) {\n      this.setState({\n        sValue: val\n      });\n    },\n    open: function open(val) {\n      if (val !== undefined) {\n        this.setState({\n          sOpen: val\n        });\n      }\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$nextTick(function () {\n      if (_this.autoFocus) {\n        _this.focus();\n      }\n    });\n  },\n\n  methods: {\n    onPanelChange: function onPanelChange(value) {\n      this.setValue(value);\n    },\n    onAmPmChange: function onAmPmChange(ampm) {\n      this.__emit('amPmChange', ampm);\n    },\n    onClear: function onClear(event) {\n      event.stopPropagation();\n      this.setValue(null);\n      this.setOpen(false);\n    },\n    onVisibleChange: function onVisibleChange(open) {\n      this.setOpen(open);\n    },\n    onEsc: function onEsc() {\n      this.setOpen(false);\n      this.focus();\n    },\n    onKeyDown: function onKeyDown(e) {\n      if (e.keyCode === 40) {\n        this.setOpen(true);\n      }\n    },\n    onKeyDown2: function onKeyDown2(e) {\n      this.__emit('keydown', e);\n    },\n    setValue: function setValue(value) {\n      if (!hasProp(this, 'value')) {\n        this.setState({\n          sValue: value\n        });\n      }\n      this.__emit('change', value);\n    },\n    getFormat: function getFormat() {\n      var format = this.format,\n          showHour = this.showHour,\n          showMinute = this.showMinute,\n          showSecond = this.showSecond,\n          use12Hours = this.use12Hours;\n\n      if (format) {\n        return format;\n      }\n\n      if (use12Hours) {\n        var fmtString = [showHour ? 'h' : '', showMinute ? 'mm' : '', showSecond ? 'ss' : ''].filter(function (item) {\n          return !!item;\n        }).join(':');\n\n        return fmtString.concat(' a');\n      }\n\n      return [showHour ? 'HH' : '', showMinute ? 'mm' : '', showSecond ? 'ss' : ''].filter(function (item) {\n        return !!item;\n      }).join(':');\n    },\n    getPanelElement: function getPanelElement() {\n      var h = this.$createElement;\n      var prefixCls = this.prefixCls,\n          placeholder = this.placeholder,\n          disabledHours = this.disabledHours,\n          addon = this.addon,\n          disabledMinutes = this.disabledMinutes,\n          disabledSeconds = this.disabledSeconds,\n          hideDisabledOptions = this.hideDisabledOptions,\n          inputReadOnly = this.inputReadOnly,\n          allowEmpty = this.allowEmpty,\n          showHour = this.showHour,\n          showMinute = this.showMinute,\n          showSecond = this.showSecond,\n          defaultOpenValue = this.defaultOpenValue,\n          clearText = this.clearText,\n          use12Hours = this.use12Hours,\n          focusOnOpen = this.focusOnOpen,\n          onKeyDown2 = this.onKeyDown2,\n          hourStep = this.hourStep,\n          minuteStep = this.minuteStep,\n          secondStep = this.secondStep,\n          sValue = this.sValue;\n\n      var clearIcon = getComponentFromProp(this, 'clearIcon');\n      return h(Panel, {\n        attrs: {\n          clearText: clearText,\n          prefixCls: prefixCls + '-panel',\n\n          value: sValue,\n          inputReadOnly: inputReadOnly,\n\n          defaultOpenValue: defaultOpenValue,\n          showHour: showHour,\n          showMinute: showMinute,\n          showSecond: showSecond,\n\n          allowEmpty: allowEmpty,\n          format: this.getFormat(),\n          placeholder: placeholder,\n          disabledHours: disabledHours,\n          disabledMinutes: disabledMinutes,\n          disabledSeconds: disabledSeconds,\n          hideDisabledOptions: hideDisabledOptions,\n          use12Hours: use12Hours,\n          hourStep: hourStep,\n          minuteStep: minuteStep,\n          secondStep: secondStep,\n          focusOnOpen: focusOnOpen,\n\n          clearIcon: clearIcon,\n          addon: addon\n        },\n        ref: 'panel', on: {\n          'change': this.onPanelChange,\n          'amPmChange': this.onAmPmChange,\n          'esc': this.onEsc,\n          'keydown': onKeyDown2\n        }\n      });\n    },\n    getPopupClassName: function getPopupClassName() {\n      var showHour = this.showHour,\n          showMinute = this.showMinute,\n          showSecond = this.showSecond,\n          use12Hours = this.use12Hours,\n          prefixCls = this.prefixCls;\n\n      var popupClassName = this.popupClassName;\n      // Keep it for old compatibility\n      if ((!showHour || !showMinute || !showSecond) && !use12Hours) {\n        popupClassName += ' ' + prefixCls + '-panel-narrow';\n      }\n      var selectColumnCount = 0;\n      if (showHour) {\n        selectColumnCount += 1;\n      }\n      if (showMinute) {\n        selectColumnCount += 1;\n      }\n      if (showSecond) {\n        selectColumnCount += 1;\n      }\n      if (use12Hours) {\n        selectColumnCount += 1;\n      }\n      popupClassName += ' ' + prefixCls + '-panel-column-' + selectColumnCount;\n      return popupClassName;\n    },\n    setOpen: function setOpen(open) {\n      if (this.sOpen !== open) {\n        if (!hasProp(this, 'open')) {\n          this.setState({ sOpen: open });\n        }\n        if (open) {\n          this.__emit('open', { open: open });\n        } else {\n          this.__emit('close', { open: open });\n        }\n      }\n    },\n    focus: function focus() {\n      this.$refs.picker.focus();\n    },\n    blur: function blur() {\n      this.$refs.picker.blur();\n    },\n    onFocus: function onFocus(e) {\n      this.__emit('focus', e);\n    },\n    onBlur: function onBlur(e) {\n      this.__emit('blur', e);\n    },\n    renderClearButton: function renderClearButton() {\n      var _this2 = this;\n\n      var h = this.$createElement;\n      var sValue = this.sValue;\n      var _$props = this.$props,\n          prefixCls = _$props.prefixCls,\n          allowEmpty = _$props.allowEmpty,\n          clearText = _$props.clearText;\n\n      if (!allowEmpty || !sValue) {\n        return null;\n      }\n      var clearIcon = getComponentFromProp(this, 'clearIcon');\n      if (isValidElement(clearIcon)) {\n        var _ref = getEvents(clearIcon) || {},\n            _click = _ref.click;\n\n        return cloneElement(clearIcon, {\n          on: {\n            click: function click() {\n              if (_click) _click.apply(undefined, arguments);\n              _this2.onClear.apply(_this2, arguments);\n            }\n          }\n        });\n      }\n\n      return h(\n        'a',\n        {\n          attrs: {\n            role: 'button',\n\n            title: clearText,\n\n            tabIndex: 0\n          },\n          'class': prefixCls + '-clear', on: {\n            'click': this.onClear\n          }\n        },\n        [clearIcon || h('i', { 'class': prefixCls + '-clear-icon' })]\n      );\n    }\n  },\n\n  render: function render() {\n    var h = arguments[0];\n    var prefixCls = this.prefixCls,\n        placeholder = this.placeholder,\n        placement = this.placement,\n        align = this.align,\n        id = this.id,\n        disabled = this.disabled,\n        transitionName = this.transitionName,\n        getPopupContainer = this.getPopupContainer,\n        name = this.name,\n        autoComplete = this.autoComplete,\n        autoFocus = this.autoFocus,\n        inputReadOnly = this.inputReadOnly,\n        sOpen = this.sOpen,\n        sValue = this.sValue,\n        onFocus = this.onFocus,\n        onBlur = this.onBlur,\n        popupStyle = this.popupStyle;\n\n    var popupClassName = this.getPopupClassName();\n    var inputIcon = getComponentFromProp(this, 'inputIcon');\n    return h(\n      Trigger,\n      {\n        attrs: {\n          prefixCls: prefixCls + '-panel',\n          popupClassName: popupClassName,\n          popupStyle: popupStyle,\n          popupAlign: align,\n          builtinPlacements: placements,\n          popupPlacement: placement,\n          action: disabled ? [] : ['click'],\n          destroyPopupOnHide: true,\n          getPopupContainer: getPopupContainer,\n          popupTransitionName: transitionName,\n          popupVisible: sOpen\n        },\n        on: {\n          'popupVisibleChange': this.onVisibleChange\n        }\n      },\n      [h(\n        'template',\n        { slot: 'popup' },\n        [this.getPanelElement()]\n      ), h(\n        'span',\n        { 'class': '' + prefixCls },\n        [h('input', {\n          'class': prefixCls + '-input',\n          ref: 'picker',\n          attrs: { type: 'text',\n            placeholder: placeholder,\n            name: name,\n\n            disabled: disabled,\n\n            autoComplete: autoComplete,\n\n            autoFocus: autoFocus,\n            readOnly: !!inputReadOnly,\n            id: id\n          },\n          on: {\n            'keydown': this.onKeyDown,\n            'focus': onFocus,\n            'blur': onBlur\n          },\n          domProps: {\n            'value': sValue && sValue.format(this.getFormat()) || ''\n          }\n        }), inputIcon || h('span', { 'class': prefixCls + '-icon' }), this.renderClearButton()]\n      )]\n    );\n  }\n};"],"sourceRoot":""}