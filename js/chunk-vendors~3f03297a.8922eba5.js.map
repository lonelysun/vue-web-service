{"version":3,"sources":["webpack:///./node_modules/ant-design-vue/es/upload/interface.js","webpack:///./node_modules/ant-design-vue/es/upload/Dragger.js","webpack:///./node_modules/ant-design-vue/es/upload/UploadList.js","webpack:///./node_modules/ant-design-vue/es/upload/utils.js","webpack:///./node_modules/ant-design-vue/es/upload/Upload.js","webpack:///./node_modules/ant-design-vue/es/upload/index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAmD;AACP;;AAErC,uBAAuB,4BAAU;;AAExC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA;AACA,gFAAgF,gBAAO;AACvF;AACA;AACA;;AAEO;AACP,QAAQ,4BAAU;AAClB,YAAY,4BAAU,SAAS,4BAAU;AACzC,SAAS,4BAAU;AACnB;;AAEO,8BAA8B,4BAAU;AAC/C,kBAAkB,4BAAU;AAC5B,mBAAmB,4BAAU;AAC7B,CAAC;;AAEM,mBAAmB,4BAAU;AACpC,aAAa,4BAAU;AACvB,cAAc,4BAAU;AACxB,eAAe,4BAAU;AACzB,eAAe,4BAAU;AACzB,CAAC;;AAEM;AACP,QAAQ,4BAAU;AAClB,QAAQ,4BAAU;AAClB,mBAAmB,4BAAU,SAAS,4BAAU;AAChD,YAAY,4BAAU,SAAS,4BAAU;AACzC,UAAU,4BAAU,YAAY,4BAAU,SAAS,4BAAU;AAC7D,aAAa,4BAAU;AACvB,QAAQ,4BAAU,YAAY,4BAAU,SAAS,4BAAU;AAC3D,WAAW,4BAAU;AACrB,kBAAkB,4BAAU,YAAY,4BAAU;AAClD,YAAY,4BAAU;AACtB,UAAU,4BAAU;AACpB,gBAAgB,4BAAU;AAC1B;AACA,YAAY,4BAAU;AACtB;AACA;AACA,UAAU,4BAAU;AACpB,uBAAuB,4BAAU;AACjC;AACA,YAAY,4BAAU;AACtB,aAAa,4BAAU;AACvB,iBAAiB,4BAAU;AAC3B,mBAAmB,4BAAU;AAC7B,yBAAyB,4BAAU;AACnC;AACA,UAAU,4BAAU;AACpB,MAAM,4BAAU;AAChB;;AAEO;AACP,YAAY,4BAAU,SAAS,4BAAU;AACzC,aAAa,4BAAU;AACvB;;AAEO;AACP,YAAY,4BAAU;AACtB;AACA;AACA;AACA,SAAS,4BAAU,SAAS,4BAAU;AACtC;AACA,gBAAgB,4BAAU;AAC1B,aAAa,4BAAU;AACvB,kBAAkB,4BAAU;AAC5B,mBAAmB,4BAAU;AAC7B;AACA,E;;ACzGqD;AACA;AACvB;AACY;;AAE3B;AACf;AACA,SAAS,WAAW;AACpB;AACA;;AAEA,gBAAgB,4CAAc;AAC9B;AACA,aAAa,iBAAQ,GAAG;AACxB;AACA,OAAO;AACP;AACA,cAAc;AACd;AACA;AACA,MAAM,MAAM;AACZ;AACA;AACA;AACA;AACA,CAAC,E;;;;;;;;;;;;;;;;;;ACzB6D;AACK;AACd;AACV;AAC4B;AACV;AACJ;AAC9B;AACM;AACE;AACC;AACU;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA,WAAW,4BAAS;AACpB,SAAS,8CAAgB,CAAC,eAAe;AACzC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA,qBAAqB;AACrB,eAAe,8CAAmB;AAClC,OAAO;AACP,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA,0BAA0B,4CAAc;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,mBAAmB,0BAAI;AACvB,gBAAgB;AAChB,OAAO;;AAEP;AACA;AACA;AACA;AACA,aAAa,mDAAmD;AAChE;AACA;AACA,SAAS;AACT,mBAAmB,0BAAI,GAAG,sDAAsD;AAChF,WAAW;AACX,SAAS;AACT;AACA,oBAAoB;AACpB,WAAW,MAAM,0BAAI;AACrB,oBAAoB,iCAAiC;AACrD,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,iBAAQ,GAAG;AAC5B;AACA;AACA,WAAW;AACX;AACA;AACA,oDAAoD,8BAAQ;;AAE5D;AACA;AACA,WAAW,8DAA8D;AACzE;AACA;AACA;AACA,+BAA+B,oBAAU,kBAAkB,EAAE,wBAAe,+CAA+C,wBAAe;AAC1I;AACA;AACA;AACA,QAAQ,0CAAc;AACtB;AACA;AACA;;AAEA;AACA,WAAW;AACX,kDAAkD;AAClD;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,WAAW,0BAAI;AACf,kBAAkB;AAClB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAQ,GAAG,cAAc,SAAS,gBAAgB,EAAE;AAC3E,0CAA0C,0BAAI;AAC9C,+CAA+C,0BAAI;AACnD;AACA;AACA,SAAS,4CAA4C;AACrD;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,QAAQ,0BAAO;AACf;AACA,kBAAkB;AAClB,SAAS;AACT;AACA;AACA,4BAA4B,6CAAkB;AAC9C;AACA;AACA,SAAS,6CAA6C;AACtD;AACA;AACA,WAAW,yCAAyC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,yBAAyB,oBAAU,mBAAmB,EAAE,wBAAe,2CAA2C,wBAAe;AACjI;AACA,+BAA+B,6CAAkB;AACjD;AACA;AACA,MAAM,0CAAc;AACpB,gBAAgB,aAAa;AAC7B,iCAAiC;AACjC;AACA;AACA;AACA,CAAC,E;;ACnToD;AAC9C;AACP;AACA;;AAEA;AACA;AACO;AACP,SAAS,iBAAQ,GAAG;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA,GAAG;AACH;;AAEO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,C;;AC3DmE;AACd;AACjB;AACD;AACM;AACL;AACO;AACqC;AACjB;AACR;AACE;AACzB;AACM;AACI;AAC4C;;AAE/D;;AAER;AACf;AACA,WAAW,4BAAS;AACpB;AACA,WAAW,OAAO;AAClB,SAAS,8CAAgB,CAAC,WAAW;AACrC;AACA;AACA;AACA,YAAY;AACZ;AACA,kBAAkB,CAAC;AACnB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,qBAAqB;AACrB,eAAe,8CAAmB;AAClC,OAAO;AACP,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;;AAEH;AACA;AACA,uBAAuB,YAAY;AACnC;AACA;AACA,sBAAsB,mBAAS;AAC/B;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA,uBAAuB,aAAa;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,uBAAuB,WAAW;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,iBAAQ,GAAG;AACzB;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA,uBAAuB,WAAW;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,iBAAQ,GAAG;AACzB;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,uBAAuB,WAAW;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,iBAAQ,GAAG;AACzB;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA,8BAA8B;;AAE9B;AACA;AACA;AACA;AACA;AACA;;AAEA,8BAA8B,cAAc;AAC5C;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,WAAW,qCAAO;AAClB,uBAAuB,2BAA2B;AAClD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,gBAAM,oCAAoC,YAAY;AAC1E;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;;AAEA,4BAA4B,4CAAc;AAC1C;AACA,mEAAmE;AACnE;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,iBAAQ,GAAG;AAC7B,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,UAAU;AACzB;AACA,GAAG;AACH;AACA;;AAEA;;AAEA,2BAA2B,4CAAc;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,aAAa,iBAAQ,GAAG;AACxB;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA,wCAAwC,iCAAc;AACtD;AACA;AACA,uBAAuB,0CAAa;AACpC,OAAO;AACP,oBAAoB;AACpB,KAAK;;AAEL;;AAEA;AACA;;AAEA,oBAAoB,oBAAU,6BAA6B,EAAE,wBAAe,0CAA0C,wBAAe;AACrI;AACA,OAAO,IAAI,wBAAe,yEAAyE,wBAAe;AAClH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,UAAU,4BAAQ;AAClB;AACA;AACA;AACA,aAAa,yCAAyC;AACtD;AACA;AACA;AACA;AACA;;AAEA,0BAA0B,oBAAU,8BAA8B,EAAE,wBAAe,6CAA6C,wBAAe,yDAAyD,wBAAe;;AAEvN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO,0DAA0D,kBAAkB,EAAE;AACrF;AACA,QAAQ,4BAAQ;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC,E;;;;;AC9UD;AAAA;AAAA;AAA8B;AACE;AACL;;AAEmD;;AAE9E,MAAM,WAAW,OAAO;;AAExB;AACA,MAAM;AACN,UAAU,uBAAI;AACd,gBAAgB,MAAM,OAAO,MAAM;AACnC,gBAAgB,OAAO,OAAO,OAAO;AACrC;;AAEe,4EAAM,E","file":"js/chunk-vendors~3f03297a.8922eba5.js","sourcesContent":["import _typeof from 'babel-runtime/helpers/typeof';\nimport PropsTypes from '../_util/vue-types';\n\nexport var UploadFileStatus = PropsTypes.oneOf(['error', 'success', 'done', 'uploading', 'removed']);\n\n// export const HttpRequestHeader {\n//   [key: string]: string;\n// }\n\n// export const UploadFile = PropsTypes.shape({\n//   uid: PropsTypes.oneOfType([\n//     PropsTypes.string,\n//     PropsTypes.number,\n//   ]),\n//   size: PropsTypes.number,\n//   name: PropsTypes.string,\n//   filename: PropsTypes.string,\n//   lastModified: PropsTypes.number,\n//   lastModifiedDate: PropsTypes.any,\n//   url: PropsTypes.string,\n//   status: UploadFileStatus,\n//   percent: PropsTypes.number,\n//   thumbUrl: PropsTypes.string,\n//   originFileObj: PropsTypes.any,\n//   response: PropsTypes.any,\n//   error: PropsTypes.any,\n//   linkProps: PropsTypes.any,\n//   type: PropsTypes.string,\n// }).loose\n\nfunction UploadFile(_ref) {\n  var uid = _ref.uid,\n      name = _ref.name;\n\n  if (!uid && uid !== 0) return false;\n  if (!['string', 'number'].includes(typeof uid === 'undefined' ? 'undefined' : _typeof(uid))) return false;\n  if (name === '' || typeof name !== 'string') return false;\n  return true;\n}\n\nexport var UploadChangeParam = {\n  file: PropsTypes.custom(UploadFile),\n  fileList: PropsTypes.arrayOf(PropsTypes.custom(UploadFile)),\n  event: PropsTypes.object\n};\n\nexport var ShowUploadListInterface = PropsTypes.shape({\n  showRemoveIcon: PropsTypes.bool,\n  showPreviewIcon: PropsTypes.bool\n}).loose;\n\nexport var UploadLocale = PropsTypes.shape({\n  uploading: PropsTypes.string,\n  removeFile: PropsTypes.string,\n  uploadError: PropsTypes.string,\n  previewFile: PropsTypes.string\n}).loose;\n\nexport var UploadProps = {\n  type: PropsTypes.oneOf(['drag', 'select']),\n  name: PropsTypes.string,\n  defaultFileList: PropsTypes.arrayOf(PropsTypes.custom(UploadFile)),\n  fileList: PropsTypes.arrayOf(PropsTypes.custom(UploadFile)),\n  action: PropsTypes.oneOfType([PropsTypes.string, PropsTypes.func]),\n  directory: PropsTypes.bool,\n  data: PropsTypes.oneOfType([PropsTypes.object, PropsTypes.func]),\n  headers: PropsTypes.object,\n  showUploadList: PropsTypes.oneOfType([PropsTypes.bool, ShowUploadListInterface]),\n  multiple: PropsTypes.bool,\n  accept: PropsTypes.string,\n  beforeUpload: PropsTypes.func,\n  // onChange: PropsTypes.func,\n  listType: PropsTypes.oneOf(['text', 'picture', 'picture-card']),\n  // className: PropsTypes.string,\n  // onPreview: PropsTypes.func,\n  remove: PropsTypes.func,\n  supportServerRender: PropsTypes.bool,\n  // style: PropsTypes.object,\n  disabled: PropsTypes.bool,\n  prefixCls: PropsTypes.string,\n  customRequest: PropsTypes.func,\n  withCredentials: PropsTypes.bool,\n  openFileDialogOnClick: PropsTypes.bool,\n  locale: UploadLocale,\n  height: PropsTypes.number,\n  id: PropsTypes.string\n};\n\nexport var UploadState = {\n  fileList: PropsTypes.arrayOf(PropsTypes.custom(UploadFile)),\n  dragState: PropsTypes.string\n};\n\nexport var UploadListProps = {\n  listType: PropsTypes.oneOf(['text', 'picture', 'picture-card']),\n  // onPreview: PropsTypes.func,\n  // onRemove: PropsTypes.func,\n  // items: PropsTypes.arrayOf(UploadFile),\n  items: PropsTypes.arrayOf(PropsTypes.custom(UploadFile)),\n  // items: PropsTypes.any,\n  progressAttr: PropsTypes.object,\n  prefixCls: PropsTypes.string,\n  showRemoveIcon: PropsTypes.bool,\n  showPreviewIcon: PropsTypes.bool,\n  locale: UploadLocale\n};","import _extends from 'babel-runtime/helpers/extends';\nimport { getOptionProps } from '../_util/props-util';\nimport Upload from './Upload';\nimport { UploadProps } from './interface';\n\nexport default {\n  name: 'AUploadDragger',\n  props: UploadProps,\n  render: function render() {\n    var h = arguments[0];\n\n    var props = getOptionProps(this);\n    var draggerProps = {\n      props: _extends({}, props, {\n        type: 'drag'\n      }),\n      on: this.$listeners,\n      style: { height: this.height }\n    };\n    return h(\n      Upload,\n      draggerProps,\n      [this.$slots['default']]\n    );\n  }\n};","import _mergeJSXProps from 'babel-helper-vue-jsx-merge-props';\nimport _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _extends from 'babel-runtime/helpers/extends';\nimport BaseMixin from '../_util/BaseMixin';\nimport { getOptionProps, initDefaultProps } from '../_util/props-util';\nimport getTransitionProps from '../_util/getTransitionProps';\nimport { ConfigConsumerProps } from '../config-provider';\nimport Icon from '../icon';\nimport Tooltip from '../tooltip';\nimport Progress from '../progress';\nimport classNames from 'classnames';\nimport { UploadListProps } from './interface';\n\nvar imageTypes = ['image', 'webp', 'png', 'svg', 'gif', 'jpg', 'jpeg', 'bmp', 'dpg', 'ico'];\n// https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readAsDataURL\nvar previewFile = function previewFile(file, callback) {\n  if (file.type && !imageTypes.includes(file.type)) {\n    callback('');\n  }\n  var reader = new window.FileReader();\n  reader.onloadend = function () {\n    return callback(reader.result);\n  };\n  reader.readAsDataURL(file);\n};\n\nvar extname = function extname(url) {\n  if (!url) {\n    return '';\n  }\n  var temp = url.split('/');\n  var filename = temp[temp.length - 1];\n  var filenameWithoutSuffix = filename.split(/#|\\?/)[0];\n  return (/\\.[^./\\\\]*$/.exec(filenameWithoutSuffix) || [''])[0];\n};\n\nvar isImageUrl = function isImageUrl(file) {\n  if (imageTypes.includes(file.type)) {\n    return true;\n  }\n  var url = file.thumbUrl || file.url;\n  var extension = extname(url);\n  if (/^data:image\\//.test(url) || /(webp|svg|png|gif|jpg|jpeg|bmp|dpg|ico)$/i.test(extension)) {\n    return true;\n  } else if (/^data:/.test(url)) {\n    // other file types of base64\n    return false;\n  } else if (extension) {\n    // other file types which have extension\n    return false;\n  }\n  return true;\n};\n\nexport default {\n  name: 'AUploadList',\n  mixins: [BaseMixin],\n  props: initDefaultProps(UploadListProps, {\n    listType: 'text', // or picture\n    progressAttr: {\n      strokeWidth: 2,\n      showInfo: false\n    },\n    showRemoveIcon: true,\n    showPreviewIcon: true\n  }),\n  inject: {\n    configProvider: { 'default': function _default() {\n        return ConfigConsumerProps;\n      } }\n  },\n  updated: function updated() {\n    var _this = this;\n\n    this.$nextTick(function () {\n      if (_this.listType !== 'picture' && _this.listType !== 'picture-card') {\n        return;\n      }\n      (_this.items || []).forEach(function (file) {\n        if (typeof document === 'undefined' || typeof window === 'undefined' || !window.FileReader || !window.File || !(file.originFileObj instanceof window.File) || file.thumbUrl !== undefined) {\n          return;\n        }\n        /*eslint-disable */\n        file.thumbUrl = '';\n        /*eslint -enable */\n        previewFile(file.originFileObj, function (previewDataUrl) {\n          /*eslint-disable */\n          file.thumbUrl = previewDataUrl;\n          /*eslint -enable todo */\n          // this.forceUpdate()\n        });\n      });\n    });\n  },\n\n  methods: {\n    handleClose: function handleClose(file) {\n      this.$emit('remove', file);\n    },\n    handlePreview: function handlePreview(file, e) {\n      var preview = this.$listeners.preview;\n\n      if (!preview) {\n        return;\n      }\n      e.preventDefault();\n      return this.$emit('preview', file);\n    }\n  },\n  render: function render() {\n    var _this2 = this,\n        _classNames2;\n\n    var h = arguments[0];\n\n    var _getOptionProps = getOptionProps(this),\n        customizePrefixCls = _getOptionProps.prefixCls,\n        _getOptionProps$items = _getOptionProps.items,\n        items = _getOptionProps$items === undefined ? [] : _getOptionProps$items,\n        listType = _getOptionProps.listType,\n        showPreviewIcon = _getOptionProps.showPreviewIcon,\n        showRemoveIcon = _getOptionProps.showRemoveIcon,\n        locale = _getOptionProps.locale;\n\n    var getPrefixCls = this.configProvider.getPrefixCls;\n    var prefixCls = getPrefixCls('upload', customizePrefixCls);\n\n    var list = items.map(function (file) {\n      var _classNames;\n\n      var progress = void 0;\n      var icon = h(Icon, {\n        attrs: { type: file.status === 'uploading' ? 'loading' : 'paper-clip' }\n      });\n\n      if (listType === 'picture' || listType === 'picture-card') {\n        if (listType === 'picture-card' && file.status === 'uploading') {\n          icon = h(\n            'div',\n            { 'class': prefixCls + '-list-item-uploading-text' },\n            [locale.uploading]\n          );\n        } else if (!file.thumbUrl && !file.url) {\n          icon = h(Icon, { 'class': prefixCls + '-list-item-thumbnail', attrs: { type: 'picture', theme: 'twoTone' }\n          });\n        } else {\n          var thumbnail = isImageUrl(file) ? h('img', {\n            attrs: { src: file.thumbUrl || file.url, alt: file.name }\n          }) : h(Icon, {\n            attrs: { type: 'file', theme: 'twoTone' },\n            'class': prefixCls + '-list-item-icon' });\n          icon = h(\n            'a',\n            {\n              'class': prefixCls + '-list-item-thumbnail',\n              on: {\n                'click': function click(e) {\n                  return _this2.handlePreview(file, e);\n                }\n              },\n              attrs: {\n                href: file.url || file.thumbUrl,\n                target: '_blank',\n                rel: 'noopener noreferrer'\n              }\n            },\n            [thumbnail]\n          );\n        }\n      }\n\n      if (file.status === 'uploading') {\n        var progressProps = {\n          props: _extends({}, _this2.progressAttr, {\n            type: 'line',\n            percent: file.percent\n          })\n        };\n        // show loading icon if upload progress listener is disabled\n        var loadingProgress = 'percent' in file ? h(Progress, progressProps) : null;\n\n        progress = h(\n          'div',\n          { 'class': prefixCls + '-list-item-progress', key: 'progress' },\n          [loadingProgress]\n        );\n      }\n      var infoUploadingClass = classNames((_classNames = {}, _defineProperty(_classNames, prefixCls + '-list-item', true), _defineProperty(_classNames, prefixCls + '-list-item-' + file.status, true), _classNames));\n      var linkProps = typeof file.linkProps === 'string' ? JSON.parse(file.linkProps) : file.linkProps;\n      var preview = file.url ? h(\n        'a',\n        _mergeJSXProps([{\n          attrs: {\n            target: '_blank',\n            rel: 'noopener noreferrer',\n\n            title: file.name\n          },\n          'class': prefixCls + '-list-item-name' }, linkProps, {\n          attrs: {\n            href: file.url\n          },\n          on: {\n            'click': function click(e) {\n              return _this2.handlePreview(file, e);\n            }\n          }\n        }]),\n        [file.name]\n      ) : h(\n        'span',\n        {\n          'class': prefixCls + '-list-item-name',\n          on: {\n            'click': function click(e) {\n              return _this2.handlePreview(file, e);\n            }\n          },\n          attrs: {\n            title: file.name\n          }\n        },\n        [file.name]\n      );\n      var style = file.url || file.thumbUrl ? undefined : {\n        pointerEvents: 'none',\n        opacity: 0.5\n      };\n      var previewIcon = showPreviewIcon ? h(\n        'a',\n        {\n          attrs: {\n            href: file.url || file.thumbUrl,\n            target: '_blank',\n            rel: 'noopener noreferrer',\n\n            title: locale.previewFile\n          },\n          style: style,\n          on: {\n            'click': function click(e) {\n              return _this2.handlePreview(file, e);\n            }\n          }\n        },\n        [h(Icon, {\n          attrs: { type: 'eye-o' }\n        })]\n      ) : null;\n      var iconProps = {\n        props: {\n          type: 'delete',\n          title: locale.removeFile\n        },\n        on: {\n          click: function click() {\n            _this2.handleClose(file);\n          }\n        }\n      };\n      var iconProps1 = _extends({}, iconProps, { props: { type: 'close' } });\n      var removeIcon = showRemoveIcon ? h(Icon, iconProps) : null;\n      var removeIconClose = showRemoveIcon ? h(Icon, iconProps1) : null;\n      var actions = listType === 'picture-card' && file.status !== 'uploading' ? h(\n        'span',\n        { 'class': prefixCls + '-list-item-actions' },\n        [previewIcon, removeIcon]\n      ) : removeIconClose;\n      var message = void 0;\n      if (file.response && typeof file.response === 'string') {\n        message = file.response;\n      } else {\n        message = file.error && file.error.statusText || locale.uploadError;\n      }\n      var iconAndPreview = file.status === 'error' ? h(\n        Tooltip,\n        {\n          attrs: { title: message }\n        },\n        [icon, preview]\n      ) : h('span', [icon, preview]);\n      var transitionProps = getTransitionProps('fade');\n      return h(\n        'div',\n        { 'class': infoUploadingClass, key: file.uid },\n        [h(\n          'div',\n          { 'class': prefixCls + '-list-item-info' },\n          [iconAndPreview]\n        ), actions, h(\n          'transition',\n          transitionProps,\n          [progress]\n        )]\n      );\n    });\n    var listClassNames = classNames((_classNames2 = {}, _defineProperty(_classNames2, prefixCls + '-list', true), _defineProperty(_classNames2, prefixCls + '-list-' + listType, true), _classNames2));\n    var animationDirection = listType === 'picture-card' ? 'animate-inline' : 'animate';\n    var transitionGroupProps = getTransitionProps(prefixCls + '-' + animationDirection);\n    return h(\n      'transition-group',\n      _mergeJSXProps([transitionGroupProps, {\n        attrs: { tag: 'div' },\n        'class': listClassNames }]),\n      [list]\n    );\n  }\n};","import _extends from 'babel-runtime/helpers/extends';\nexport function T() {\n  return true;\n}\n\n// Fix IE file.status problem\n// via coping a new Object\nexport function fileToObject(file) {\n  return _extends({}, file, {\n    lastModified: file.lastModified,\n    lastModifiedDate: file.lastModifiedDate,\n    name: file.name,\n    size: file.size,\n    type: file.type,\n    uid: file.uid,\n    percent: 0,\n    originFileObj: file\n  });\n}\n\n/**\n * 生成Progress percent: 0.1 -> 0.98\n *   - for ie\n */\nexport function genPercentAdd() {\n  var k = 0.1;\n  var i = 0.01;\n  var end = 0.98;\n  return function (s) {\n    var start = s;\n    if (start >= end) {\n      return start;\n    }\n\n    start += k;\n    k = k - i;\n    if (k < 0.001) {\n      k = 0.001;\n    }\n    return start;\n  };\n}\n\nexport function getFileItem(file, fileList) {\n  var matchKey = file.uid !== undefined ? 'uid' : 'name';\n  return fileList.filter(function (item) {\n    return item[matchKey] === file[matchKey];\n  })[0];\n}\n\nexport function removeFileItem(file, fileList) {\n  var matchKey = file.uid !== undefined ? 'uid' : 'name';\n  var removed = fileList.filter(function (item) {\n    return item[matchKey] !== file[matchKey];\n  });\n  if (removed.length === fileList.length) {\n    return null;\n  }\n  return removed;\n}","import _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _extends from 'babel-runtime/helpers/extends';\nimport classNames from 'classnames';\nimport uniqBy from 'lodash/uniqBy';\nimport findIndex from 'lodash/findIndex';\nimport VcUpload from '../vc-upload';\nimport BaseMixin from '../_util/BaseMixin';\nimport { getOptionProps, initDefaultProps, hasProp } from '../_util/props-util';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport defaultLocale from '../locale-provider/default';\nimport { ConfigConsumerProps } from '../config-provider';\nimport Dragger from './Dragger';\nimport UploadList from './UploadList';\nimport { UploadProps } from './interface';\nimport { T, fileToObject, genPercentAdd, getFileItem, removeFileItem } from './utils';\n\nexport { UploadProps };\n\nexport default {\n  name: 'AUpload',\n  mixins: [BaseMixin],\n  inheritAttrs: false,\n  Dragger: Dragger,\n  props: initDefaultProps(UploadProps, {\n    type: 'select',\n    multiple: false,\n    action: '',\n    data: {},\n    accept: '',\n    beforeUpload: T,\n    showUploadList: true,\n    listType: 'text', // or pictrue\n    disabled: false,\n    supportServerRender: true\n  }),\n  inject: {\n    configProvider: { 'default': function _default() {\n        return ConfigConsumerProps;\n      } }\n  },\n  // recentUploadStatus: boolean | PromiseLike<any>;\n  data: function data() {\n    this.progressTimer = null;\n    return {\n      sFileList: this.fileList || this.defaultFileList || [],\n      dragState: 'drop'\n    };\n  },\n\n  watch: {\n    fileList: function fileList(val) {\n      this.sFileList = val || [];\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.clearProgressTimer();\n  },\n\n  methods: {\n    onStart: function onStart(file) {\n      var targetItem = fileToObject(file);\n      targetItem.status = 'uploading';\n      var nextFileList = this.sFileList.concat();\n      var fileIndex = findIndex(nextFileList, function (_ref) {\n        var uid = _ref.uid;\n        return uid === targetItem.uid;\n      });\n      if (fileIndex === -1) {\n        nextFileList.push(targetItem);\n      } else {\n        nextFileList[fileIndex] = targetItem;\n      }\n      this.onChange({\n        file: targetItem,\n        fileList: nextFileList\n      });\n      // fix ie progress\n      if (!window.FormData) {\n        this.autoUpdateProgress(0, targetItem);\n      }\n    },\n    autoUpdateProgress: function autoUpdateProgress(_, file) {\n      var _this = this;\n\n      var getPercent = genPercentAdd();\n      var curPercent = 0;\n      this.clearProgressTimer();\n      this.progressTimer = setInterval(function () {\n        curPercent = getPercent(curPercent);\n        _this.onProgress({\n          percent: curPercent * 100\n        }, file);\n      }, 200);\n    },\n    onSuccess: function onSuccess(response, file) {\n      this.clearProgressTimer();\n      try {\n        if (typeof response === 'string') {\n          response = JSON.parse(response);\n        }\n      } catch (e) {\n        /* do nothing */\n      }\n      var fileList = this.sFileList;\n      var targetItem = getFileItem(file, fileList);\n      // removed\n      if (!targetItem) {\n        return;\n      }\n      targetItem.status = 'done';\n      targetItem.response = response;\n      this.onChange({\n        file: _extends({}, targetItem),\n        fileList: fileList\n      });\n    },\n    onProgress: function onProgress(e, file) {\n      var fileList = this.sFileList;\n      var targetItem = getFileItem(file, fileList);\n      // removed\n      if (!targetItem) {\n        return;\n      }\n      targetItem.percent = e.percent;\n      this.onChange({\n        event: e,\n        file: _extends({}, targetItem),\n        fileList: this.sFileList\n      });\n    },\n    onError: function onError(error, response, file) {\n      this.clearProgressTimer();\n      var fileList = this.sFileList;\n      var targetItem = getFileItem(file, fileList);\n      // removed\n      if (!targetItem) {\n        return;\n      }\n      targetItem.error = error;\n      targetItem.response = response;\n      targetItem.status = 'error';\n      this.onChange({\n        file: _extends({}, targetItem),\n        fileList: fileList\n      });\n    },\n    onReject: function onReject(fileList) {\n      this.$emit('reject', fileList);\n    },\n    handleRemove: function handleRemove(file) {\n      var _this2 = this;\n\n      var remove = this.remove;\n      var status = file.status;\n\n      file.status = 'removed'; // eslint-disable-line\n\n      Promise.resolve(typeof remove === 'function' ? remove(file) : remove).then(function (ret) {\n        // Prevent removing file\n        if (ret === false) {\n          file.status = status;\n          return;\n        }\n\n        var removedFileList = removeFileItem(file, _this2.sFileList);\n        if (removedFileList) {\n          _this2.onChange({\n            file: file,\n            fileList: removedFileList\n          });\n        }\n      });\n    },\n    handleManualRemove: function handleManualRemove(file) {\n      if (this.$refs.uploadRef) {\n        this.$refs.uploadRef.abort(file);\n      }\n      this.handleRemove(file);\n    },\n    onChange: function onChange(info) {\n      if (!hasProp(this, 'fileList')) {\n        this.setState({ sFileList: info.fileList });\n      }\n      this.$emit('change', info);\n    },\n    onFileDrop: function onFileDrop(e) {\n      this.setState({\n        dragState: e.type\n      });\n    },\n    reBeforeUpload: function reBeforeUpload(file, fileList) {\n      if (!this.beforeUpload) {\n        return true;\n      }\n      var result = this.beforeUpload(file, fileList);\n      if (result === false) {\n        this.onChange({\n          file: file,\n          fileList: uniqBy(this.sFileList.concat(fileList.map(fileToObject)), function (item) {\n            return item.uid;\n          })\n        });\n        return false;\n      }\n      if (result && result.then) {\n        return result;\n      }\n      return true;\n    },\n    clearProgressTimer: function clearProgressTimer() {\n      clearInterval(this.progressTimer);\n    },\n    renderUploadList: function renderUploadList(locale) {\n      var h = this.$createElement;\n\n      var _getOptionProps = getOptionProps(this),\n          _getOptionProps$showU = _getOptionProps.showUploadList,\n          showUploadList = _getOptionProps$showU === undefined ? {} : _getOptionProps$showU,\n          listType = _getOptionProps.listType;\n\n      var showRemoveIcon = showUploadList.showRemoveIcon,\n          showPreviewIcon = showUploadList.showPreviewIcon;\n\n      var uploadListProps = {\n        props: {\n          listType: listType,\n          items: this.sFileList,\n          showRemoveIcon: showRemoveIcon,\n          showPreviewIcon: showPreviewIcon,\n          locale: _extends({}, locale, this.$props.locale)\n        },\n        on: {\n          remove: this.handleManualRemove\n        }\n      };\n      if (this.$listeners.preview) {\n        uploadListProps.on.preview = this.$listeners.preview;\n      }\n      return h(UploadList, uploadListProps);\n    }\n  },\n  render: function render() {\n    var _classNames2;\n\n    var h = arguments[0];\n\n    var _getOptionProps2 = getOptionProps(this),\n        customizePrefixCls = _getOptionProps2.prefixCls,\n        showUploadList = _getOptionProps2.showUploadList,\n        listType = _getOptionProps2.listType,\n        type = _getOptionProps2.type,\n        disabled = _getOptionProps2.disabled;\n\n    var getPrefixCls = this.configProvider.getPrefixCls;\n    var prefixCls = getPrefixCls('upload', customizePrefixCls);\n\n    var vcUploadProps = {\n      props: _extends({}, this.$props, {\n        prefixCls: prefixCls,\n        beforeUpload: this.reBeforeUpload\n      }),\n      on: {\n        // ...this.$listeners,\n        start: this.onStart,\n        error: this.onError,\n        progress: this.onProgress,\n        success: this.onSuccess,\n        reject: this.onReject\n      },\n      ref: 'uploadRef',\n      attrs: this.$attrs\n    };\n\n    var uploadList = showUploadList ? h(LocaleReceiver, {\n      attrs: {\n        componentName: 'Upload',\n        defaultLocale: defaultLocale.Upload\n      },\n      scopedSlots: { 'default': this.renderUploadList }\n    }) : null;\n\n    var children = this.$slots['default'];\n\n    if (type === 'drag') {\n      var _classNames;\n\n      var dragCls = classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, prefixCls + '-drag', true), _defineProperty(_classNames, prefixCls + '-drag-uploading', this.sFileList.some(function (file) {\n        return file.status === 'uploading';\n      })), _defineProperty(_classNames, prefixCls + '-drag-hover', this.dragState === 'dragover'), _defineProperty(_classNames, prefixCls + '-disabled', disabled), _classNames));\n      return h('span', [h(\n        'div',\n        {\n          'class': dragCls,\n          on: {\n            'drop': this.onFileDrop,\n            'dragover': this.onFileDrop,\n            'dragleave': this.onFileDrop\n          }\n        },\n        [h(\n          VcUpload,\n          vcUploadProps,\n          [h(\n            'div',\n            { 'class': prefixCls + '-drag-container' },\n            [children]\n          )]\n        )]\n      ), uploadList]);\n    }\n\n    var uploadButtonCls = classNames(prefixCls, (_classNames2 = {}, _defineProperty(_classNames2, prefixCls + '-select', true), _defineProperty(_classNames2, prefixCls + '-select-' + listType, true), _defineProperty(_classNames2, prefixCls + '-disabled', disabled), _classNames2));\n\n    // Remove id to avoid open by label when trigger is hidden\n    // https://github.com/ant-design/ant-design/issues/14298\n    if (!children) {\n      delete vcUploadProps.props.id;\n    }\n\n    var uploadButton = h(\n      'div',\n      { 'class': uploadButtonCls, style: children ? undefined : { display: 'none' } },\n      [h(\n        VcUpload,\n        vcUploadProps,\n        [children]\n      )]\n    );\n\n    if (listType === 'picture-card') {\n      return h('span', [uploadList, uploadButton]);\n    }\n    return h('span', [uploadButton, uploadList]);\n  }\n};","import Upload from './Upload';\nimport Dragger from './Dragger';\nimport Base from '../base';\n\nexport { UploadProps, UploadListProps, UploadChangeParam } from './interface';\n\nUpload.Dragger = Dragger;\n\n/* istanbul ignore next */\nUpload.install = function (Vue) {\n  Vue.use(Base);\n  Vue.component(Upload.name, Upload);\n  Vue.component(Dragger.name, Dragger);\n};\n\nexport default Upload;"],"sourceRoot":""}